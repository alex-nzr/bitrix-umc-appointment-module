{"version":3,"file":"bx_popup.bundle.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/scripts/utils/functions.js","../src/scripts/utils/eventManager.js","../src/scripts/utils/renderer.js","../src/types/params.js","../src/scripts/appointment/app.js","../src/scripts/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","//@flow\r\n\r\n/**\r\n * add phone mask\r\n * @param input\r\n * @param mask\r\n */\r\nexport function maskInput(input: HTMLInputElement, mask: string): void\r\n{\r\n    const value = input.value;\r\n    const literalPattern = /[0]/;\r\n    const numberPattern = /[0-9]/;\r\n\r\n    let newValue = \"\";\r\n\r\n    let valueIndex = 0;\r\n\r\n    for (let i = 0; i < mask.length; i++) {\r\n        if (i >= value.length) break;\r\n        if (mask[i] === \"0\" && !numberPattern.test(value[valueIndex])) break;\r\n        while (!literalPattern.test(mask[i])) {\r\n            if (value[valueIndex] === mask[i]) break;\r\n            newValue += mask[i++];\r\n        }\r\n        newValue += value[valueIndex++];\r\n    }\r\n\r\n    input.value = newValue;\r\n}\r\n\r\nexport function convertHexToHsl(hex: string): any {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    if (result)\r\n    {\r\n        let r = parseInt(result[1], 16);\r\n        let g = parseInt(result[2], 16);\r\n        let b = parseInt(result[3], 16);\r\n\r\n        r /= 255; g /= 255; b /= 255;\r\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        let h = 0, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            const d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        s = s*100;\r\n        s = Math.round(s);\r\n        l = l*100;\r\n        l = Math.round(l);\r\n        h = Math.round(360*h);\r\n\r\n        //`hsl(${h}, ${s}%, ${l}%)`\r\n        return {\r\n            h: h,\r\n            s: `${s}%`,\r\n            l: `${l}%`,\r\n        };\r\n    }\r\n    return null;\r\n}","import {Event} from 'main.core';\r\n\r\nexport class EventManager extends Event.EventEmitter{\r\n    static fullDataLoaded  = 'BX.FirstBit.Appointment:dataLoaded';\r\n    static clinicsRendered = 'BX.FirstBit.Appointment:clinicsRendered';\r\n    static formStepChanged  = 'BX.FirstBit.Appointment:formStepChanged';\r\n\r\n    static bind(target: Element, eventName: string, handler: (event: Event) => void, options?: {\r\n        capture?: boolean,\r\n        once?: boolean,\r\n        passive?: boolean,\r\n    }): void{\r\n        Event.bind(target, eventName, handler, options);\r\n    }\r\n}","import styles from \"../../styles/app.scss\";\r\n\r\nexport class Renderer\r\n{\r\n    constructor(styles, application){\r\n        this.styles = styles;\r\n        this.application = application;\r\n    }\r\n\r\n    getAppHtmlSkeleton()\r\n    {\r\n        return BX.create('div', {\r\n            attrs: {\r\n                id: this.application.selectors.overlayId,\r\n                className: this.styles['appointment-popup-overlay']\r\n            },\r\n            children: [\r\n                BX.create('form', {\r\n                    attrs: {\r\n                        id: this.application.selectors.formId,\r\n                        className: this.styles['appointment-form']\r\n                    },\r\n                    children: [\r\n                        BX.create('span', {\r\n                            attrs: {\r\n                                id: this.styles['appointment-form-close'],\r\n                            },\r\n                            html: '&#10006;'\r\n                        }),\r\n                        this.getFormFirstBlock(),\r\n                        this.getFormSecondBlock(),\r\n                        this.getFormThirdBlock(),\r\n                        this.getFormMessageBlock(),\r\n                        this.getFormPrivacyBlock(),\r\n                        this.getFormResultBlock(),\r\n                        this.getFormLoaderBlock(),\r\n                    ]\r\n                })\r\n            ]\r\n        });\r\n    }\r\n\r\n    getFormFirstBlock(){\r\n        const doctorBtn = this.getFormBtn(BX.message(\"FIRSTBIT_JS_FORM_BTN_DOCTOR_FIRST\"), () => {\r\n            this.application.setSelectionDoctorBeforeService(true);\r\n        });\r\n        const serviceBtn = this.getFormBtn(BX.message(\"FIRSTBIT_JS_FORM_BTN_SERVICE_FIRST\"), () => {\r\n            this.application.setSelectionDoctorBeforeService(false);\r\n        });\r\n        return BX.create('div', {\r\n            attrs: {\r\n                className: styles['appointment-form-step'],\r\n                id: this.application.selectors.formStepIds.one\r\n            },\r\n            children: [\r\n                ...(this.getSelectionNodes(\r\n                    [this.application.dataKeys.clinicsKey, this.application.dataKeys.specialtiesKey]\r\n                )),\r\n                this.getFormButtonsBlock([doctorBtn, serviceBtn])\r\n            ]\r\n        });\r\n    }\r\n\r\n    getFormSecondBlock(){\r\n        const btnPrev = this.getFormBtn(BX.message('FIRSTBIT_JS_FORM_BTN_PREV'), () => {\r\n            this.application.changeFormStep(this.application.formStepNodes.one);\r\n        });\r\n        const btnNext = this.getFormBtn(BX.message('FIRSTBIT_JS_FORM_BTN_NEXT'), () => {\r\n            this.application.changeFormStep(this.application.formStepNodes.three);\r\n        });\r\n        return BX.create('div', {\r\n            attrs: {\r\n                className: `${styles['appointment-form-step']} ${styles['hidden']}`,\r\n                id: this.application.selectors.formStepIds.two\r\n            },\r\n            children: [\r\n                ...(this.getSelectionNodes([\r\n                    this.application.dataKeys.employeesKey,\r\n                    this.application.dataKeys.servicesKey,\r\n                    this.application.dataKeys.scheduleKey\r\n                ])),\r\n                this.getFormButtonsBlock([btnPrev, btnNext])\r\n            ]\r\n        });\r\n    }\r\n\r\n    getFormThirdBlock(){\r\n        return BX.create('div', {\r\n            attrs: {\r\n                className: `${styles['appointment-form-step']} ${styles['hidden']}`,\r\n                id: this.application.selectors.formStepIds.three\r\n            },\r\n            children: [\r\n                ...(this.getTextNodes()),\r\n                this.getFormButtonsBlock([this.getFormSubmitBtn()])\r\n            ]\r\n        });\r\n    }\r\n\r\n    getFormMessageBlock(){\r\n        return BX.create('p', {\r\n            attrs: {\r\n                id: this.application.selectors.messageNodeId,\r\n            },\r\n        });\r\n    }\r\n\r\n    getFormButtonsBlock(buttons: HTMLElement[]){\r\n        return BX.create('div', {\r\n            attrs: {\r\n                className: this.styles['appointment-form-button-wrapper'],\r\n            },\r\n            children: buttons\r\n        });\r\n    }\r\n\r\n    getFormSubmitBtn(){\r\n        return BX.create('button', {\r\n            attrs: {\r\n                type: \"submit\",\r\n                id: this.application.selectors.submitBtnId,\r\n                className: this.styles['appointment-form-button'],\r\n            },\r\n            text: BX.message('FIRSTBIT_JS_FORM_BTN_TEXT')\r\n        });\r\n    }\r\n\r\n    getFormBtn(text, handler){\r\n        return BX.create('button', {\r\n            attrs: {\r\n                type: \"button\",\r\n                className: this.styles['appointment-form-button'],\r\n                disabled: \"true\"\r\n            },\r\n            text: text,\r\n            events: {\r\n                click: handler\r\n            }\r\n        });\r\n    }\r\n\r\n    getFormPrivacyBlock(){\r\n        return BX.create('p', {\r\n            attrs: {\r\n                className: this.styles['appointment-info-message'],\r\n            },\r\n            children: [\r\n                BX.create('span', {\r\n                    text: `${BX.message('FIRSTBIT_JS_FORM_CONFIRM_INFO_TEXT')} `\r\n                }),\r\n                BX.create('a', {\r\n                    attrs: {\r\n                        href: this.application.initParams['privacyPageLink'],\r\n                        target: '_blank'\r\n                    },\r\n                    text: BX.message('FIRSTBIT_JS_FORM_CONFIRM_INFO_LINK')\r\n                }),\r\n            ]\r\n        });\r\n    }\r\n\r\n    getFormResultBlock(){\r\n        return BX.create('div', {\r\n            attrs: {\r\n                id: this.application.selectors.appResultBlockId\r\n            },\r\n            children: [\r\n                BX.create('p', {\r\n                    text: ''\r\n                }),\r\n            ]\r\n        });\r\n    }\r\n\r\n    getFormLoaderBlock(){\r\n        return BX.create('div', {\r\n            attrs: {\r\n                className: this.styles['default-loader-wrapper']\r\n            },\r\n            html: `<svg class=\"${this.styles['default-loader-circular']}\" viewBox=\"25 25 50 50\">\r\n                     <circle class=\"${this.styles['default-loader-path']}\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"></circle>\r\n                   </svg>`\r\n        });\r\n    }\r\n\r\n    getSelectionNodes(blockKeys: string[])\r\n    {\r\n        const arNodes = [];\r\n        blockKeys.length && blockKeys.forEach(key => {\r\n            if (!this.application.selectionBlocks.hasOwnProperty(key)){\r\n                return;\r\n            }\r\n\r\n            const selected = BX.create('p', {\r\n                attrs: {\r\n                    id: this.application.selectionBlocks[key].selectedId,\r\n                    className: this.styles['selection-item-selected']\r\n                },\r\n                text: this.application.defaultText[key],\r\n                events: {\r\n                    click: () => this.application.toggleSelectionList(key, selected, list)\r\n                }\r\n            });\r\n            const list = BX.create('ul', {\r\n                attrs: {\r\n                    id: this.application.selectionBlocks[key].listId,\r\n                    className: `${this.styles['selection-item-list']}`\r\n                },\r\n                text: this.application.defaultText[key]\r\n            });\r\n            const input = BX.create('input', {\r\n                attrs: {\r\n                    id: this.application.selectionBlocks[key].inputId,\r\n                    name: this.application.selectionBlocks[key].inputId,\r\n                    type: 'hidden',\r\n                }\r\n            });\r\n\r\n            const additionalClass = (key === this.application.dataKeys.clinicsKey) ? '' : this.styles['disabled'];\r\n            arNodes.push(\r\n                BX.create('div', {\r\n                    attrs: {\r\n                        id: this.application.selectionBlocks[key].blockId,\r\n                        className: `${this.styles['selection-block']} ${additionalClass}`\r\n                    },\r\n                    children: [ selected, list, input ]\r\n                })\r\n            );\r\n        });\r\n        return arNodes;\r\n    }\r\n\r\n    getTextNodes() {\r\n        const arNodes = [];\r\n\r\n        for(const key in this.application.initParams['textBlocks'])\r\n        {\r\n            if (!this.application.initParams['textBlocks'].hasOwnProperty(key)){\r\n                continue;\r\n            }\r\n            arNodes.push(\r\n                BX.create('label', {\r\n                    attrs: {\r\n                        className: this.styles['appointment-form_input-wrapper'],\r\n                    },\r\n                    children: [\r\n                        BX.create({\r\n                            tag: this.application.initParams['textBlocks'][key][\"type\"] ? 'input' : 'textarea',\r\n                            attrs: this.getTextInputAttrs(this.application.initParams['textBlocks'][key])\r\n                        })\r\n                    ]\r\n                }),\r\n            );\r\n        }\r\n\r\n        return arNodes;\r\n    }\r\n\r\n    getTextInputAttrs(attrs) {\r\n        const preparedAttrs = {}\r\n        for(const attr in attrs)\r\n        {\r\n            if (attrs.hasOwnProperty(attr))\r\n            {\r\n                if (attr === \"class\")\r\n                {\r\n                    preparedAttrs.className = this.styles[ attrs[attr] ];\r\n                }\r\n                else\r\n                {\r\n                    preparedAttrs[attr] = attrs[attr];\r\n                }\r\n            }\r\n        }\r\n        return preparedAttrs;\r\n    }\r\n\r\n    /**\r\n     * Create start button elements\r\n     * @returns {div}\r\n     */\r\n    getDefaultStartBtn() {\r\n        return BX.create('div', {\r\n            attrs: {\r\n                id: this.application.selectors.startBtnWrapId,\r\n                className: this.styles['appointment-button-wrapper']\r\n            },\r\n            children: [\r\n                BX.create('button', {\r\n                    attrs: {\r\n                        id: this.application.selectors.startBtnId,\r\n                    },\r\n                    children: [\r\n                        BX.create('span', {\r\n                            text: BX.message('FIRSTBIT_JS_START_BTN_TEXT')\r\n                        })\r\n                    ]\r\n                })\r\n            ]\r\n        });\r\n    }\r\n\r\n    getRootElement() {\r\n        return BX.create('div', {\r\n            attrs: {\r\n                id: this.application.selectors.rootNodeId\r\n            }\r\n        });\r\n    }\r\n\r\n    renderSelectionItems(listNode, dataKey, items) {\r\n        for(let key in items)\r\n        {\r\n            if(!items.hasOwnProperty(key)) continue;\r\n            if(!this.application.allowToRender(listNode, dataKey, items[key])) continue;\r\n\r\n            if(dataKey === this.application.dataKeys.scheduleKey)\r\n            {\r\n                this.renderScheduleItem(listNode, items[key]);\r\n            }\r\n            else\r\n            {\r\n                if(items[key].hasOwnProperty('price')){\r\n                    const price = Number(items[key]['price']) > 0 ? `<b>${items[key]['price']}</b>&#8381;` : \"\";\r\n                    items[key].fullName = `<p>${items[key].name}<br> <b>${price}</b></p>`;\r\n                }\r\n                const dataAttrs = {\r\n                    uid:  items[key].uid ?? key,\r\n                    name: items[key].fullName ?? items[key].name,\r\n                }\r\n                items[key].duration ? (dataAttrs.duration = items[key].duration): void(0);\r\n\r\n                BX.append(BX.create('li', {\r\n                    dataset: dataAttrs,\r\n                    html: items[key].fullName ?? items[key].name\r\n                }), listNode);\r\n            }\r\n        }\r\n\r\n        if (listNode.children.length === 0){\r\n            BX.append(\r\n                this.createEmptySelectionNode(BX.message(`FIRSTBIT_JS_${dataKey.toUpperCase()}_NOT_FOUND_ERROR`)),\r\n                listNode\r\n            );\r\n        }\r\n        else\r\n        {\r\n            if(dataKey === this.application.dataKeys.scheduleKey){\r\n                this.addHorizontalScrollButtons(listNode);\r\n            }\r\n            this.application.addItemActions(dataKey);\r\n        }\r\n    }\r\n\r\n    renderScheduleItem(scheduleList, scheduleItem) {\r\n        const serviceDuration = this.application.getServiceDuration(scheduleItem);\r\n        const renderCustomIntervals = this.application.useServices && (serviceDuration > 0);\r\n        const timeKey = renderCustomIntervals ? \"freeNotFormatted\" : \"free\";\r\n\r\n        if (scheduleItem['timetable']?.[timeKey]?.length)\r\n        {\r\n            let intervals = scheduleItem['timetable'][timeKey];\r\n\r\n            if (renderCustomIntervals)\r\n            {\r\n                const customIntervals = this.application.getIntervalsForServiceDuration(intervals, serviceDuration*1000);\r\n                if (customIntervals.length === 0) {\r\n                    return;\r\n                }\r\n                else {\r\n                    intervals = customIntervals;\r\n                }\r\n            }\r\n\r\n            let renderDate;\r\n            let renderColumn = undefined;\r\n            intervals.forEach((day, index) => {\r\n                const isLast = (index === (intervals.length - 1));\r\n                if ((day.date !== renderDate) || isLast)\r\n                {\r\n                    renderColumn ? scheduleList.append(renderColumn) : void(0);\r\n                    !isLast || (intervals.length === 1) ? renderColumn = this.createDayColumn(day) : void(0);\r\n                    renderDate = day.date;\r\n                }\r\n\r\n                if (renderColumn)\r\n                {\r\n                    BX.append(BX.create('span', {\r\n                        dataset: {\r\n                            displayDate: `${day['formattedDate']} `,\r\n                            date:         day.date,\r\n                            start:        day.timeBegin,\r\n                            end:          day.timeEnd,\r\n                        },\r\n                        text: `${day['formattedTimeBegin']}`\r\n                    }), renderColumn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    createDayColumn(day){\r\n        const date = this.application.readDateInfo(day.timeBegin);\r\n\r\n        return BX.create('li', {\r\n            children: [\r\n                BX.create('p', {\r\n                    text: `${date.weekDay}\r\n                        ${day['formattedDate']}`\r\n                })\r\n            ]\r\n        });\r\n    }\r\n\r\n    addHorizontalScrollButtons(scroller){\r\n        const item = scroller.querySelector('li');\r\n\r\n        if (scroller && item){\r\n            const itemWidth = scroller.querySelector('li').clientWidth;\r\n\r\n            BX.append(BX.create('div', {\r\n                attrs: {\r\n                    className: styles[\"horizontal-scroll-buttons\"]\r\n                },\r\n                children: [\r\n                    BX.create('button', {\r\n                        attrs: {\r\n                            type: \"button\"\r\n                        },\r\n                        text: \"<\",\r\n                        events: {\r\n                            click: () => {\r\n                                if (scroller.scrollLeft !== 0) {\r\n                                    scroller.scrollBy({ left: -itemWidth*3, top: 0, behavior: 'smooth' });\r\n                                } else {\r\n                                    scroller.scrollTo({ left: scroller.scrollWidth, top: 0, behavior: 'smooth' });\r\n                                }\r\n                            }\r\n                        },\r\n                    }),\r\n                    BX.create('button', {\r\n                        attrs: {\r\n                            type: \"button\"\r\n                        },\r\n                        text: \">\",\r\n                        events: {\r\n                            click: () => {\r\n                                if (scroller.scrollLeft < (scroller.scrollWidth - itemWidth*3 - 10)) {\r\n                                    scroller.scrollBy({ left: itemWidth*3, top: 0, behavior: 'smooth' });\r\n                                } else {\r\n                                    scroller.scrollTo({ left: 0, top: 0, behavior: 'smooth' });\r\n                                }\r\n                            }\r\n                        },\r\n                    }),\r\n                ]\r\n            }), scroller);\r\n        }\r\n    }\r\n\r\n    getConfirmationBlock()\r\n    {\r\n        const confirmWarningNode = BX.create('p', {\r\n            attrs: {\r\n                className: styles['appointment-warning-text']\r\n            }\r\n        });\r\n\r\n        const confirmInputNode = BX.create('input', {\r\n            attrs: {\r\n                type: 'number',\r\n                className: this.styles['appointment-form_input'],\r\n                placeholder: BX.message(\"FIRSTBIT_JS_CONFIRM_CODE_MESSAGE\"),\r\n                required: 'true',\r\n                autocomplete: 'new-password',\r\n            },\r\n            events: {\r\n                input: (e) => {\r\n                    if (e.target?.value?.length > 4){\r\n                        e.target.value = e.target.value.substring(0, 4);\r\n                    }\r\n                }\r\n            },\r\n        });\r\n\r\n        const confirmSubmitBtn = BX.create('div', {\r\n            attrs: {\r\n                className: styles['appointment-form-button-wrapper']\r\n            },\r\n            children: [\r\n                BX.create('button', {\r\n                    attrs: {\r\n                        className: styles['appointment-form-button'],\r\n                        type: 'button'\r\n                    },\r\n                    text: BX.message(\"FIRSTBIT_JS_SEND_BTN_TEXT\"),\r\n                    events: {\r\n                        click: (e) => this.application.verifyConfirmCode(confirmInputNode.value, confirmWarningNode, e.target)\r\n                    },\r\n                }),\r\n            ]\r\n        });\r\n\r\n        const confirmRepeatBtn = BX.create('a', {\r\n            attrs: {\r\n                className: styles['appointment-form-button-link'],\r\n                href: \"#\"\r\n            }\r\n        });\r\n\r\n        const confirmWrapper = BX.create('div', {\r\n            attrs: {\r\n                id: this.application.selectors.confirmWrapperId,\r\n                style: \"width: 100%\",\r\n            },\r\n            children: [\r\n                BX.create('label', {\r\n                    attrs: {\r\n                        className: styles['appointment-form_input-wrapper'],\r\n                    },\r\n                    children: [\r\n                        confirmInputNode\r\n                    ]\r\n                }),\r\n                confirmWarningNode,\r\n                confirmSubmitBtn,\r\n                confirmRepeatBtn,\r\n            ]\r\n        });\r\n\r\n\r\n\r\n        this.application.startCodeTimerActions(confirmRepeatBtn);\r\n\r\n\r\n        return confirmWrapper;\r\n    }\r\n\r\n    createEmptySelectionNode(message: string) {\r\n        return BX.create('span', {\r\n            attrs: {\r\n                className: styles[\"empty-selection-message\"]\r\n            },\r\n            text: message\r\n        });\r\n    }\r\n}","//@flow\r\ntype ETextInputNames = | \"name\" | \"middleName\" | \"surname\" | \"phone\" | \"email\" | \"birthday\" | \"comment\";\r\ntype EIllegalAttributes = \"data-required\" | \"aria-autocomplete\";\r\n\r\ninterface ITextInputNames{\r\n    name: string,\r\n    middleName: string,\r\n    surname: string,\r\n    phone: string,\r\n    email: string,\r\n    birthday: string,\r\n    comment: string\r\n}\r\n\r\nexport const TextInputNames: ITextInputNames = {\r\n    name: \"name\",\r\n    middleName: \"middleName\",\r\n    surname: \"surname\",\r\n    phone: \"phone\",\r\n    email: \"email\",\r\n    birthday: \"birthday\",\r\n    comment: \"comment\"\r\n};\r\n\r\nexport interface ITextObject {\r\n    type?: string,\r\n    placeholder: string,\r\n    id: string,\r\n    maxlength: string,\r\n    class: string,\r\n    name: ETextInputNames,\r\n    [key: EIllegalAttributes]: string,\r\n    autocomplete?: string,\r\n}","// @disabled-flow\r\n'use strict';\r\nimport styles from \"../../styles/app.scss\";\r\nimport {convertHexToHsl, maskInput} from \"../utils/functions\";\r\nimport \"date\";\r\nimport {Event} from 'main.core';\r\nimport {EventManager} from \"../utils/eventManager\";\r\nimport {Renderer} from \"../utils/renderer\";\r\nimport type {ITextObject} from \"../../types/params\";\r\nimport {TextInputNames} from \"../../types/params\";\r\n\r\nexport class AppointmentSteps\r\n{\r\n    selectionStep: string         = '';\r\n    currentFormStep: HTMLElement  = null;\r\n    formStepNodes: any            = {one: null, two: null, three: null}\r\n    phoneMask: string             = '+7(000)000-00-00';\r\n    loaded: boolean               = false;\r\n    timeExpires: number           = 0;\r\n    requiredInputs: HTMLElement[] = [];\r\n    initParams: any               = {};\r\n    eventHandlersAdded            = {};\r\n    dataKeys = {\r\n        clinicsKey:     \"clinics\",\r\n        specialtiesKey: \"specialties\",\r\n        employeesKey:   \"employees\",\r\n        servicesKey:    \"services\",\r\n        scheduleKey:    \"schedule\",\r\n    };\r\n    data = {\r\n        [this.dataKeys.clinicsKey]:     [],\r\n        [this.dataKeys.specialtiesKey]: {},\r\n        [this.dataKeys.servicesKey]:    {},\r\n        [this.dataKeys.employeesKey]:   {},\r\n        [this.dataKeys.scheduleKey]:    []\r\n    };\r\n    orderData       = {};\r\n    selectionBlocks = {};\r\n    selectionNodes  = {};\r\n    textNodes       = {};\r\n    defaultText     = {};\r\n\r\n    selectDoctorBeforeService = true;\r\n\r\n    /**\r\n     * AppointmentSteps constructor\r\n     * @param params\r\n     */\r\n    constructor(params)\r\n    {\r\n        this.firstInit      = true;\r\n        this.initParams     = params;\r\n        this.selectors      = this.getAppSelectors(styles);\r\n        this.selectionSteps = Object.values(this.dataKeys);\r\n\r\n        this.useServices \t\t\t\t\t= (params.useServices === \"Y\");\r\n        this.useTimeSteps \t\t\t\t\t= (params.useTimeSteps === \"Y\");\r\n        this.timeStepDurationMinutes\t\t= Number(params.timeStepDurationMinutes);\r\n        this.strictCheckingOfRelations\t\t= (params.strictCheckingOfRelations === \"Y\");\r\n        this.showDoctorsWithoutDepartment\t= (params.showDoctorsWithoutDepartment === \"Y\");\r\n        this.confirmTypes                   = params.confirmTypes;\r\n        this.useConfirmWith                 = (params.useConfirmWith);\r\n        this.useEmailNote                   = (params.useEmailNote === \"Y\");\r\n\r\n        this.useCustomMainBtn = (params.useCustomMainBtn === \"Y\") && params['customMainBtnId'];\r\n        this.customColors     = params.customColors ?? {};\r\n\r\n        this.filledInputs = {\r\n            [this.dataKeys.clinicsKey]: {\r\n                clinicUid: false,\r\n                clinicName: false,\r\n            },\r\n            [this.dataKeys.specialtiesKey]: {\r\n                specialty: false,\r\n                specialtyUid: false,\r\n            },\r\n            [this.dataKeys.servicesKey]: {\r\n                serviceUid: false,\r\n                serviceName: false,\r\n                serviceDuration: false,\r\n            },\r\n            [this.dataKeys.employeesKey]: {\r\n                refUid: false,\r\n                doctorName: false,\r\n            },\r\n            [this.dataKeys.scheduleKey]: {\r\n                orderDate: false,\r\n                timeBegin: false,\r\n                timeEnd: false,\r\n            },\r\n            textValues: {\r\n                name: \t\tthis.filledInputs?.textValues?.name       ?? false,\r\n                surname: \tthis.filledInputs?.textValues?.surname    ?? false,\r\n                middleName: this.filledInputs?.textValues?.middleName ?? false,\r\n                phone: \t\tthis.filledInputs?.textValues?.phone      ?? false,\r\n                address: \tthis.filledInputs?.textValues?.address    ?? false,\r\n                email: \t    this.filledInputs?.textValues?.email      ?? false,\r\n                birthday:   this.filledInputs?.textValues?.birthday   ?? false,\r\n                comment: \tthis.filledInputs?.textValues?.comment    ?? false,\r\n            },\r\n        }\r\n\r\n        this.prepareSelectionBlocksForRender();\r\n        this.renderer = new Renderer(styles, this);\r\n    }\r\n\r\n    /**\r\n     * create js objects that contains html ids and default textContent for selection blocks\r\n     * this objects will be used for creating selection blocks html\r\n     */\r\n    prepareSelectionBlocksForRender(){\r\n        this.selectionSteps.forEach(step => {\r\n            this.selectionBlocks[step] = {\r\n                \"blockId\":      `appointment_${step}_block`,\r\n                \"listId\":       `appointment_${step}_list`,\r\n                \"selectedId\":   `appointment_${step}_selected`,\r\n                \"inputId\":      `appointment_${step}_value`,\r\n                \"isRequired\":   !(step === this.dataKeys.servicesKey && this.initParams.useServices !== \"Y\")\r\n            }\r\n            this.defaultText[step] = BX.message(`FIRSTBIT_JS_APPOINTMENT_SELECT_${step.toUpperCase()}_TEXT`);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * start application\r\n     */\r\n    run() {\r\n        this.checkRoot();\r\n        this.insertAppHtml();\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * check root selector and creates it if needed\r\n     */\r\n    checkRoot(){\r\n        if (!this.root || !BX.type.isDomNode(this.root))\r\n        {\r\n            this.root = this.renderer.getRootElement();\r\n            BX.append(this.root, document.body);\r\n        }\r\n        else\r\n        {\r\n            BX.cleanNode(this.root);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * build basic html skeleton and insert it to DOM\r\n     */\r\n    insertAppHtml(){\r\n        BX.append(\r\n            this.renderer.getAppHtmlSkeleton(),\r\n            this.root\r\n        );\r\n\r\n        !this.useCustomMainBtn && BX.append(this.renderer.getDefaultStartBtn(), this.root);\r\n    }\r\n\r\n    /**\r\n     * start all application actions\r\n     */\r\n    init(){\r\n        try {\r\n            this.initCustomEvents();\r\n            this.initFormStepNodes();\r\n            this.initStartBtn();\r\n            this.initBaseNodes();\r\n            this.initOverlayAction();\r\n            this.initForm();\r\n            this.initMobileCloseBtn();\r\n            this.initSelectionNodes();\r\n            this.initTextNodes();\r\n            this.addPhoneMasks();\r\n            this.addCalendarSelection();\r\n            this.addCustomColors();\r\n        }\r\n        catch (e) {\r\n            this.logResultErrors(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * subscribing on custom js events\r\n     */\r\n    initCustomEvents()\r\n    {\r\n        EventManager.subscribe(EventManager.fullDataLoaded, () => {\r\n            this.loaded = true;\r\n            try{\r\n                this.renderBlock(this.dataKeys.clinicsKey);\r\n            }\r\n            catch(e){\r\n                this.logResultErrors(e);\r\n            }\r\n        });\r\n\r\n        EventManager.subscribe(EventManager.clinicsRendered, () => this.toggleLoader(false));\r\n\r\n        EventManager.subscribe(EventManager.formStepChanged, (e) => this.changeFormStepActions(e.data));\r\n    }\r\n\r\n    initFormStepNodes(){\r\n        this.currentFormStep = this.formStepNodes.one   = BX(this.selectors.formStepIds.one);\r\n        this.formStepNodes.two   = BX(this.selectors.formStepIds.two);\r\n        this.formStepNodes.three = BX(this.selectors.formStepIds.three);\r\n    }\r\n\r\n    /**\r\n     * find or create start button and add event handler for click\r\n     */\r\n    initStartBtn() {\r\n        if(!this.firstInit && this.useCustomMainBtn){\r\n            return;\r\n        }\r\n        const startBtnId = this.useCustomMainBtn ? this.initParams['customMainBtnId'] : this.selectors.startBtnId;\r\n        this.startBtn = BX(startBtnId);\r\n        if (BX.type.isDomNode(this.startBtn))\r\n        {\r\n            EventManager.bind(this.startBtn, 'click', this.togglePopup.bind(this));\r\n        }\r\n        else\r\n        {\r\n            throw new Error(`${BX.message('FIRSTBIT_JS_NODE_NOT_FOUND')} \"${this.initParams['customMainBtnId']}\"`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find all base nodes and save them to this object props\r\n     */\r\n    initBaseNodes() {\r\n        this.overlay        = BX(this.selectors.overlayId);\r\n        this.startBtnWrap   = BX(this.selectors.startBtnWrapId);\r\n        this.mobileCloseBtn = BX(this.selectors.mobileCloseBtnId);\r\n        this.messageNode    = BX(this.selectors.messageNodeId);\r\n        this.submitBtn      = BX(this.selectors.submitBtnId);\r\n        this.resultBlock    = BX(this.selectors.appResultBlockId);\r\n    }\r\n\r\n    /**\r\n     * make popup hidden by click to overlay\r\n     */\r\n    initOverlayAction() {\r\n        if (BX.type.isDomNode(this.overlay))\r\n        {\r\n            EventManager.bind(this.overlay, 'click', (e) => {\r\n                if (e.target?.getAttribute('id') === this.selectors.overlayId){\r\n                    this.togglePopup();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find form node and add event listeners\r\n     */\r\n    initForm() {\r\n        this.form = BX(this.selectors.formId);\r\n        if (this.form)\r\n        {\r\n            EventManager.bind(this.form, 'submit', this.submit.bind(this));\r\n        }\r\n        else\r\n        {\r\n            throw new Error(`${BX.message('FIRSTBIT_JS_NODE_NOT_FOUND')} ${this.selectors.formId}`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find node and add event listener to close form\r\n     */\r\n    initMobileCloseBtn() {\r\n        if (this.mobileCloseBtn)\r\n        {\r\n            EventManager.bind(this.mobileCloseBtn, 'click', this.togglePopup.bind(this))\r\n        }\r\n        else\r\n        {\r\n            throw new Error(`${BX.message('FIRSTBIT_JS_NODE_NOT_FOUND')} ${this.selectors.mobileCloseBtnId}`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find nodes and save their data to this object\r\n     */\r\n    initSelectionNodes() {\r\n        for (const key in this.selectionBlocks)\r\n        {\r\n            this.selectionNodes[key] = {\r\n                blockNode: \t\tBX(this.selectionBlocks[key].blockId),\r\n                listNode: \t\tBX(this.selectionBlocks[key].listId),\r\n                selectedNode: \tBX(this.selectionBlocks[key].selectedId),\r\n                inputNode: \t\tBX(this.selectionBlocks[key].inputId),\r\n            }\r\n\r\n            if (this.selectionBlocks[key].isRequired)\r\n            {\r\n                this.requiredInputs.push(this.selectionNodes[key].inputNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * find nodes, add actions and save their data to this object\r\n     */\r\n    initTextNodes() {\r\n        this.initParams['textBlocks'].forEach((block: ITextObject) => {\r\n            const input = BX(block.id);\r\n            if (!input){\r\n                throw new Error(`${BX.message(\"FIRSTBIT_JS_NODE_NOT_FOUND\")} ${block.id}`);\r\n            }\r\n\r\n            const currentValue = this.filledInputs.textValues[block.name];\r\n            input.value = currentValue ? currentValue : '';\r\n            if (input && currentValue && (block.name === TextInputNames.birthday)){\r\n                const date = new Date(currentValue);\r\n                input.value = this.convertDateToDisplay(date.getTime(), false, true);\r\n            }\r\n\r\n            EventManager.bind(input, 'input', (e)=> {\r\n                let val: string = e.target.value ?? '';\r\n                if (e.target.name === TextInputNames.phone && val.length > this.phoneMask.length){\r\n                    val = val.substring(0, this.phoneMask.length)\r\n                }\r\n                this.filledInputs.textValues[block.name] = val;\r\n            })\r\n\r\n            if (block[\"data-required\"] === \"true\")\r\n            {\r\n                this.requiredInputs.push(input);\r\n            }\r\n            else\r\n            {\r\n                if ((this.useConfirmWith === this.confirmTypes.email) && (block.name === TextInputNames.email))\r\n                {\r\n                    this.requiredInputs.push(input);\r\n                }\r\n            }\r\n\r\n            this.textNodes[block.name] = {\r\n                inputNode: input,\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * loading data from 1c and build selectors html\r\n     */\r\n    start() {\r\n        this.toggleLoader(true);\r\n        this.loadData();\r\n    }\r\n\r\n    /**\r\n     * sequentially loads data from 1c\r\n     */\r\n    loadData(): void\r\n    {\r\n        this.getListClinic()\r\n            .then(clinicsResponse => {\r\n                if (clinicsResponse.data?.error) {\r\n                    throw new Error(clinicsResponse.data?.error);\r\n                }\r\n                else if(clinicsResponse.data?.length === 0) {\r\n                    throw new Error(BX.message(\"FIRSTBIT_JS_CLINICS_NOT_FOUND_ERROR\"));\r\n                }\r\n                else {\r\n                    this.data.clinics = clinicsResponse.data;\r\n                    return this.getListEmployees();\r\n                }\r\n            })\r\n            .then(employeesResponse => {\r\n                if (employeesResponse.data?.error) {\r\n                    throw new Error(employeesResponse.data?.error);\r\n                }\r\n                else if(Object.keys(employeesResponse.data).length === 0) {\r\n                    throw new Error(BX.message(\"FIRSTBIT_JS_DOCTORS_NOT_FOUND_ERROR\"));\r\n                }\r\n                else {\r\n                    this.data.employees = employeesResponse.data;\r\n                    return this.getSchedule();\r\n                }\r\n            })\r\n            .then(scheduleResponse => {\r\n                if (scheduleResponse.data?.error) {\r\n                    throw new Error(scheduleResponse.data?.error);\r\n                }\r\n                if (scheduleResponse.data?.hasOwnProperty(\"schedule\"))\r\n                {\r\n                    this.data.schedule = scheduleResponse.data.schedule;\r\n                    EventManager.emit(EventManager.fullDataLoaded);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                !this.useCustomMainBtn && this.startBtnWrap.classList.add(styles['hidden']);\r\n                this.logResultErrors(e);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Load clinics list from 1c\r\n     * @returns {Promise<any>}\r\n     */\r\n    getListClinic(){\r\n        return BX.ajax.runAction('firstbit:appointment.oneCController.getClinics', {\r\n            data: {\r\n                sessid: BX.bitrix_sessid()\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load employees list from 1c\r\n     * @returns {Promise<any>}\r\n     */\r\n    getListEmployees(){\r\n        return BX.ajax.runAction('firstbit:appointment.oneCController.getEmployees', {\r\n            data: {\r\n                sessid: BX.bitrix_sessid()\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load doctor's schedule from 1c\r\n     * @returns {Promise<any>}\r\n     */\r\n    getSchedule(){\r\n        return BX.ajax.runAction('firstbit:appointment.oneCController.getSchedule', {\r\n            data: {\r\n                sessid: BX.bitrix_sessid()\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load nomenclature list from 1c\r\n     * @param clinicGuid\r\n     * @returns {Promise<any>}\r\n     */\r\n    getListNomenclature(clinicGuid){\r\n        return BX.ajax.runAction('firstbit:appointment.oneCController.getNomenclature', {\r\n            data: {\r\n                sessid: BX.bitrix_sessid(),\r\n                clinicGuid: clinicGuid,\r\n            }\r\n        });\r\n    }\r\n\r\n    renderSpecialtiesList(){\r\n        this.renderBlock(this.dataKeys.specialtiesKey);\r\n    }\r\n\r\n    renderServicesList(){\r\n        this.renderBlock(this.dataKeys.servicesKey);\r\n    }\r\n\r\n    renderEmployeesList() {\r\n        this.renderBlock(this.dataKeys.employeesKey);\r\n    }\r\n\r\n    renderScheduleList() {\r\n        this.renderBlock(this.dataKeys.scheduleKey);\r\n    }\r\n\r\n    renderBlock(dataKey)\r\n    {\r\n        const listNode = this.selectionNodes[dataKey]?.listNode;\r\n        if(!listNode){\r\n            throw new Error(BX.message(`FIRSTBIT_JS_${dataKey.toUpperCase()}_NODE_NOT_FOUND_ERROR`));\r\n        }\r\n        (dataKey === this.dataKeys.scheduleKey) ? listNode.classList.add(styles[\"column-mode\"]) : void(0);\r\n        BX.cleanNode(listNode);\r\n\r\n        if(Object.keys(this.data[dataKey]).length > 0)\r\n        {\r\n            const items = this.data[dataKey];\r\n            this.renderer.renderSelectionItems(listNode, dataKey, items);\r\n            (dataKey === this.dataKeys.clinicsKey) ? EventManager.emit(EventManager.clinicsRendered) : void(0);\r\n        }\r\n    }\r\n\r\n    allowToRender(listNode: HTMLElement, dataKey: string, item: any): boolean\r\n    {\r\n        let canRender = true;\r\n        const selectedClinic        = this.filledInputs[this.dataKeys.clinicsKey].clinicUid;\r\n        const selectedSpecialtyUid  = this.filledInputs[this.dataKeys.specialtiesKey].specialtyUid;\r\n        const selectedEmployeeUid   = this.filledInputs[this.dataKeys.employeesKey].refUid;\r\n        const selectedServiceUid    = this.filledInputs[this.dataKeys.servicesKey].serviceUid;\r\n        let clinicCondition, specialtyCondition;\r\n\r\n        switch (dataKey)\r\n        {\r\n            case this.dataKeys.specialtiesKey:\r\n                const alreadyRendered = listNode.querySelector(`[data-uid=\"${item.uid}\"]`);\r\n                clinicCondition = item.clinics.includes(selectedClinic);\r\n                if(this.strictCheckingOfRelations){\r\n                    canRender = clinicCondition;\r\n                    if (this.showDoctorsWithoutDepartment){\r\n                        canRender = (clinicCondition || item.clinics.includes(''));\r\n                    }\r\n                }\r\n                canRender = canRender && BX.type.isNotEmptyString(item.name) && !alreadyRendered;\r\n                break;\r\n\r\n            case this.dataKeys.employeesKey:\r\n                specialtyCondition = (item.specialtyUid === selectedSpecialtyUid);\r\n                clinicCondition    = (selectedClinic === item.clinicUid);\r\n\r\n                canRender = specialtyCondition;\r\n\r\n                if(this.strictCheckingOfRelations){\r\n                    if (this.showDoctorsWithoutDepartment){\r\n                        canRender = (specialtyCondition && !item.clinicUid)\r\n                                    ||\r\n                                    (specialtyCondition && clinicCondition);\r\n                    }\r\n                    else\r\n                    {\r\n                        canRender = specialtyCondition && clinicCondition;\r\n                    }\r\n                }\r\n                if (this.useServices && !this.selectDoctorBeforeService)\r\n                {\r\n                    canRender = canRender && item.services.hasOwnProperty(selectedServiceUid);\r\n                }\r\n                break;\r\n\r\n            case this.dataKeys.servicesKey:\r\n                canRender = (selectedSpecialtyUid === item.specialtyUid);\r\n                if (this.selectDoctorBeforeService)\r\n                {\r\n                    canRender = canRender && this.data.employees[selectedEmployeeUid].services.hasOwnProperty(item.uid);\r\n                }\r\n                break;\r\n\r\n            case this.dataKeys.scheduleKey:\r\n                canRender = (item.clinicUid === selectedClinic) && (item.refUid === selectedEmployeeUid)\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return canRender;\r\n    }\r\n\r\n    getServiceDuration(scheduleItem):number {\r\n        const selectedEmployee = this.data.employees[scheduleItem.refUid];\r\n        const selectedService = this.filledInputs[this.dataKeys.servicesKey];\r\n        let serviceDuration = Number(selectedService.serviceDuration);\r\n        if(selectedEmployee.services.hasOwnProperty(selectedService.serviceUid))\r\n        {\r\n            if (selectedEmployee.services[selectedService.serviceUid].hasOwnProperty(\"personalDuration\")){\r\n                const personalDuration = selectedEmployee.services[selectedService.serviceUid][\"personalDuration\"];\r\n                serviceDuration = Number(personalDuration) > 0 ? Number(personalDuration) : serviceDuration;\r\n            }\r\n        }\r\n        return serviceDuration;\r\n    }\r\n\r\n    getIntervalsForServiceDuration(intervals, serviceDurationMs) {\r\n        const newIntervals = [];\r\n        intervals.length && intervals.forEach((day) => {\r\n            const timestampTimeBegin = (new Date(day.timeBegin)).getTime();\r\n            const timestampTimeEnd = (new Date(day.timeEnd)).getTime();\r\n            const timeDifference = timestampTimeEnd - timestampTimeBegin;\r\n            const appointmentsCount = Math.floor(timeDifference / serviceDurationMs);\r\n            if (appointmentsCount > 0)\r\n            {\r\n                if (this.useTimeSteps && (serviceDurationMs >= 30*60*1000)) //use timeSteps only for services with duration>=30 minutes\r\n                {\r\n                    let start   = new Date(timestampTimeBegin);\r\n                    let end     = new Date(timestampTimeBegin + serviceDurationMs);\r\n                    while(end.getTime() <= timestampTimeEnd){\r\n                        newIntervals.push({\r\n                            \"date\": \t\t\t\tday.date,\r\n                            \"timeBegin\": \t\t\tthis.convertDateToISO(Number(start)),\r\n                            \"timeEnd\": \t\t\t\tthis.convertDateToISO(Number(end)),\r\n                            \"formattedDate\": \t\tthis.convertDateToDisplay(Number(start), false),\r\n                            \"formattedTimeBegin\": \tthis.convertDateToDisplay(Number(start), true),\r\n                            \"formattedTimeEnd\": \tthis.convertDateToDisplay(Number(end), true),\r\n                        });\r\n                        start.setMinutes(start.getMinutes() + this.timeStepDurationMinutes);\r\n                        end.setMinutes(end.getMinutes() + this.timeStepDurationMinutes);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    for (let i = 0; i < appointmentsCount; i++)\r\n                    {\r\n                        let start = Number(new Date(timestampTimeBegin + (serviceDurationMs * i)));\r\n                        let end = Number(new Date(timestampTimeBegin + (serviceDurationMs * (i+1))));\r\n                        newIntervals.push({\r\n                            \"date\": \t\t\t\tday.date,\r\n                            \"timeBegin\": \t\t\tthis.convertDateToISO(start),\r\n                            \"timeEnd\": \t\t\t\tthis.convertDateToISO(end),\r\n                            \"formattedDate\": \t\tthis.convertDateToDisplay(start, false),\r\n                            \"formattedTimeBegin\": \tthis.convertDateToDisplay(start, true),\r\n                            \"formattedTimeEnd\": \tthis.convertDateToDisplay(end, true),\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return newIntervals;\r\n    }\r\n\r\n    toggleSelectionList(dataKey: string, selected: HTMLElement, list: HTMLElement) {\r\n        list.classList.toggle(styles['active']);\r\n        for (const nodesKey in this.selectionNodes) {\r\n            if (\r\n                this.selectionNodes.hasOwnProperty(nodesKey)\r\n                && nodesKey !== dataKey\r\n            ){\r\n                this.selectionNodes[nodesKey].listNode.classList.remove(styles['active']);\r\n            }\r\n        }\r\n    }\r\n\r\n    addItemActions(dataKey){\r\n        const items = this.selectionNodes[dataKey].listNode.children;\r\n        if (!items.length){\r\n            return;\r\n        }\r\n        for (let item of items) {\r\n            if (dataKey === this.dataKeys.scheduleKey)\r\n            {\r\n                const times = item.querySelectorAll('span');\r\n                times.length && times.forEach((time) => {\r\n                    time.addEventListener('click', (e)=>{\r\n                        e.stopPropagation();\r\n                        this.selectionNodes[dataKey].listNode.classList.remove(styles['active']);\r\n                        this.selectionNodes[dataKey].selectedNode.innerHTML = `\r\n                            <span>\r\n                                ${e.currentTarget.dataset.displayDate} - \r\n                                ${e.currentTarget.textContent}\r\n                            </span>\r\n                        `;\r\n\r\n                        this.changeSelectionStep(dataKey, e.currentTarget);\r\n                        this.activateSelectionNodes();\r\n                    })\r\n                });\r\n            }\r\n            else{\r\n                item.addEventListener('click', (e)=>{\r\n                    e.stopPropagation();\r\n                    this.selectionNodes[dataKey].listNode.classList.remove(styles['active']);\r\n                    this.selectionNodes[dataKey].selectedNode.innerHTML = `<span>${e.currentTarget.textContent}</span>`;\r\n                    this.changeSelectionStep(dataKey, e.currentTarget);\r\n                    this.activateSelectionNodes();\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    changeSelectionStep(dataKey, target){\r\n        this.selectionNodes[dataKey].inputNode.value = target.dataset.uid;\r\n        switch (dataKey) {\r\n            case this.dataKeys.clinicsKey:\r\n                this.filledInputs[dataKey].clinicUid = target.dataset.uid;\r\n                this.filledInputs[dataKey].clinicName = target.dataset.name;\r\n                if (this.useServices)\r\n                {\r\n                    this.toggleLoader(true);\r\n                    this.getListNomenclature(`${target.dataset.uid}`)\r\n                        .then((nomenclature) => {\r\n                            if (nomenclature.data?.error){\r\n                                throw new Error(nomenclature.data.error);\r\n                            }else{\r\n                                if (Object.keys(nomenclature.data).length > 0){\r\n                                    this.data.services = nomenclature.data;\r\n                                    this.bindServicesToSpecialties();\r\n                                    this.renderSpecialtiesList();\r\n                                }\r\n                            }\r\n                            this.toggleLoader(false);\r\n                        })\r\n                        .catch(res => {\r\n                            this.logResultErrors(res);\r\n                        });\r\n                }\r\n                else\r\n                {\r\n                    this.renderSpecialtiesList();\r\n                }\r\n                break;\r\n            case this.dataKeys.specialtiesKey:\r\n                this.filledInputs[dataKey].specialty = target.dataset.name;\r\n                this.filledInputs[dataKey].specialtyUid = target.dataset.uid;\r\n                break;\r\n            case this.dataKeys.servicesKey:\r\n                this.filledInputs[dataKey].serviceName = target.textContent;\r\n                this.filledInputs[dataKey].serviceUid = target.dataset.uid;\r\n                this.filledInputs[dataKey].serviceDuration = target.dataset.duration;\r\n                this.selectDoctorBeforeService ? this.renderScheduleList(): this.renderEmployeesList();\r\n                break;\r\n            case this.dataKeys.employeesKey:\r\n                this.filledInputs[dataKey].doctorName = target.textContent;\r\n                this.filledInputs[dataKey].refUid = target.dataset.uid;\r\n                if(this.useServices){\r\n                    if (this.selectDoctorBeforeService){\r\n                        this.renderServicesList();\r\n                    }else{\r\n                        this.renderScheduleList();\r\n                    }\r\n                }else{\r\n                    this.renderScheduleList();\r\n                }\r\n                break;\r\n            case this.dataKeys.scheduleKey:\r\n                this.filledInputs[dataKey].orderDate = target.dataset.date;\r\n                this.filledInputs[dataKey].timeBegin = target.dataset.start;\r\n                this.filledInputs[dataKey].timeEnd = target.dataset.end;\r\n                this.selectionNodes[dataKey].inputNode.value = target.dataset.date;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.selectionStep = dataKey;\r\n    }\r\n\r\n    bindServicesToSpecialties() {\r\n        const services  = this.data.services;\r\n        const employees = this.data.employees;\r\n        if(Object.keys(employees).length > 0)\r\n        {\r\n            for (const employeeUid in employees)\r\n            {\r\n                if (!employees.hasOwnProperty(employeeUid)) { return; }\r\n\r\n                const empServices = employees[employeeUid].services;\r\n                const specialty   = employees[employeeUid].specialty;\r\n\r\n                if(specialty){\r\n                    this.addSpecialty(employees[employeeUid]);\r\n\r\n                    if(empServices && Object.keys(empServices).length > 0) {\r\n                        for (const empServiceUid in empServices)\r\n                        {\r\n                            if (!empServices.hasOwnProperty(empServiceUid)) { return; }\r\n\r\n                            if (services.hasOwnProperty(empServiceUid)){\r\n                                services[empServiceUid].specialtyUid = employees[employeeUid].specialtyUid;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    addSpecialty(employee)\r\n    {\r\n        if(this.data[this.dataKeys.specialtiesKey][employee.specialtyUid])\r\n        {\r\n            this.addClinicToSpecialty(this.data[this.dataKeys.specialtiesKey][employee.specialtyUid], employee.clinicUid);\r\n        }\r\n        else\r\n        {\r\n            this.data[this.dataKeys.specialtiesKey][employee.specialtyUid] = {\r\n                uid:        employee.specialtyUid,\r\n                name:       employee.specialty,\r\n                clinics:    [employee.clinicUid]\r\n            }\r\n        }\r\n    }\r\n\r\n    addClinicToSpecialty(specialty, clinicUid){\r\n        if(Array.isArray(specialty.clinics) && !specialty.clinics.includes(clinicUid))\r\n        {\r\n            specialty.clinics.push(clinicUid);\r\n        }\r\n    }\r\n\r\n    activateSelectionNodes(){\r\n        let current = false;\r\n        let next = false;\r\n        this.selectionSteps.forEach(nodesKey => {\r\n            if (!this.useServices && nodesKey === this.dataKeys.servicesKey){\r\n                return;\r\n            }\r\n\r\n            if (this.selectionNodes.hasOwnProperty(nodesKey))\r\n            {\r\n                const block = this.selectionNodes[nodesKey].blockNode;\r\n                if (!current && !next){\r\n                    block.classList.remove(styles[\"disabled\"]);\r\n                }\r\n                else if (current && !next){\r\n                    block.classList.remove(styles[\"disabled\"])\r\n                    this.resetValue(nodesKey);\r\n                }\r\n                else{\r\n                    block.classList.add(styles[\"disabled\"]);\r\n                    this.resetValue(nodesKey);\r\n                }\r\n                next = current;\r\n\r\n                if(nodesKey === this.selectionStep)\r\n                {\r\n                    current = true;\r\n\r\n                    switch (this.selectionStep) {\r\n                        case this.dataKeys.specialtiesKey:\r\n                        case this.dataKeys.scheduleKey:\r\n                            this.activateStepButtons();\r\n                            break;\r\n                        default:\r\n                            this.deactivateStepButtons();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    resetValue(nodesKey: string) {\r\n        this.selectionNodes[nodesKey].selectedNode.textContent = this.defaultText[nodesKey];\r\n        this.selectionNodes[nodesKey].inputNode.value = \"\";\r\n        if (this.filledInputs.hasOwnProperty(nodesKey)){\r\n            for (const propKey in this.filledInputs[nodesKey]) {\r\n                if (this.filledInputs[nodesKey].hasOwnProperty(propKey)){\r\n                    this.filledInputs[nodesKey][propKey] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setSelectionDoctorBeforeService(value: boolean){\r\n        if(this.filledInputs[this.dataKeys.specialtiesKey].specialty !== false)\r\n        {\r\n            this.selectDoctorBeforeService = value;\r\n            if(this.useServices){\r\n                if (value === true){\r\n                    BX.insertBefore(\r\n                        this.selectionNodes[this.dataKeys.employeesKey].blockNode,\r\n                        this.selectionNodes[this.dataKeys.servicesKey].blockNode\r\n                    );\r\n                    this.selectionSteps[3] = this.dataKeys.servicesKey;\r\n                    this.selectionSteps[2] = this.dataKeys.employeesKey;\r\n                    this.renderEmployeesList();\r\n                }else{\r\n                    BX.insertBefore(\r\n                        this.selectionNodes[this.dataKeys.servicesKey].blockNode,\r\n                        this.selectionNodes[this.dataKeys.employeesKey].blockNode\r\n                    );\r\n                    this.selectionSteps[2] = this.dataKeys.servicesKey;\r\n                    this.selectionSteps[3] = this.dataKeys.employeesKey;\r\n                    this.renderServicesList();\r\n                }\r\n                this.activateSelectionNodes();\r\n            }\r\n            else{\r\n                this.renderEmployeesList();\r\n            }\r\n            EventManager.emit(EventManager.formStepChanged, new Event.BaseEvent({\r\n                data: {\r\n                    previousStep: this.formStepNodes.one,\r\n                    newStep: this.formStepNodes.two,\r\n                },\r\n            }));\r\n        }\r\n        else\r\n        {\r\n            this.checkRequiredFields();\r\n        }\r\n    }\r\n\r\n    changeFormStep(nextStep: HTMLElement)\r\n    {\r\n        EventManager.emit(EventManager.formStepChanged, new Event.BaseEvent({\r\n            data: {\r\n                previousStep: this.currentFormStep,\r\n                newStep: nextStep,\r\n            },\r\n        }));\r\n    }\r\n\r\n    changeFormStepActions(data)\r\n    {\r\n        if(BX.type.isDomNode(data?.newStep)){\r\n            this.currentFormStep = data.newStep;\r\n            data.newStep.classList.remove(styles['hidden'])\r\n        }\r\n        if(BX.type.isDomNode(data?.previousStep)){\r\n            data.previousStep.classList.add(styles['hidden'])\r\n        }\r\n    }\r\n\r\n    activateStepButtons(){\r\n        if(BX.type.isDomNode(this.currentFormStep)){\r\n            const buttons = this.currentFormStep.querySelectorAll(`.${styles['appointment-form-button']}`);\r\n            buttons.length && buttons.forEach(button => button.removeAttribute('disabled'))\r\n        }\r\n    }\r\n\r\n    deactivateStepButtons(){\r\n        if(BX.type.isDomNode(this.currentFormStep)){\r\n            const buttons = this.currentFormStep.querySelectorAll(`.${styles['appointment-form-button']}`);\r\n            buttons.length && buttons.forEach(button => button.setAttribute('disabled', true))\r\n        }\r\n    }\r\n\r\n    submit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.checkRequiredFields())\r\n        {\r\n            this.messageNode ? this.messageNode.textContent = \"\" : void(0);\r\n            this.toggleLoader(true);\r\n            this.orderData = {...this.filledInputs.textValues};\r\n\r\n            for (let key in this.selectionNodes)\r\n            {\r\n                if (this.selectionNodes.hasOwnProperty(key) && this.filledInputs.hasOwnProperty(key))\r\n                {\r\n                    this.selectionNodes[key].inputNode.value = JSON.stringify(this.filledInputs[key]);\r\n                    this.orderData = {...this.orderData, ...this.filledInputs[key]};\r\n                }\r\n            }\r\n\r\n            if (this.useConfirmWith !== this.confirmTypes.none){\r\n                this.sendConfirmCode();\r\n                this.toggleLoader(false);\r\n            }\r\n            else\r\n            {\r\n                this.sendOrder();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (this.messageNode){\r\n                this.messageNode.textContent = BX.message(\"FIRSTBIT_JS_ORDER_CHECK_FIELDS_ERROR\");\r\n            }\r\n            else {\r\n                this.logResultErrors(BX.message(\"FIRSTBIT_JS_ORDER_CHECK_FIELDS_ERROR\"));\r\n            }\r\n        }\r\n    }\r\n\r\n    sendConfirmCode (event = false) {\r\n        event && event.preventDefault();\r\n\r\n        this.messageNode.textContent = \"\";\r\n\r\n        BX.ajax.runAction('firstbit:appointment.messageController.sendConfirmCode', {\r\n            data: {\r\n                phone: this.orderData.phone,\r\n                email: this.orderData.email,\r\n                sessid: BX.bitrix_sessid()\r\n            }\r\n        })\r\n        .then(result => {\r\n            this.timeExpires = result.data?.timeExpires ?? ((new Date()).getTime() / 1000).toFixed(0) + 60;\r\n            this.createConfirmationForm();\r\n        })\r\n        .catch(result => {\r\n            this.messageNode.textContent = result.errors?.[0]?.message + BX.message(\"FIRSTBIT_JS_SOME_DISPLAY_ERROR_POSTFIX\");\r\n            this.logResultErrors(result);\r\n        });\r\n    }\r\n\r\n    createConfirmationForm (){\r\n        this.confirmWrapper && this.confirmWrapper.remove();\r\n        this.confirmWrapper = this.renderer.getConfirmationBlock();\r\n        this.form.classList.add(styles['appointment-form-confirmation-mode']);\r\n        BX.append(this.confirmWrapper, this.form);\r\n    }\r\n\r\n    verifyConfirmCode (code, confirmWarningNode, btnNode)\r\n    {\r\n        if (confirmWarningNode && btnNode){\r\n            confirmWarningNode.textContent = '';\r\n            if (code?.length === 4)\r\n            {\r\n                btnNode.classList.add(styles['loading']);\r\n\r\n                BX.ajax.runAction('firstbit:appointment.messageController.verifyConfirmCode', {\r\n                    data: {\r\n                        code: code,\r\n                        email: this.orderData.email,\r\n                        sessid: BX.bitrix_sessid()\r\n                    }\r\n                })\r\n                .then(() => this.sendOrder())\r\n                .catch(result => {\r\n                    btnNode.classList.remove(styles['loading']);\r\n                    if (result.errors?.length > 0){\r\n                        result.errors.forEach((error) => {\r\n                            confirmWarningNode.innerHTML = ((Number(error.code) === 400) || (Number(error.code) === 406) || (Number(error.code) === 425))\r\n                                    ? `${confirmWarningNode.innerHTML}${error.message}<br>`\r\n                                    : BX.message(\"FIRSTBIT_JS_APPLICATION_ERROR\");\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                confirmWarningNode.textContent = BX.message(\"FIRSTBIT_JS_CONFIRM_CODE_LENGTH\");\r\n            }\r\n        }\r\n    }\r\n\r\n    sendOrder() {\r\n        BX.ajax.runAction('firstbit:appointment.oneCController.addOrder', {\r\n            data: {\r\n                params: JSON.stringify(this.orderData),\r\n                sessid: BX.bitrix_sessid()\r\n            }\r\n        })\r\n        .then((result) => {\r\n            this.confirmWrapper && this.confirmWrapper.remove();\r\n            this.form.classList.remove(styles['appointment-form-confirmation-mode'], styles['loading']);\r\n\r\n            if (result.data?.error)\r\n            {\r\n                this.logResultErrors(result.data.error);\r\n                this.finalizingWidget(false);\r\n            }\r\n            else\r\n            {\r\n                if (this.useEmailNote && this.orderData.email)\r\n                {\r\n                    this.sendEmailNote();\r\n                }\r\n                this.finalizingWidget(true);\r\n            }\r\n        })\r\n        .catch(result => this.logResultErrors(result));\r\n    }\r\n\r\n    sendEmailNote() {\r\n        BX.ajax.runAction('firstbit:appointment.messageController.sendEmailNote', {\r\n            data: {\r\n                params: JSON.stringify(this.orderData),\r\n                sessid: BX.bitrix_sessid()\r\n            }\r\n        }).then().catch();\r\n    }\r\n\r\n    startCodeTimerActions(confirmRepeatBtn: HTMLElement){\r\n        const curTimeSeconds: number = Number(((new Date()).getTime() / 1000).toFixed(0));\r\n        let remainingTime = this.timeExpires - curTimeSeconds;\r\n        const interval = setInterval(() => {\r\n            if (remainingTime <= 0)\r\n            {\r\n                EventManager.bind(confirmRepeatBtn, 'click', this.sendConfirmCode.bind(this));\r\n                clearInterval(interval);\r\n            }\r\n            else\r\n            {\r\n                remainingTime--;\r\n                confirmRepeatBtn.textContent = `${BX.message(\"FIRSTBIT_JS_CONFIRM_CODE_SEND_AGAIN\")} \r\n                                                ${remainingTime > 0 ? remainingTime : ''}`;\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    finalizingWidget(success) {\r\n        this.resultBlock.classList.add(styles['active']);\r\n        this.form.classList.add(styles['off']);\r\n\r\n        const resTextNode = this.resultBlock.querySelector('p');\r\n        if (resTextNode)\r\n        {\r\n            if (success)\r\n            {\r\n                const date = this.convertDateToDisplay(this.orderData.timeBegin, false);\r\n                const time = this.convertDateToDisplay(this.orderData.timeBegin, true);\r\n                const doctor = this.orderData.doctorName;\r\n                resTextNode.innerHTML = `${BX.message(\"FIRSTBIT_JS_APPOINTMENT_SUCCESS\")}\r\n                                         <br>${date} ${time}\r\n                                         <br>${BX.message(\"FIRSTBIT_JS_APPOINTMENT_DOCTOR\")} - ${doctor}` ;\r\n                resTextNode.classList.add(styles['success']);\r\n                this.finalAnimations();\r\n            }\r\n            else\r\n            {\r\n                resTextNode.append(this.createFinalError());\r\n                resTextNode.classList.add(styles['error']);\r\n                setTimeout(()=>{\r\n                    this.reload();\r\n                }, 5000);\r\n            }\r\n        }\r\n    }\r\n\r\n    finalAnimations(){\r\n        this.startBtn.classList.remove(styles['active']);\r\n        this.startBtn.classList.add(styles['success']);\r\n        setTimeout(()=>{\r\n            this.reload();\r\n        }, 5000);\r\n    }\r\n\r\n    reload(event = false){\r\n        event && event.preventDefault();\r\n        this.overlay.classList.remove(styles['active']);\r\n        this.firstInit = false;\r\n        this.loaded    = false;\r\n        setTimeout(this.run.bind(this), 500);\r\n    }\r\n\r\n    createFinalError () {\r\n        return BX.create('p', {\r\n            children: [\r\n                BX.create('span', {\r\n                    html: BX.message('FIRSTBIT_JS_APPOINTMENT_FINAL_ERROR_START')\r\n                }),\r\n                BX.create('a', {\r\n                    attrs: {\r\n                        href: \"#\"\r\n                    },\r\n                    text: BX.message('FIRSTBIT_JS_APPOINTMENT_FINAL_ERROR_LINK'),\r\n                    events: {\r\n                        click: (e) => this.reload(e)\r\n                    }\r\n                }),\r\n                BX.create('span', {\r\n                    html: BX.message('FIRSTBIT_JS_APPOINTMENT_FINAL_ERROR_END')\r\n                })\r\n            ]\r\n        });\r\n    }\r\n\r\n    checkRequiredFields(){\r\n        let allNotEmpty = true;\r\n\r\n        if (this.requiredInputs.length > 0){\r\n            this.requiredInputs.some((input) => {\r\n                if (!BX.type.isNotEmptyString(input.value))\r\n                {\r\n                    allNotEmpty = false;\r\n                    input.parentElement?.classList.add(styles[\"error\"])\r\n                    return true;\r\n                }\r\n                else\r\n                {\r\n                    input.parentElement?.classList.remove(styles[\"error\"]);\r\n                }\r\n            });\r\n        }\r\n        return allNotEmpty && this.phoneIsValid(this.textNodes.phone.inputNode);\r\n    }\r\n\r\n    phoneIsValid(phoneInput){\r\n        const phone = phoneInput.value;\r\n        let isValid = !( !phone || (phone.length !== this.phoneMask.length) );\r\n        if (phoneInput.parentElement !== null){\r\n            !isValid\r\n                ? phoneInput.parentElement.classList.add(styles[\"error\"])\r\n                : phoneInput.parentElement.classList.remove(styles[\"error\"]);\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * add input mask to all inputs with type=tel\r\n     */\r\n    addPhoneMasks(){\r\n        const maskedInputs = this.overlay.querySelectorAll('input[type=\"tel\"]');\r\n        maskedInputs.length && maskedInputs.forEach((input: HTMLInputElement) => {\r\n            input.addEventListener('input', (e) => {\r\n                maskInput(e.currentTarget, this.phoneMask);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * add BX.calendar extension to select birthday date on related input\r\n     */\r\n    addCalendarSelection(){\r\n        const that = this;\r\n        const birthdayInput = this.overlay.querySelector('input[name=\"birthday\"]');\r\n        birthdayInput.addEventListener('keydown', (e) => {\r\n            e.preventDefault();\r\n            return false;\r\n        });\r\n        birthdayInput.addEventListener('click', () => {\r\n            BX.calendar({\r\n                node: birthdayInput,\r\n                field: birthdayInput,\r\n                bTime: false,\r\n                callback_after: function(date){\r\n                    const timestamp = (new Date(date)).getTime();\r\n                    that.filledInputs.textValues.birthday = that.convertDateToISO(timestamp);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * inject styles with custom color variables from module settings\r\n     */\r\n    addCustomColors(){\r\n        if (Object.keys(this.customColors).length > 0)\r\n        {\r\n            const style = BX.create('style');\r\n            style.textContent = `.${styles['appointment-popup-overlay']}, .${styles['appointment-button-wrapper']}{`\r\n            for (let key in this.customColors){\r\n                if (this.customColors.hasOwnProperty(key))\r\n                {\r\n                    switch (key) {\r\n                        case \"--appointment-main-color\":\r\n                            const hslM = convertHexToHsl(this.customColors[key]);\r\n                            if (hslM){\r\n                                style.textContent += `--main-h: ${hslM.h};--main-s: ${hslM.s};--main-l: ${hslM.l};`;\r\n                            }\r\n                            break;\r\n                        case \"--appointment-field-color\":\r\n                            const hslF = convertHexToHsl(this.customColors[key]);\r\n                            if (hslF){\r\n                                style.textContent += `-field-h: ${hslF.h};--field-s: ${hslF.s};--field-l: ${hslF.l};`;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            style.textContent += `${key}: ${this.customColors[key]};`;\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            style.textContent = style.textContent + `}`;\r\n            this.overlay.after(style);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * show/hide popup with appointment form and starts loading data from 1c on first showing\r\n     */\r\n    togglePopup() {\r\n        this.overlay.classList.toggle(styles['active']);\r\n        this.useCustomMainBtn ? this.startBtn.classList.toggle('active')\r\n            : this.startBtn.classList.toggle(styles['active']);\r\n        if (!this.loaded){\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * toggle load animation on form\r\n     * @param on\r\n     */\r\n    toggleLoader(on = true){\r\n        on  ? this.form.classList.add(styles['loading'])\r\n            : this.form.classList.remove(styles['loading'])\r\n    }\r\n\r\n    /**\r\n     * convert date to ISO format without seconds\r\n     * @param timestamp\r\n     * @returns {string}\r\n     */\r\n    convertDateToISO (timestamp) {\r\n        const date = this.readDateInfo(timestamp);\r\n\r\n        return `${date.year}-${date.month}-${date.day}T${date.hours}:${date.minutes}:00`;\r\n    }\r\n\r\n    /**\r\n     * convert date to format \"d-m-Y\" / \"d.m.Y\" / \"H:i\"\r\n     * @param timestamp\r\n     * @param onlyTime\r\n     * @param onlyDate\r\n     * @returns {string}\r\n     */\r\n    convertDateToDisplay (timestamp, onlyTime = false, onlyDate = false) {\r\n        const date = this.readDateInfo(timestamp);\r\n\r\n        if (onlyTime){\r\n            return `${date.hours}:${date.minutes}`;\r\n        }\r\n        if (onlyDate){\r\n            return `${date.day}.${date.month}.${date.year}`;\r\n        }\r\n        return `${date.day}-${date.month}-${date.year}`;\r\n    }\r\n\r\n    /**\r\n     * convert param to object with detail info about date\r\n     * @param timestampOrISO\r\n     * @returns {{hours: string, seconds: string, month: string, year: number, minutes: string, weekDay, day: string}}\r\n     */\r\n    readDateInfo(timestampOrISO){\r\n        const date = new Date(timestampOrISO);\r\n\r\n        let day = `${date.getDate()}`;\r\n        if (Number(day)<10) {\r\n            day = `0${day}`;\r\n        }\r\n\r\n        let month = `${date.getMonth()+1}`;\r\n        if (Number(month)<10) {\r\n            month = `0${month}`;\r\n        }\r\n\r\n        let hours = `${date.getHours()}`;\r\n        if (Number(hours)<10) {\r\n            hours = `0${hours}`;\r\n        }\r\n\r\n        let minutes = `${date.getMinutes()}`;\r\n        if (Number(minutes)<10) {\r\n            minutes = `0${minutes}`;\r\n        }\r\n\r\n        let seconds = `${date.getSeconds()}`;\r\n        if (Number(seconds)<10) {\r\n            seconds = `0${seconds}`;\r\n        }\r\n\r\n        return {\r\n            \"day\": day,\r\n            \"month\": month,\r\n            \"year\": date.getFullYear(),\r\n            \"hours\": hours,\r\n            \"minutes\": minutes,\r\n            \"seconds\": seconds,\r\n            \"weekDay\": this.ucFirst(date.toLocaleString('ru', {weekday: 'short'}))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * make the first letter of a string uppercase\r\n     * @param str\r\n     * @returns {string|*}\r\n     */\r\n    ucFirst(str) {\r\n        if (!str) return str;\r\n\r\n        return str[0].toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    /**\r\n     * error logging\r\n     * @param res\r\n     */\r\n    logResultErrors(res) {\r\n        if (res.errors && Array.isArray(res.errors) && res.errors.length > 0)\r\n        {\r\n            res.errors.forEach(error => {\r\n                console.log(`${BX.message(\"FIRSTBIT_JS_APPLICATION_ERROR\")} - ${error.message}`)\r\n            })\r\n        }\r\n        else\r\n        {\r\n            console.log(BX.message(\"FIRSTBIT_JS_APPLICATION_ERROR\") + \"\\r\\n\", res.message ?? res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * init elements selectors\r\n     */\r\n    getAppSelectors(stylesObject)\r\n    {\r\n        return {\r\n            rootNodeId:         'firstbit-appointment-application-root',\r\n            overlayId:          'appointment-popup-steps-overlay',\r\n            startBtnWrapId:     stylesObject['appointment-button-wrapper'],\r\n            startBtnId:         stylesObject['appointment-button'],\r\n            formId:             stylesObject['appointment-form'],\r\n            mobileCloseBtnId:   stylesObject['appointment-form-close'],\r\n            messageNodeId:      stylesObject['appointment-form-message'],\r\n            submitBtnId:        stylesObject['appointment-form-button'],\r\n            appResultBlockId:   stylesObject['appointment-result-block'],\r\n            inputClass:         stylesObject['appointment-form_input'],\r\n            textareaClass:      stylesObject['appointment-form_textarea'],\r\n            confirmWrapperId:   stylesObject['appointment-form-confirmation-wrapper'],\r\n            formStepIds: {\r\n                one:    'appointment-form-step-one',\r\n                two:    'appointment-form-step-two',\r\n                three:  'appointment-form-step-three',\r\n            }\r\n        }\r\n    }\r\n}","'use strict';\nimport {AppointmentSteps} from './appointment/app';\n\nBX.ajax.runComponentAction('firstbit:appointment.add', 'getResult', {\n    mode: 'ajax',\n    data: {\n        sessid: BX.bitrix_sessid()\n    }\n})\n.then(function (response)\n{\n    const AppPlace = BX.namespace('FirstBit.Appointment');\n    AppPlace.AppointmentSteps = new AppointmentSteps(response.data);\n    AppPlace.AppointmentSteps.run();\n})\n.catch(function (e)\n{\n    if (e.errors && BX.type.isArray(e.errors))\n        {\n            let errorText = '';\n            response.errors.forEach(error => {\n                errorText = `${errorText} ${error.code} - ${error.message};`;\n            })\n            console.log(errorText)\n        }\n        else\n        {\n            console.log('app data loading error', e);\n        }\n});"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","maskInput","input","mask","value","literalPattern","numberPattern","newValue","valueIndex","i","length","test","convertHexToHsl","hex","result","exec","r","parseInt","g","b","max","Math","min","h","s","l","d","round","EventManager","target","eventName","handler","options","Event","bind","EventEmitter","Renderer","styles","application","BX","create","attrs","id","selectors","overlayId","className","children","formId","html","getFormFirstBlock","getFormSecondBlock","getFormThirdBlock","getFormMessageBlock","getFormPrivacyBlock","getFormResultBlock","getFormLoaderBlock","doctorBtn","getFormBtn","message","setSelectionDoctorBeforeService","serviceBtn","formStepIds","one","getSelectionNodes","dataKeys","clinicsKey","specialtiesKey","getFormButtonsBlock","btnPrev","changeFormStep","formStepNodes","btnNext","three","two","employeesKey","servicesKey","scheduleKey","getTextNodes","getFormSubmitBtn","messageNodeId","buttons","submitBtnId","text","disabled","events","click","href","initParams","appResultBlockId","blockKeys","arNodes","forEach","key","selectionBlocks","hasOwnProperty","selected","selectedId","defaultText","toggleSelectionList","list","listId","inputId","name","additionalClass","push","blockId","tag","getTextInputAttrs","preparedAttrs","attr","startBtnWrapId","startBtnId","rootNodeId","listNode","dataKey","items","allowToRender","renderScheduleItem","price","Number","fullName","dataAttrs","uid","duration","append","dataset","createEmptySelectionNode","toUpperCase","addHorizontalScrollButtons","addItemActions","scheduleList","scheduleItem","serviceDuration","getServiceDuration","renderCustomIntervals","useServices","timeKey","intervals","customIntervals","getIntervalsForServiceDuration","renderDate","renderColumn","undefined","day","index","isLast","date","createDayColumn","displayDate","start","timeBegin","end","timeEnd","readDateInfo","weekDay","scroller","item","querySelector","itemWidth","clientWidth","scrollLeft","scrollBy","left","top","behavior","scrollTo","scrollWidth","confirmWarningNode","confirmInputNode","placeholder","required","autocomplete","e","substring","confirmSubmitBtn","verifyConfirmCode","confirmRepeatBtn","confirmWrapper","confirmWrapperId","startCodeTimerActions","TextInputNames","middleName","surname","phone","email","birthday","comment","AppointmentSteps","params","firstInit","getAppSelectors","selectionSteps","Object","values","useTimeSteps","timeStepDurationMinutes","strictCheckingOfRelations","showDoctorsWithoutDepartment","confirmTypes","useConfirmWith","useEmailNote","useCustomMainBtn","customColors","filledInputs","clinicUid","clinicName","specialty","specialtyUid","serviceUid","serviceName","refUid","doctorName","orderDate","textValues","address","prepareSelectionBlocksForRender","renderer","step","checkRoot","insertAppHtml","init","root","isDomNode","getRootElement","body","cleanNode","getAppHtmlSkeleton","getDefaultStartBtn","initCustomEvents","initFormStepNodes","initStartBtn","initBaseNodes","initOverlayAction","initForm","initMobileCloseBtn","initSelectionNodes","initTextNodes","addPhoneMasks","addCalendarSelection","addCustomColors","logResultErrors","subscribe","fullDataLoaded","loaded","renderBlock","clinicsRendered","toggleLoader","formStepChanged","changeFormStepActions","data","currentFormStep","startBtn","togglePopup","Error","overlay","startBtnWrap","mobileCloseBtn","mobileCloseBtnId","messageNode","submitBtn","resultBlock","getAttribute","form","submit","selectionNodes","blockNode","selectedNode","inputNode","isRequired","requiredInputs","block","currentValue","Date","convertDateToDisplay","getTime","val","phoneMask","textNodes","loadData","getListClinic","then","clinicsResponse","error","clinics","getListEmployees","employeesResponse","keys","employees","getSchedule","scheduleResponse","schedule","emit","classList","add","ajax","runAction","sessid","bitrix_sessid","clinicGuid","renderSelectionItems","canRender","selectedClinic","selectedSpecialtyUid","selectedEmployeeUid","selectedServiceUid","clinicCondition","specialtyCondition","alreadyRendered","includes","isNotEmptyString","selectDoctorBeforeService","services","selectedEmployee","selectedService","personalDuration","serviceDurationMs","newIntervals","timestampTimeBegin","timestampTimeEnd","timeDifference","appointmentsCount","floor","convertDateToISO","setMinutes","getMinutes","toggle","nodesKey","remove","times","querySelectorAll","time","addEventListener","stopPropagation","innerHTML","currentTarget","textContent","changeSelectionStep","activateSelectionNodes","getListNomenclature","nomenclature","bindServicesToSpecialties","renderSpecialtiesList","res","renderScheduleList","renderEmployeesList","renderServicesList","selectionStep","employeeUid","empServices","addSpecialty","empServiceUid","employee","addClinicToSpecialty","Array","isArray","current","next","resetValue","activateStepButtons","deactivateStepButtons","propKey","BaseEvent","previousStep","newStep","checkRequiredFields","nextStep","button","removeAttribute","setAttribute","event","preventDefault","orderData","JSON","stringify","none","sendConfirmCode","sendOrder","timeExpires","toFixed","createConfirmationForm","errors","getConfirmationBlock","code","btnNode","finalizingWidget","sendEmailNote","curTimeSeconds","remainingTime","interval","setInterval","clearInterval","success","resTextNode","doctor","finalAnimations","createFinalError","setTimeout","reload","run","allNotEmpty","some","parentElement","phoneIsValid","phoneInput","isValid","maskedInputs","that","birthdayInput","calendar","node","field","bTime","callback_after","timestamp","hslM","hslF","after","on","year","month","hours","minutes","onlyTime","onlyDate","timestampOrISO","getDate","getMonth","getHours","seconds","getSeconds","getFullYear","ucFirst","toLocaleString","weekday","str","slice","console","log","stylesObject","inputClass","textareaClass","runComponentAction","mode","response","AppPlace","namespace","errorText"],"mappings":";;;;;EAAA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;EAC7B,MAAKA,GAAG,KAAK,KAAK,CAAlB,EAAsBA,GAAG,GAAG,EAAN;EACtB,MAAIC,QAAQ,GAAGD,GAAG,CAACC,QAAnB;;EAEA,MAAI,CAACF,GAAD,IAAQ,OAAOG,QAAP,KAAoB,WAAhC,EAA6C;EAAE;EAAS;;EAExD,MAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACE,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAA5B;EACA,MAAIC,KAAK,GAAGH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CAAZ;EACAD,EAAAA,KAAK,CAACE,IAAN,GAAa,UAAb;;EAEA,MAAIN,QAAQ,KAAK,KAAjB,EAAwB;EACtB,QAAIE,IAAI,CAACK,UAAT,EAAqB;EACnBL,MAAAA,IAAI,CAACM,YAAL,CAAkBJ,KAAlB,EAAyBF,IAAI,CAACK,UAA9B;EACD,KAFD,MAEO;EACLL,MAAAA,IAAI,CAACO,WAAL,CAAiBL,KAAjB;EACD;EACF,GAND,MAMO;EACLF,IAAAA,IAAI,CAACO,WAAL,CAAiBL,KAAjB;EACD;;EAED,MAAIA,KAAK,CAACM,UAAV,EAAsB;EACpBN,IAAAA,KAAK,CAACM,UAAN,CAAiBC,OAAjB,GAA2Bb,GAA3B;EACD,GAFD,MAEO;EACLM,IAAAA,KAAK,CAACK,WAAN,CAAkBR,QAAQ,CAACW,cAAT,CAAwBd,GAAxB,CAAlB;EACD;EACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECvBD;EACA;EACA;EACA;EACA;AACA,EAAO,SAASe,SAAT,CAAmBC,KAAnB,EAA4CC,IAA5C,EACP;EACI,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;EACA,MAAMC,cAAc,GAAG,KAAvB;EACA,MAAMC,aAAa,GAAG,OAAtB;EAEA,MAAIC,QAAQ,GAAG,EAAf;EAEA,MAAIC,UAAU,GAAG,CAAjB;;EAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EAClC,QAAIA,CAAC,IAAIL,KAAK,CAACM,MAAf,EAAuB;EACvB,QAAIP,IAAI,CAACM,CAAD,CAAJ,KAAY,GAAZ,IAAmB,CAACH,aAAa,CAACK,IAAd,CAAmBP,KAAK,CAACI,UAAD,CAAxB,CAAxB,EAA+D;;EAC/D,WAAO,CAACH,cAAc,CAACM,IAAf,CAAoBR,IAAI,CAACM,CAAD,CAAxB,CAAR,EAAsC;EAClC,UAAIL,KAAK,CAACI,UAAD,CAAL,KAAsBL,IAAI,CAACM,CAAD,CAA9B,EAAmC;EACnCF,MAAAA,QAAQ,IAAIJ,IAAI,CAACM,CAAC,EAAF,CAAhB;EACH;;EACDF,IAAAA,QAAQ,IAAIH,KAAK,CAACI,UAAU,EAAX,CAAjB;EACH;;EAEDN,EAAAA,KAAK,CAACE,KAAN,GAAcG,QAAd;EACH;AAED,EAAO,SAASK,eAAT,CAAyBC,GAAzB,EAA2C;EAC9C,MAAMC,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDF,GAAjD,CAAf;;EAEA,MAAIC,MAAJ,EACA;EACI,QAAIE,CAAC,GAAGC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAhB;EACA,QAAII,CAAC,GAAGD,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAhB;EACA,QAAIK,CAAC,GAAGF,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAhB;EAEAE,IAAAA,CAAC,IAAI,GAAL;EAAUE,IAAAA,CAAC,IAAI,GAAL;EAAUC,IAAAA,CAAC,IAAI,GAAL;EACpB,QAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASJ,CAAT,EAAYE,CAAZ,EAAeC,CAAf,CAAZ;EAAA,QAA+BG,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASN,CAAT,EAAYE,CAAZ,EAAeC,CAAf,CAArC;EACA,QAAII,CAAC,GAAG,CAAR;EAAA,QAAWC,CAAX;EAAA,QAAcC,CAAC,GAAG,CAACL,GAAG,GAAGE,GAAP,IAAc,CAAhC;;EAEA,QAAIF,GAAG,KAAKE,GAAZ,EAAiB;EACbC,MAAAA,CAAC,GAAGC,CAAC,GAAG,CAAR,CADa;EAEhB,KAFD,MAEO;EACH,UAAME,CAAC,GAAGN,GAAG,GAAGE,GAAhB;EACAE,MAAAA,CAAC,GAAGC,CAAC,GAAG,GAAJ,GAAUC,CAAC,IAAI,IAAIN,GAAJ,GAAUE,GAAd,CAAX,GAAgCI,CAAC,IAAIN,GAAG,GAAGE,GAAV,CAArC;;EACA,cAAQF,GAAR;EACI,aAAKJ,CAAL;EACIO,UAAAA,CAAC,GAAG,CAACL,CAAC,GAAGC,CAAL,IAAUO,CAAV,IAAeR,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAA3B,CAAJ;EACA;;EACJ,aAAKD,CAAL;EACIK,UAAAA,CAAC,GAAG,CAACJ,CAAC,GAAGH,CAAL,IAAUU,CAAV,GAAc,CAAlB;EACA;;EACJ,aAAKP,CAAL;EACII,UAAAA,CAAC,GAAG,CAACP,CAAC,GAAGE,CAAL,IAAUQ,CAAV,GAAc,CAAlB;EACA;EATR;;EAWAH,MAAAA,CAAC,IAAI,CAAL;EACH;;EAEDC,IAAAA,CAAC,GAAGA,CAAC,GAAC,GAAN;EACAA,IAAAA,CAAC,GAAGH,IAAI,CAACM,KAAL,CAAWH,CAAX,CAAJ;EACAC,IAAAA,CAAC,GAAGA,CAAC,GAAC,GAAN;EACAA,IAAAA,CAAC,GAAGJ,IAAI,CAACM,KAAL,CAAWF,CAAX,CAAJ;EACAF,IAAAA,CAAC,GAAGF,IAAI,CAACM,KAAL,CAAW,MAAIJ,CAAf,CAAJ,CAhCJ;;EAmCI,WAAO;EACHA,MAAAA,CAAC,EAAEA,CADA;EAEHC,MAAAA,CAAC,YAAKA,CAAL,MAFE;EAGHC,MAAAA,CAAC,YAAKA,CAAL;EAHE,KAAP;EAKH;;EACD,SAAO,IAAP;EACH;;MC1EYG,YAAb;EAAA;;EAAA;EAAA;EAAA;EAAA;;EAAA;EAAA;EAAA,yBAKgBC,MALhB,EAKiCC,SALjC,EAKoDC,OALpD,EAKqFC,OALrF,EASY;EACJC,MAAAA,eAAK,CAACC,IAAN,CAAWL,MAAX,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,OAAvC;EACH;EAXL;EAAA;EAAA,EAAkCC,eAAK,CAACE,YAAxC;8BAAaP,gCACgB;8BADhBA,iCAEgB;8BAFhBA,iCAGiB;;MCHjBQ,QAAb;EAEI,oBAAYC,SAAZ,EAAoBC,WAApB,EAAgC;EAAA;EAC5B,SAAKD,MAAL,GAAcA,SAAd;EACA,SAAKC,WAAL,GAAmBA,WAAnB;EACH;;EALL;EAAA;EAAA,yCAQI;EACI,aAAOC,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHC,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BC,SAD5B;EAEHC,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,2BAAZ;EAFR,SADa;EAKpBS,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACdC,UAAAA,KAAK,EAAE;EACHC,YAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BI,MAD5B;EAEHF,YAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,kBAAZ;EAFR,WADO;EAKdS,UAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACdC,YAAAA,KAAK,EAAE;EACHC,cAAAA,EAAE,EAAE,KAAKL,MAAL,CAAY,wBAAZ;EADD,aADO;EAIdW,YAAAA,IAAI,EAAE;EAJQ,WAAlB,CADM,EAON,KAAKC,iBAAL,EAPM,EAQN,KAAKC,kBAAL,EARM,EASN,KAAKC,iBAAL,EATM,EAUN,KAAKC,mBAAL,EAVM,EAWN,KAAKC,mBAAL,EAXM,EAYN,KAAKC,kBAAL,EAZM,EAaN,KAAKC,kBAAL,EAbM;EALI,SAAlB,CADM;EALU,OAAjB,CAAP;EA6BH;EAtCL;EAAA;EAAA,wCAwCuB;EAAA;;EACf,UAAMC,SAAS,GAAG,KAAKC,UAAL,CAAgBlB,EAAE,CAACmB,OAAH,CAAW,mCAAX,CAAhB,EAAiE,YAAM;EACrF,QAAA,KAAI,CAACpB,WAAL,CAAiBqB,+BAAjB,CAAiD,IAAjD;EACH,OAFiB,CAAlB;EAGA,UAAMC,UAAU,GAAG,KAAKH,UAAL,CAAgBlB,EAAE,CAACmB,OAAH,CAAW,oCAAX,CAAhB,EAAkE,YAAM;EACvF,QAAA,KAAI,CAACpB,WAAL,CAAiBqB,+BAAjB,CAAiD,KAAjD;EACH,OAFkB,CAAnB;EAGA,aAAOpB,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAER,MAAM,CAAC,uBAAD,CADd;EAEHK,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BkB,WAA3B,CAAuCC;EAFxC,SADa;EAKpBhB,QAAAA,QAAQ,2CACA,KAAKiB,iBAAL,CACA,CAAC,KAAKzB,WAAL,CAAiB0B,QAAjB,CAA0BC,UAA3B,EAAuC,KAAK3B,WAAL,CAAiB0B,QAAjB,CAA0BE,cAAjE,CADA,CADA,IAIJ,KAAKC,mBAAL,CAAyB,CAACX,SAAD,EAAYI,UAAZ,CAAzB,CAJI;EALY,OAAjB,CAAP;EAYH;EA3DL;EAAA;EAAA,yCA6DwB;EAAA;;EAChB,UAAMQ,OAAO,GAAG,KAAKX,UAAL,CAAgBlB,EAAE,CAACmB,OAAH,CAAW,2BAAX,CAAhB,EAAyD,YAAM;EAC3E,QAAA,MAAI,CAACpB,WAAL,CAAiB+B,cAAjB,CAAgC,MAAI,CAAC/B,WAAL,CAAiBgC,aAAjB,CAA+BR,GAA/D;EACH,OAFe,CAAhB;EAGA,UAAMS,OAAO,GAAG,KAAKd,UAAL,CAAgBlB,EAAE,CAACmB,OAAH,CAAW,2BAAX,CAAhB,EAAyD,YAAM;EAC3E,QAAA,MAAI,CAACpB,WAAL,CAAiB+B,cAAjB,CAAgC,MAAI,CAAC/B,WAAL,CAAiBgC,aAAjB,CAA+BE,KAA/D;EACH,OAFe,CAAhB;EAGA,aAAOjC,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,YAAKR,MAAM,CAAC,uBAAD,CAAX,cAAwCA,MAAM,CAAC,QAAD,CAA9C,CADN;EAEHK,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BkB,WAA3B,CAAuCY;EAFxC,SADa;EAKpB3B,QAAAA,QAAQ,2CACA,KAAKiB,iBAAL,CAAuB,CACvB,KAAKzB,WAAL,CAAiB0B,QAAjB,CAA0BU,YADH,EAEvB,KAAKpC,WAAL,CAAiB0B,QAAjB,CAA0BW,WAFH,EAGvB,KAAKrC,WAAL,CAAiB0B,QAAjB,CAA0BY,WAHH,CAAvB,CADA,IAMJ,KAAKT,mBAAL,CAAyB,CAACC,OAAD,EAAUG,OAAV,CAAzB,CANI;EALY,OAAjB,CAAP;EAcH;EAlFL;EAAA;EAAA,wCAoFuB;EACf,aAAOhC,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,YAAKR,MAAM,CAAC,uBAAD,CAAX,cAAwCA,MAAM,CAAC,QAAD,CAA9C,CADN;EAEHK,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BkB,WAA3B,CAAuCW;EAFxC,SADa;EAKpB1B,QAAAA,QAAQ,2CACA,KAAK+B,YAAL,EADA,IAEJ,KAAKV,mBAAL,CAAyB,CAAC,KAAKW,gBAAL,EAAD,CAAzB,CAFI;EALY,OAAjB,CAAP;EAUH;EA/FL;EAAA;EAAA,0CAiGyB;EACjB,aAAOvC,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EAClBC,QAAAA,KAAK,EAAE;EACHC,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BoC;EAD5B;EADW,OAAf,CAAP;EAKH;EAvGL;EAAA;EAAA,wCAyGwBC,OAzGxB,EAyG+C;EACvC,aAAOzC,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,iCAAZ;EADR,SADa;EAIpBS,QAAAA,QAAQ,EAAEkC;EAJU,OAAjB,CAAP;EAMH;EAhHL;EAAA;EAAA,uCAkHsB;EACd,aAAOzC,EAAE,CAACC,MAAH,CAAU,QAAV,EAAoB;EACvBC,QAAAA,KAAK,EAAE;EACH/C,UAAAA,IAAI,EAAE,QADH;EAEHgD,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BsC,WAF5B;EAGHpC,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,yBAAZ;EAHR,SADgB;EAMvB6C,QAAAA,IAAI,EAAE3C,EAAE,CAACmB,OAAH,CAAW,2BAAX;EANiB,OAApB,CAAP;EAQH;EA3HL;EAAA;EAAA,+BA6HewB,IA7Hf,EA6HqBnD,OA7HrB,EA6H6B;EACrB,aAAOQ,EAAE,CAACC,MAAH,CAAU,QAAV,EAAoB;EACvBC,QAAAA,KAAK,EAAE;EACH/C,UAAAA,IAAI,EAAE,QADH;EAEHmD,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,yBAAZ,CAFR;EAGH8C,UAAAA,QAAQ,EAAE;EAHP,SADgB;EAMvBD,QAAAA,IAAI,EAAEA,IANiB;EAOvBE,QAAAA,MAAM,EAAE;EACJC,UAAAA,KAAK,EAAEtD;EADH;EAPe,OAApB,CAAP;EAWH;EAzIL;EAAA;EAAA,0CA2IyB;EACjB,aAAOQ,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EAClBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,0BAAZ;EADR,SADW;EAIlBS,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACd0C,UAAAA,IAAI,YAAK3C,EAAE,CAACmB,OAAH,CAAW,oCAAX,CAAL;EADU,SAAlB,CADM,EAINnB,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EACXC,UAAAA,KAAK,EAAE;EACH6C,YAAAA,IAAI,EAAE,KAAKhD,WAAL,CAAiBiD,UAAjB,CAA4B,iBAA5B,CADH;EAEH1D,YAAAA,MAAM,EAAE;EAFL,WADI;EAKXqD,UAAAA,IAAI,EAAE3C,EAAE,CAACmB,OAAH,CAAW,oCAAX;EALK,SAAf,CAJM;EAJQ,OAAf,CAAP;EAiBH;EA7JL;EAAA;EAAA,yCA+JwB;EAChB,aAAOnB,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHC,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2B6C;EAD5B,SADa;EAIpB1C,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EACX0C,UAAAA,IAAI,EAAE;EADK,SAAf,CADM;EAJU,OAAjB,CAAP;EAUH;EA1KL;EAAA;EAAA,yCA4KwB;EAChB,aAAO3C,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,wBAAZ;EADR,SADa;EAIpBW,QAAAA,IAAI,yBAAiB,KAAKX,MAAL,CAAY,yBAAZ,CAAjB,+EACsB,KAAKA,MAAL,CAAY,qBAAZ,CADtB;EAJgB,OAAjB,CAAP;EAQH;EArLL;EAAA;EAAA,sCAuLsBoD,SAvLtB,EAwLI;EAAA;;EACI,UAAMC,OAAO,GAAG,EAAhB;EACAD,MAAAA,SAAS,CAAC/E,MAAV,IAAoB+E,SAAS,CAACE,OAAV,CAAkB,UAAAC,GAAG,EAAI;EACzC,YAAI,CAAC,MAAI,CAACtD,WAAL,CAAiBuD,eAAjB,CAAiCC,cAAjC,CAAgDF,GAAhD,CAAL,EAA0D;EACtD;EACH;;EAED,YAAMG,QAAQ,GAAGxD,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EAC5BC,UAAAA,KAAK,EAAE;EACHC,YAAAA,EAAE,EAAE,MAAI,CAACJ,WAAL,CAAiBuD,eAAjB,CAAiCD,GAAjC,EAAsCI,UADvC;EAEHnD,YAAAA,SAAS,EAAE,MAAI,CAACR,MAAL,CAAY,yBAAZ;EAFR,WADqB;EAK5B6C,UAAAA,IAAI,EAAE,MAAI,CAAC5C,WAAL,CAAiB2D,WAAjB,CAA6BL,GAA7B,CALsB;EAM5BR,UAAAA,MAAM,EAAE;EACJC,YAAAA,KAAK,EAAE;EAAA,qBAAM,MAAI,CAAC/C,WAAL,CAAiB4D,mBAAjB,CAAqCN,GAArC,EAA0CG,QAA1C,EAAoDI,IAApD,CAAN;EAAA;EADH;EANoB,SAAf,CAAjB;EAUA,YAAMA,IAAI,GAAG5D,EAAE,CAACC,MAAH,CAAU,IAAV,EAAgB;EACzBC,UAAAA,KAAK,EAAE;EACHC,YAAAA,EAAE,EAAE,MAAI,CAACJ,WAAL,CAAiBuD,eAAjB,CAAiCD,GAAjC,EAAsCQ,MADvC;EAEHvD,YAAAA,SAAS,YAAK,MAAI,CAACR,MAAL,CAAY,qBAAZ,CAAL;EAFN,WADkB;EAKzB6C,UAAAA,IAAI,EAAE,MAAI,CAAC5C,WAAL,CAAiB2D,WAAjB,CAA6BL,GAA7B;EALmB,SAAhB,CAAb;EAOA,YAAM1F,KAAK,GAAGqC,EAAE,CAACC,MAAH,CAAU,OAAV,EAAmB;EAC7BC,UAAAA,KAAK,EAAE;EACHC,YAAAA,EAAE,EAAE,MAAI,CAACJ,WAAL,CAAiBuD,eAAjB,CAAiCD,GAAjC,EAAsCS,OADvC;EAEHC,YAAAA,IAAI,EAAE,MAAI,CAAChE,WAAL,CAAiBuD,eAAjB,CAAiCD,GAAjC,EAAsCS,OAFzC;EAGH3G,YAAAA,IAAI,EAAE;EAHH;EADsB,SAAnB,CAAd;EAQA,YAAM6G,eAAe,GAAIX,GAAG,KAAK,MAAI,CAACtD,WAAL,CAAiB0B,QAAjB,CAA0BC,UAAnC,GAAiD,EAAjD,GAAsD,MAAI,CAAC5B,MAAL,CAAY,UAAZ,CAA9E;EACAqD,QAAAA,OAAO,CAACc,IAAR,CACIjE,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACbC,UAAAA,KAAK,EAAE;EACHC,YAAAA,EAAE,EAAE,MAAI,CAACJ,WAAL,CAAiBuD,eAAjB,CAAiCD,GAAjC,EAAsCa,OADvC;EAEH5D,YAAAA,SAAS,YAAK,MAAI,CAACR,MAAL,CAAY,iBAAZ,CAAL,cAAuCkE,eAAvC;EAFN,WADM;EAKbzD,UAAAA,QAAQ,EAAE,CAAEiD,QAAF,EAAYI,IAAZ,EAAkBjG,KAAlB;EALG,SAAjB,CADJ;EASH,OAxCmB,CAApB;EAyCA,aAAOwF,OAAP;EACH;EApOL;EAAA;EAAA,mCAsOmB;EACX,UAAMA,OAAO,GAAG,EAAhB;;EAEA,WAAI,IAAME,GAAV,IAAiB,KAAKtD,WAAL,CAAiBiD,UAAjB,CAA4B,YAA5B,CAAjB,EACA;EACI,YAAI,CAAC,KAAKjD,WAAL,CAAiBiD,UAAjB,CAA4B,YAA5B,EAA0CO,cAA1C,CAAyDF,GAAzD,CAAL,EAAmE;EAC/D;EACH;;EACDF,QAAAA,OAAO,CAACc,IAAR,CACIjE,EAAE,CAACC,MAAH,CAAU,OAAV,EAAmB;EACfC,UAAAA,KAAK,EAAE;EACHI,YAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,gCAAZ;EADR,WADQ;EAIfS,UAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU;EACNkE,YAAAA,GAAG,EAAE,KAAKpE,WAAL,CAAiBiD,UAAjB,CAA4B,YAA5B,EAA0CK,GAA1C,EAA+C,MAA/C,IAAyD,OAAzD,GAAmE,UADlE;EAENnD,YAAAA,KAAK,EAAE,KAAKkE,iBAAL,CAAuB,KAAKrE,WAAL,CAAiBiD,UAAjB,CAA4B,YAA5B,EAA0CK,GAA1C,CAAvB;EAFD,WAAV,CADM;EAJK,SAAnB,CADJ;EAaH;;EAED,aAAOF,OAAP;EACH;EA9PL;EAAA;EAAA,sCAgQsBjD,KAhQtB,EAgQ6B;EACrB,UAAMmE,aAAa,GAAG,EAAtB;;EACA,WAAI,IAAMC,IAAV,IAAkBpE,KAAlB,EACA;EACI,YAAIA,KAAK,CAACqD,cAAN,CAAqBe,IAArB,CAAJ,EACA;EACI,cAAIA,IAAI,KAAK,OAAb,EACA;EACID,YAAAA,aAAa,CAAC/D,SAAd,GAA0B,KAAKR,MAAL,CAAaI,KAAK,CAACoE,IAAD,CAAlB,CAA1B;EACH,WAHD,MAKA;EACID,YAAAA,aAAa,CAACC,IAAD,CAAb,GAAsBpE,KAAK,CAACoE,IAAD,CAA3B;EACH;EACJ;EACJ;;EACD,aAAOD,aAAP;EACH;EAED;EACJ;EACA;EACA;;EAtRA;EAAA;EAAA,yCAuRyB;EACjB,aAAOrE,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHC,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BmE,cAD5B;EAEHjE,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,4BAAZ;EAFR,SADa;EAKpBS,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,QAAV,EAAoB;EAChBC,UAAAA,KAAK,EAAE;EACHC,YAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BoE;EAD5B,WADS;EAIhBjE,UAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACd0C,YAAAA,IAAI,EAAE3C,EAAE,CAACmB,OAAH,CAAW,4BAAX;EADQ,WAAlB,CADM;EAJM,SAApB,CADM;EALU,OAAjB,CAAP;EAkBH;EA1SL;EAAA;EAAA,qCA4SqB;EACb,aAAOnB,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpBC,QAAAA,KAAK,EAAE;EACHC,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BqE;EAD5B;EADa,OAAjB,CAAP;EAKH;EAlTL;EAAA;EAAA,yCAoTyBC,QApTzB,EAoTmCC,OApTnC,EAoT4CC,KApT5C,EAoTmD;EAC3C,WAAI,IAAIvB,GAAR,IAAeuB,KAAf,EACA;EACI,YAAG,CAACA,KAAK,CAACrB,cAAN,CAAqBF,GAArB,CAAJ,EAA+B;EAC/B,YAAG,CAAC,KAAKtD,WAAL,CAAiB8E,aAAjB,CAA+BH,QAA/B,EAAyCC,OAAzC,EAAkDC,KAAK,CAACvB,GAAD,CAAvD,CAAJ,EAAmE;;EAEnE,YAAGsB,OAAO,KAAK,KAAK5E,WAAL,CAAiB0B,QAAjB,CAA0BY,WAAzC,EACA;EACI,eAAKyC,kBAAL,CAAwBJ,QAAxB,EAAkCE,KAAK,CAACvB,GAAD,CAAvC;EACH,SAHD,MAKA;EAAA;;EACI,cAAGuB,KAAK,CAACvB,GAAD,CAAL,CAAWE,cAAX,CAA0B,OAA1B,CAAH,EAAsC;EAClC,gBAAMwB,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACvB,GAAD,CAAL,CAAW,OAAX,CAAD,CAAN,GAA8B,CAA9B,gBAAwCuB,KAAK,CAACvB,GAAD,CAAL,CAAW,OAAX,CAAxC,mBAA2E,EAAzF;EACAuB,YAAAA,KAAK,CAACvB,GAAD,CAAL,CAAW4B,QAAX,gBAA4BL,KAAK,CAACvB,GAAD,CAAL,CAAWU,IAAvC,qBAAsDgB,KAAtD;EACH;;EACD,cAAMG,SAAS,GAAG;EACdC,YAAAA,GAAG,oBAAGP,KAAK,CAACvB,GAAD,CAAL,CAAW8B,GAAd,2DAAqB9B,GADV;EAEdU,YAAAA,IAAI,yBAAEa,KAAK,CAACvB,GAAD,CAAL,CAAW4B,QAAb,qEAAyBL,KAAK,CAACvB,GAAD,CAAL,CAAWU;EAF1B,WAAlB;EAIAa,UAAAA,KAAK,CAACvB,GAAD,CAAL,CAAW+B,QAAX,GAAuBF,SAAS,CAACE,QAAV,GAAqBR,KAAK,CAACvB,GAAD,CAAL,CAAW+B,QAAvD,GAAkE,KAAK,CAAvE;EAEApF,UAAAA,EAAE,CAACqF,MAAH,CAAUrF,EAAE,CAACC,MAAH,CAAU,IAAV,EAAgB;EACtBqF,YAAAA,OAAO,EAAEJ,SADa;EAEtBzE,YAAAA,IAAI,0BAAEmE,KAAK,CAACvB,GAAD,CAAL,CAAW4B,QAAb,uEAAyBL,KAAK,CAACvB,GAAD,CAAL,CAAWU;EAFlB,WAAhB,CAAV,EAGIW,QAHJ;EAIH;EACJ;;EAED,UAAIA,QAAQ,CAACnE,QAAT,CAAkBpC,MAAlB,KAA6B,CAAjC,EAAmC;EAC/B6B,QAAAA,EAAE,CAACqF,MAAH,CACI,KAAKE,wBAAL,CAA8BvF,EAAE,CAACmB,OAAH,uBAA0BwD,OAAO,CAACa,WAAR,EAA1B,sBAA9B,CADJ,EAEId,QAFJ;EAIH,OALD,MAOA;EACI,YAAGC,OAAO,KAAK,KAAK5E,WAAL,CAAiB0B,QAAjB,CAA0BY,WAAzC,EAAqD;EACjD,eAAKoD,0BAAL,CAAgCf,QAAhC;EACH;;EACD,aAAK3E,WAAL,CAAiB2F,cAAjB,CAAgCf,OAAhC;EACH;EACJ;EA9VL;EAAA;EAAA,uCAgWuBgB,YAhWvB,EAgWqCC,YAhWrC,EAgWmD;EAAA;EAAA;EAAA;;EAC3C,UAAMC,eAAe,GAAG,KAAK9F,WAAL,CAAiB+F,kBAAjB,CAAoCF,YAApC,CAAxB;EACA,UAAMG,qBAAqB,GAAG,KAAKhG,WAAL,CAAiBiG,WAAjB,IAAiCH,eAAe,GAAG,CAAjF;EACA,UAAMI,OAAO,GAAGF,qBAAqB,GAAG,kBAAH,GAAwB,MAA7D;;EAEA,mCAAIH,YAAY,CAAC,WAAD,CAAhB,4EAAI,sBAA4BK,OAA5B,CAAJ,mDAAI,uBAAsC9H,MAA1C,EACA;EACI,YAAI+H,SAAS,GAAGN,YAAY,CAAC,WAAD,CAAZ,CAA0BK,OAA1B,CAAhB;;EAEA,YAAIF,qBAAJ,EACA;EACI,cAAMI,eAAe,GAAG,KAAKpG,WAAL,CAAiBqG,8BAAjB,CAAgDF,SAAhD,EAA2DL,eAAe,GAAC,IAA3E,CAAxB;;EACA,cAAIM,eAAe,CAAChI,MAAhB,KAA2B,CAA/B,EAAkC;EAC9B;EACH,WAFD,MAGK;EACD+H,YAAAA,SAAS,GAAGC,eAAZ;EACH;EACJ;;EAED,YAAIE,UAAJ;EACA,YAAIC,YAAY,GAAGC,SAAnB;EACAL,QAAAA,SAAS,CAAC9C,OAAV,CAAkB,UAACoD,GAAD,EAAMC,KAAN,EAAgB;EAC9B,cAAMC,MAAM,GAAID,KAAK,KAAMP,SAAS,CAAC/H,MAAV,GAAmB,CAA9C;;EACA,cAAKqI,GAAG,CAACG,IAAJ,KAAaN,UAAd,IAA6BK,MAAjC,EACA;EACIJ,YAAAA,YAAY,GAAGX,YAAY,CAACN,MAAb,CAAoBiB,YAApB,CAAH,GAAuC,KAAK,CAAxD;EACA,aAACI,MAAD,IAAYR,SAAS,CAAC/H,MAAV,KAAqB,CAAjC,GAAsCmI,YAAY,GAAG,MAAI,CAACM,eAAL,CAAqBJ,GAArB,CAArD,GAAiF,KAAK,CAAtF;EACAH,YAAAA,UAAU,GAAGG,GAAG,CAACG,IAAjB;EACH;;EAED,cAAIL,YAAJ,EACA;EACItG,YAAAA,EAAE,CAACqF,MAAH,CAAUrF,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACxBqF,cAAAA,OAAO,EAAE;EACLuB,gBAAAA,WAAW,YAAKL,GAAG,CAAC,eAAD,CAAR,MADN;EAELG,gBAAAA,IAAI,EAAUH,GAAG,CAACG,IAFb;EAGLG,gBAAAA,KAAK,EAASN,GAAG,CAACO,SAHb;EAILC,gBAAAA,GAAG,EAAWR,GAAG,CAACS;EAJb,eADe;EAOxBtE,cAAAA,IAAI,YAAK6D,GAAG,CAAC,oBAAD,CAAR;EAPoB,aAAlB,CAAV,EAQIF,YARJ;EASH;EACJ,SArBD;EAsBH;EACJ;EA7YL;EAAA;EAAA,oCA+YoBE,GA/YpB,EA+YwB;EAChB,UAAMG,OAAI,GAAG,KAAK5G,WAAL,CAAiBmH,YAAjB,CAA8BV,GAAG,CAACO,SAAlC,CAAb;EAEA,aAAO/G,EAAE,CAACC,MAAH,CAAU,IAAV,EAAgB;EACnBM,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EACX0C,UAAAA,IAAI,YAAKgE,OAAI,CAACQ,OAAV,uCACEX,GAAG,CAAC,eAAD,CADL;EADO,SAAf,CADM;EADS,OAAhB,CAAP;EAQH;EA1ZL;EAAA;EAAA,+CA4Z+BY,QA5Z/B,EA4ZwC;EAChC,UAAMC,IAAI,GAAGD,QAAQ,CAACE,aAAT,CAAuB,IAAvB,CAAb;;EAEA,UAAIF,QAAQ,IAAIC,IAAhB,EAAqB;EACjB,YAAME,SAAS,GAAGH,QAAQ,CAACE,aAAT,CAAuB,IAAvB,EAA6BE,WAA/C;EAEAxH,QAAAA,EAAE,CAACqF,MAAH,CAAUrF,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACvBC,UAAAA,KAAK,EAAE;EACHI,YAAAA,SAAS,EAAER,MAAM,CAAC,2BAAD;EADd,WADgB;EAIvBS,UAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,QAAV,EAAoB;EAChBC,YAAAA,KAAK,EAAE;EACH/C,cAAAA,IAAI,EAAE;EADH,aADS;EAIhBwF,YAAAA,IAAI,EAAE,GAJU;EAKhBE,YAAAA,MAAM,EAAE;EACJC,cAAAA,KAAK,EAAE,iBAAM;EACT,oBAAIsE,QAAQ,CAACK,UAAT,KAAwB,CAA5B,EAA+B;EAC3BL,kBAAAA,QAAQ,CAACM,QAAT,CAAkB;EAAEC,oBAAAA,IAAI,EAAE,CAACJ,SAAD,GAAW,CAAnB;EAAsBK,oBAAAA,GAAG,EAAE,CAA3B;EAA8BC,oBAAAA,QAAQ,EAAE;EAAxC,mBAAlB;EACH,iBAFD,MAEO;EACHT,kBAAAA,QAAQ,CAACU,QAAT,CAAkB;EAAEH,oBAAAA,IAAI,EAAEP,QAAQ,CAACW,WAAjB;EAA8BH,oBAAAA,GAAG,EAAE,CAAnC;EAAsCC,oBAAAA,QAAQ,EAAE;EAAhD,mBAAlB;EACH;EACJ;EAPG;EALQ,WAApB,CADM,EAgBN7H,EAAE,CAACC,MAAH,CAAU,QAAV,EAAoB;EAChBC,YAAAA,KAAK,EAAE;EACH/C,cAAAA,IAAI,EAAE;EADH,aADS;EAIhBwF,YAAAA,IAAI,EAAE,GAJU;EAKhBE,YAAAA,MAAM,EAAE;EACJC,cAAAA,KAAK,EAAE,iBAAM;EACT,oBAAIsE,QAAQ,CAACK,UAAT,GAAuBL,QAAQ,CAACW,WAAT,GAAuBR,SAAS,GAAC,CAAjC,GAAqC,EAAhE,EAAqE;EACjEH,kBAAAA,QAAQ,CAACM,QAAT,CAAkB;EAAEC,oBAAAA,IAAI,EAAEJ,SAAS,GAAC,CAAlB;EAAqBK,oBAAAA,GAAG,EAAE,CAA1B;EAA6BC,oBAAAA,QAAQ,EAAE;EAAvC,mBAAlB;EACH,iBAFD,MAEO;EACHT,kBAAAA,QAAQ,CAACU,QAAT,CAAkB;EAAEH,oBAAAA,IAAI,EAAE,CAAR;EAAWC,oBAAAA,GAAG,EAAE,CAAhB;EAAmBC,oBAAAA,QAAQ,EAAE;EAA7B,mBAAlB;EACH;EACJ;EAPG;EALQ,WAApB,CAhBM;EAJa,SAAjB,CAAV,EAoCIT,QApCJ;EAqCH;EACJ;EAxcL;EAAA;EAAA,2CA2cI;EAAA;;EACI,UAAMY,kBAAkB,GAAGhI,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EACtCC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAER,MAAM,CAAC,0BAAD;EADd;EAD+B,OAAf,CAA3B;EAMA,UAAMmI,gBAAgB,GAAGjI,EAAE,CAACC,MAAH,CAAU,OAAV,EAAmB;EACxCC,QAAAA,KAAK,EAAE;EACH/C,UAAAA,IAAI,EAAE,QADH;EAEHmD,UAAAA,SAAS,EAAE,KAAKR,MAAL,CAAY,wBAAZ,CAFR;EAGHoI,UAAAA,WAAW,EAAElI,EAAE,CAACmB,OAAH,CAAW,kCAAX,CAHV;EAIHgH,UAAAA,QAAQ,EAAE,MAJP;EAKHC,UAAAA,YAAY,EAAE;EALX,SADiC;EAQxCvF,QAAAA,MAAM,EAAE;EACJlF,UAAAA,KAAK,EAAE,eAAC0K,CAAD,EAAO;EAAA;;EACV,gBAAI,cAAAA,CAAC,CAAC/I,MAAF,2EAAUzB,KAAV,oEAAiBM,MAAjB,IAA0B,CAA9B,EAAgC;EAC5BkK,cAAAA,CAAC,CAAC/I,MAAF,CAASzB,KAAT,GAAiBwK,CAAC,CAAC/I,MAAF,CAASzB,KAAT,CAAeyK,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAjB;EACH;EACJ;EALG;EARgC,OAAnB,CAAzB;EAiBA,UAAMC,gBAAgB,GAAGvI,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACtCC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAER,MAAM,CAAC,iCAAD;EADd,SAD+B;EAItCS,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,QAAV,EAAoB;EAChBC,UAAAA,KAAK,EAAE;EACHI,YAAAA,SAAS,EAAER,MAAM,CAAC,yBAAD,CADd;EAEH3C,YAAAA,IAAI,EAAE;EAFH,WADS;EAKhBwF,UAAAA,IAAI,EAAE3C,EAAE,CAACmB,OAAH,CAAW,2BAAX,CALU;EAMhB0B,UAAAA,MAAM,EAAE;EACJC,YAAAA,KAAK,EAAE,eAACuF,CAAD;EAAA,qBAAO,MAAI,CAACtI,WAAL,CAAiByI,iBAAjB,CAAmCP,gBAAgB,CAACpK,KAApD,EAA2DmK,kBAA3D,EAA+EK,CAAC,CAAC/I,MAAjF,CAAP;EAAA;EADH;EANQ,SAApB,CADM;EAJ4B,OAAjB,CAAzB;EAkBA,UAAMmJ,gBAAgB,GAAGzI,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EACpCC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAER,MAAM,CAAC,8BAAD,CADd;EAEHiD,UAAAA,IAAI,EAAE;EAFH;EAD6B,OAAf,CAAzB;EAOA,UAAM2F,cAAc,GAAG1I,EAAE,CAACC,MAAH,CAAU,KAAV,EAAiB;EACpCC,QAAAA,KAAK,EAAE;EACHC,UAAAA,EAAE,EAAE,KAAKJ,WAAL,CAAiBK,SAAjB,CAA2BuI,gBAD5B;EAEH1L,UAAAA,KAAK,EAAE;EAFJ,SAD6B;EAKpCsD,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,OAAV,EAAmB;EACfC,UAAAA,KAAK,EAAE;EACHI,YAAAA,SAAS,EAAER,MAAM,CAAC,gCAAD;EADd,WADQ;EAIfS,UAAAA,QAAQ,EAAE,CACN0H,gBADM;EAJK,SAAnB,CADM,EASND,kBATM,EAUNO,gBAVM,EAWNE,gBAXM;EAL0B,OAAjB,CAAvB;EAsBA,WAAK1I,WAAL,CAAiB6I,qBAAjB,CAAuCH,gBAAvC;EAGA,aAAOC,cAAP;EACH;EAthBL;EAAA;EAAA,6CAwhB6BvH,OAxhB7B,EAwhB8C;EACtC,aAAOnB,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACrBC,QAAAA,KAAK,EAAE;EACHI,UAAAA,SAAS,EAAER,MAAM,CAAC,yBAAD;EADd,SADc;EAIrB6C,QAAAA,IAAI,EAAExB;EAJe,OAAlB,CAAP;EAMH;EA/hBL;EAAA;EAAA;;ECYO,IAAM0H,cAA+B,GAAG;EAC3C9E,EAAAA,IAAI,EAAE,MADqC;EAE3C+E,EAAAA,UAAU,EAAE,YAF+B;EAG3CC,EAAAA,OAAO,EAAE,SAHkC;EAI3CC,EAAAA,KAAK,EAAE,OAJoC;EAK3CC,EAAAA,KAAK,EAAE,OALoC;EAM3CC,EAAAA,QAAQ,EAAE,UANiC;EAO3CC,EAAAA,OAAO,EAAE;EAPkC,CAAxC;;ECdP;AACA;;;;;;;;;;MAUaC,gBAAb;EAiCI;EACJ;EACA;EACA;EACI,4BAAYC,MAAZ,EACA;EAAA;;EAAA;EAAA,uDApCgC,EAoChC;EAAA,yDAnCgC,IAmChC;EAAA,uDAlCgC;EAAC9H,MAAAA,GAAG,EAAE,IAAN;EAAYW,MAAAA,GAAG,EAAE,IAAjB;EAAuBD,MAAAA,KAAK,EAAE;EAA9B,KAkChC;EAAA,mDAjCgC,kBAiChC;EAAA,gDAhCgC,KAgChC;EAAA,qDA/BgC,CA+BhC;EAAA,wDA9BgC,EA8BhC;EAAA,oDA7BgC,EA6BhC;EAAA,4DA5BgC,EA4BhC;EAAA,kDA3BW;EACPP,MAAAA,UAAU,EAAM,SADT;EAEPC,MAAAA,cAAc,EAAE,aAFT;EAGPQ,MAAAA,YAAY,EAAI,WAHT;EAIPC,MAAAA,WAAW,EAAK,UAJT;EAKPC,MAAAA,WAAW,EAAK;EALT,KA2BX;EAAA,8HAnBK,KAAKZ,QAAL,CAAcC,UAmBnB,EAnBoC,EAmBpC,sDAlBK,KAAKD,QAAL,CAAcE,cAkBnB,EAlBoC,EAkBpC,sDAjBK,KAAKF,QAAL,CAAcW,WAiBnB,EAjBoC,EAiBpC,sDAhBK,KAAKX,QAAL,CAAcU,YAgBnB,EAhBoC,EAgBpC,sDAfK,KAAKV,QAAL,CAAcY,WAenB,EAfoC,EAepC;EAAA,mDAbkB,EAalB;EAAA,yDAZkB,EAYlB;EAAA,wDAXkB,EAWlB;EAAA,mDAVkB,EAUlB;EAAA,qDATkB,EASlB;EAAA,mEAP4B,IAO5B;EACI,SAAKiH,SAAL,GAAsB,IAAtB;EACA,SAAKtG,UAAL,GAAsBqG,MAAtB;EACA,SAAKjJ,SAAL,GAAsB,KAAKmJ,eAAL,CAAqBzJ,MAArB,CAAtB;EACA,SAAK0J,cAAL,GAAsBC,MAAM,CAACC,MAAP,CAAc,KAAKjI,QAAnB,CAAtB;EAEA,SAAKuE,WAAL,GAAyBqD,MAAM,CAACrD,WAAP,KAAuB,GAAhD;EACA,SAAK2D,YAAL,GAA0BN,MAAM,CAACM,YAAP,KAAwB,GAAlD;EACA,SAAKC,uBAAL,GAAgC5E,MAAM,CAACqE,MAAM,CAACO,uBAAR,CAAtC;EACA,SAAKC,yBAAL,GAAmCR,MAAM,CAACQ,yBAAP,KAAqC,GAAxE;EACA,SAAKC,4BAAL,GAAqCT,MAAM,CAACS,4BAAP,KAAwC,GAA7E;EACA,SAAKC,YAAL,GAAsCV,MAAM,CAACU,YAA7C;EACA,SAAKC,cAAL,GAAuCX,MAAM,CAACW,cAA9C;EACA,SAAKC,YAAL,GAAuCZ,MAAM,CAACY,YAAP,KAAwB,GAA/D;EAEA,SAAKC,gBAAL,GAAyBb,MAAM,CAACa,gBAAP,KAA4B,GAA7B,IAAqCb,MAAM,CAAC,iBAAD,CAAnE;EACA,SAAKc,YAAL,2BAAwBd,MAAM,CAACc,YAA/B,uEAA+C,EAA/C;EAEA,SAAKC,YAAL,+EACK,KAAK3I,QAAL,CAAcC,UADnB,EACgC;EACxB2I,MAAAA,SAAS,EAAE,KADa;EAExBC,MAAAA,UAAU,EAAE;EAFY,KADhC,oDAKK,KAAK7I,QAAL,CAAcE,cALnB,EAKoC;EAC5B4I,MAAAA,SAAS,EAAE,KADiB;EAE5BC,MAAAA,YAAY,EAAE;EAFc,KALpC,oDASK,KAAK/I,QAAL,CAAcW,WATnB,EASiC;EACzBqI,MAAAA,UAAU,EAAE,KADa;EAEzBC,MAAAA,WAAW,EAAE,KAFY;EAGzB7E,MAAAA,eAAe,EAAE;EAHQ,KATjC,oDAcK,KAAKpE,QAAL,CAAcU,YAdnB,EAckC;EAC1BwI,MAAAA,MAAM,EAAE,KADkB;EAE1BC,MAAAA,UAAU,EAAE;EAFc,KAdlC,oDAkBK,KAAKnJ,QAAL,CAAcY,WAlBnB,EAkBiC;EACzBwI,MAAAA,SAAS,EAAE,KADc;EAEzB9D,MAAAA,SAAS,EAAE,KAFc;EAGzBE,MAAAA,OAAO,EAAE;EAHgB,KAlBjC,kEAuBgB;EACRlD,MAAAA,IAAI,iDAAI,KAAKqG,YAAT,iFAAI,mBAAmBU,UAAvB,2DAAI,uBAA+B/G,IAAnC,yEAAiD,KAD7C;EAERgF,MAAAA,OAAO,mDAAG,KAAKqB,YAAR,iFAAG,oBAAmBU,UAAtB,0DAAG,sBAA+B/B,OAAlC,2EAAgD,KAF/C;EAGRD,MAAAA,UAAU,mDAAE,KAAKsB,YAAP,iFAAE,oBAAmBU,UAArB,0DAAE,sBAA+BhC,UAAjC,2EAA+C,KAHjD;EAIRE,MAAAA,KAAK,mDAAI,KAAKoB,YAAT,iFAAI,oBAAmBU,UAAvB,0DAAI,sBAA+B9B,KAAnC,2EAAiD,KAJ9C;EAKR+B,MAAAA,OAAO,mDAAG,KAAKX,YAAR,iFAAG,oBAAmBU,UAAtB,0DAAG,sBAA+BC,OAAlC,2EAAgD,KAL/C;EAMR9B,MAAAA,KAAK,mDAAO,KAAKmB,YAAZ,iFAAO,oBAAmBU,UAA1B,0DAAO,sBAA+B7B,KAAtC,2EAAoD,KANjD;EAORC,MAAAA,QAAQ,mDAAI,KAAKkB,YAAT,iFAAI,oBAAmBU,UAAvB,0DAAI,sBAA+B5B,QAAnC,2EAAiD,KAPjD;EAQRC,MAAAA,OAAO,mDAAG,KAAKiB,YAAR,iFAAG,oBAAmBU,UAAtB,0DAAG,sBAA+B3B,OAAlC,2EAAgD;EAR/C,KAvBhB;EAmCA,SAAK6B,+BAAL;EACA,SAAKC,QAAL,GAAgB,IAAIpL,QAAJ,CAAaC,MAAb,EAAqB,IAArB,CAAhB;EACH;EAED;EACJ;EACA;EACA;;;EAlGA;EAAA;EAAA,sDAmGqC;EAAA;;EAC7B,WAAK0J,cAAL,CAAoBpG,OAApB,CAA4B,UAAA8H,IAAI,EAAI;EAChC,QAAA,KAAI,CAAC5H,eAAL,CAAqB4H,IAArB,IAA6B;EACzB,2CAA+BA,IAA/B,WADyB;EAEzB,0CAA+BA,IAA/B,UAFyB;EAGzB,8CAA+BA,IAA/B,cAHyB;EAIzB,2CAA+BA,IAA/B,WAJyB;EAKzB,wBAAgB,EAAEA,IAAI,KAAK,KAAI,CAACzJ,QAAL,CAAcW,WAAvB,IAAsC,KAAI,CAACY,UAAL,CAAgBgD,WAAhB,KAAgC,GAAxE;EALS,SAA7B;EAOA,QAAA,KAAI,CAACtC,WAAL,CAAiBwH,IAAjB,IAAyBlL,EAAE,CAACmB,OAAH,0CAA6C+J,IAAI,CAAC1F,WAAL,EAA7C,WAAzB;EACH,OATD;EAUH;EAED;EACJ;EACA;;EAlHA;EAAA;EAAA,0BAmHU;EACF,WAAK2F,SAAL;EACA,WAAKC,aAAL;EACA,WAAKC,IAAL;EACH;EAED;EACJ;EACA;;EA3HA;EAAA;EAAA,gCA4He;EACP,UAAI,CAAC,KAAKC,IAAN,IAAc,CAACtL,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB,KAAKD,IAAvB,CAAnB,EACA;EACI,aAAKA,IAAL,GAAY,KAAKL,QAAL,CAAcO,cAAd,EAAZ;EACAxL,QAAAA,EAAE,CAACqF,MAAH,CAAU,KAAKiG,IAAf,EAAqBxO,QAAQ,CAAC2O,IAA9B;EACH,OAJD,MAMA;EACIzL,QAAAA,EAAE,CAAC0L,SAAH,CAAa,KAAKJ,IAAlB;EACH;EACJ;EAED;EACJ;EACA;;EA1IA;EAAA;EAAA,oCA2ImB;EACXtL,MAAAA,EAAE,CAACqF,MAAH,CACI,KAAK4F,QAAL,CAAcU,kBAAd,EADJ,EAEI,KAAKL,IAFT;EAKA,OAAC,KAAKpB,gBAAN,IAA0BlK,EAAE,CAACqF,MAAH,CAAU,KAAK4F,QAAL,CAAcW,kBAAd,EAAV,EAA8C,KAAKN,IAAnD,CAA1B;EACH;EAED;EACJ;EACA;;EAtJA;EAAA;EAAA,2BAuJU;EACF,UAAI;EACA,aAAKO,gBAAL;EACA,aAAKC,iBAAL;EACA,aAAKC,YAAL;EACA,aAAKC,aAAL;EACA,aAAKC,iBAAL;EACA,aAAKC,QAAL;EACA,aAAKC,kBAAL;EACA,aAAKC,kBAAL;EACA,aAAKC,aAAL;EACA,aAAKC,aAAL;EACA,aAAKC,oBAAL;EACA,aAAKC,eAAL;EACH,OAbD,CAcA,OAAOnE,CAAP,EAAU;EACN,aAAKoE,eAAL,CAAqBpE,CAArB;EACH;EACJ;EAED;EACJ;EACA;;EA7KA;EAAA;EAAA,uCA+KI;EAAA;;EACIhJ,MAAAA,YAAY,CAACqN,SAAb,CAAuBrN,YAAY,CAACsN,cAApC,EAAoD,YAAM;EACtD,QAAA,MAAI,CAACC,MAAL,GAAc,IAAd;;EACA,YAAG;EACC,UAAA,MAAI,CAACC,WAAL,CAAiB,MAAI,CAACpL,QAAL,CAAcC,UAA/B;EACH,SAFD,CAGA,OAAM2G,CAAN,EAAQ;EACJ,UAAA,MAAI,CAACoE,eAAL,CAAqBpE,CAArB;EACH;EACJ,OARD;EAUAhJ,MAAAA,YAAY,CAACqN,SAAb,CAAuBrN,YAAY,CAACyN,eAApC,EAAqD;EAAA,eAAM,MAAI,CAACC,YAAL,CAAkB,KAAlB,CAAN;EAAA,OAArD;EAEA1N,MAAAA,YAAY,CAACqN,SAAb,CAAuBrN,YAAY,CAAC2N,eAApC,EAAqD,UAAC3E,CAAD;EAAA,eAAO,MAAI,CAAC4E,qBAAL,CAA2B5E,CAAC,CAAC6E,IAA7B,CAAP;EAAA,OAArD;EACH;EA7LL;EAAA;EAAA,wCA+LuB;EACf,WAAKC,eAAL,GAAuB,KAAKpL,aAAL,CAAmBR,GAAnB,GAA2BvB,EAAE,CAAC,KAAKI,SAAL,CAAekB,WAAf,CAA2BC,GAA5B,CAApD;EACA,WAAKQ,aAAL,CAAmBG,GAAnB,GAA2BlC,EAAE,CAAC,KAAKI,SAAL,CAAekB,WAAf,CAA2BY,GAA5B,CAA7B;EACA,WAAKH,aAAL,CAAmBE,KAAnB,GAA2BjC,EAAE,CAAC,KAAKI,SAAL,CAAekB,WAAf,CAA2BW,KAA5B,CAA7B;EACH;EAED;EACJ;EACA;;EAvMA;EAAA;EAAA,mCAwMmB;EACX,UAAG,CAAC,KAAKqH,SAAN,IAAmB,KAAKY,gBAA3B,EAA4C;EACxC;EACH;;EACD,UAAM1F,UAAU,GAAG,KAAK0F,gBAAL,GAAwB,KAAKlH,UAAL,CAAgB,iBAAhB,CAAxB,GAA6D,KAAK5C,SAAL,CAAeoE,UAA/F;EACA,WAAK4I,QAAL,GAAgBpN,EAAE,CAACwE,UAAD,CAAlB;;EACA,UAAIxE,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB,KAAK6B,QAAvB,CAAJ,EACA;EACI/N,QAAAA,YAAY,CAACM,IAAb,CAAkB,KAAKyN,QAAvB,EAAiC,OAAjC,EAA0C,KAAKC,WAAL,CAAiB1N,IAAjB,CAAsB,IAAtB,CAA1C;EACH,OAHD,MAKA;EACI,cAAM,IAAI2N,KAAJ,WAAatN,EAAE,CAACmB,OAAH,CAAW,4BAAX,CAAb,gBAA0D,KAAK6B,UAAL,CAAgB,iBAAhB,CAA1D,QAAN;EACH;EACJ;EAED;EACJ;EACA;;EA1NA;EAAA;EAAA,oCA2NoB;EACZ,WAAKuK,OAAL,GAAsBvN,EAAE,CAAC,KAAKI,SAAL,CAAeC,SAAhB,CAAxB;EACA,WAAKmN,YAAL,GAAsBxN,EAAE,CAAC,KAAKI,SAAL,CAAemE,cAAhB,CAAxB;EACA,WAAKkJ,cAAL,GAAsBzN,EAAE,CAAC,KAAKI,SAAL,CAAesN,gBAAhB,CAAxB;EACA,WAAKC,WAAL,GAAsB3N,EAAE,CAAC,KAAKI,SAAL,CAAeoC,aAAhB,CAAxB;EACA,WAAKoL,SAAL,GAAsB5N,EAAE,CAAC,KAAKI,SAAL,CAAesC,WAAhB,CAAxB;EACA,WAAKmL,WAAL,GAAsB7N,EAAE,CAAC,KAAKI,SAAL,CAAe6C,gBAAhB,CAAxB;EACH;EAED;EACJ;EACA;;EAtOA;EAAA;EAAA,wCAuOwB;EAAA;;EAChB,UAAIjD,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB,KAAKgC,OAAvB,CAAJ,EACA;EACIlO,QAAAA,YAAY,CAACM,IAAb,CAAkB,KAAK4N,OAAvB,EAAgC,OAAhC,EAAyC,UAAClF,CAAD,EAAO;EAAA;;EAC5C,cAAI,cAAAA,CAAC,CAAC/I,MAAF,wDAAUwO,YAAV,CAAuB,IAAvB,OAAiC,MAAI,CAAC1N,SAAL,CAAeC,SAApD,EAA8D;EAC1D,YAAA,MAAI,CAACgN,WAAL;EACH;EACJ,SAJD;EAKH;EACJ;EAED;EACJ;EACA;;EApPA;EAAA;EAAA,+BAqPe;EACP,WAAKU,IAAL,GAAY/N,EAAE,CAAC,KAAKI,SAAL,CAAeI,MAAhB,CAAd;;EACA,UAAI,KAAKuN,IAAT,EACA;EACI1O,QAAAA,YAAY,CAACM,IAAb,CAAkB,KAAKoO,IAAvB,EAA6B,QAA7B,EAAuC,KAAKC,MAAL,CAAYrO,IAAZ,CAAiB,IAAjB,CAAvC;EACH,OAHD,MAKA;EACI,cAAM,IAAI2N,KAAJ,WAAatN,EAAE,CAACmB,OAAH,CAAW,4BAAX,CAAb,cAAyD,KAAKf,SAAL,CAAeI,MAAxE,EAAN;EACH;EACJ;EAED;EACJ;EACA;;EAnQA;EAAA;EAAA,yCAoQyB;EACjB,UAAI,KAAKiN,cAAT,EACA;EACIpO,QAAAA,YAAY,CAACM,IAAb,CAAkB,KAAK8N,cAAvB,EAAuC,OAAvC,EAAgD,KAAKJ,WAAL,CAAiB1N,IAAjB,CAAsB,IAAtB,CAAhD;EACH,OAHD,MAKA;EACI,cAAM,IAAI2N,KAAJ,WAAatN,EAAE,CAACmB,OAAH,CAAW,4BAAX,CAAb,cAAyD,KAAKf,SAAL,CAAesN,gBAAxE,EAAN;EACH;EACJ;EAED;EACJ;EACA;;EAjRA;EAAA;EAAA,yCAkRyB;EACjB,WAAK,IAAMrK,GAAX,IAAkB,KAAKC,eAAvB,EACA;EACI,aAAK2K,cAAL,CAAoB5K,GAApB,IAA2B;EACvB6K,UAAAA,SAAS,EAAIlO,EAAE,CAAC,KAAKsD,eAAL,CAAqBD,GAArB,EAA0Ba,OAA3B,CADQ;EAEvBQ,UAAAA,QAAQ,EAAI1E,EAAE,CAAC,KAAKsD,eAAL,CAAqBD,GAArB,EAA0BQ,MAA3B,CAFS;EAGvBsK,UAAAA,YAAY,EAAGnO,EAAE,CAAC,KAAKsD,eAAL,CAAqBD,GAArB,EAA0BI,UAA3B,CAHM;EAIvB2K,UAAAA,SAAS,EAAIpO,EAAE,CAAC,KAAKsD,eAAL,CAAqBD,GAArB,EAA0BS,OAA3B;EAJQ,SAA3B;;EAOA,YAAI,KAAKR,eAAL,CAAqBD,GAArB,EAA0BgL,UAA9B,EACA;EACI,eAAKC,cAAL,CAAoBrK,IAApB,CAAyB,KAAKgK,cAAL,CAAoB5K,GAApB,EAAyB+K,SAAlD;EACH;EACJ;EACJ;EAED;EACJ;EACA;;EArSA;EAAA;EAAA,oCAsSoB;EAAA;;EACZ,WAAKpL,UAAL,CAAgB,YAAhB,EAA8BI,OAA9B,CAAsC,UAACmL,KAAD,EAAwB;EAC1D,YAAM5Q,KAAK,GAAGqC,EAAE,CAACuO,KAAK,CAACpO,EAAP,CAAhB;;EACA,YAAI,CAACxC,KAAL,EAAW;EACP,gBAAM,IAAI2P,KAAJ,WAAatN,EAAE,CAACmB,OAAH,CAAW,4BAAX,CAAb,cAAyDoN,KAAK,CAACpO,EAA/D,EAAN;EACH;;EAED,YAAMqO,YAAY,GAAG,MAAI,CAACpE,YAAL,CAAkBU,UAAlB,CAA6ByD,KAAK,CAACxK,IAAnC,CAArB;EACApG,QAAAA,KAAK,CAACE,KAAN,GAAc2Q,YAAY,GAAGA,YAAH,GAAkB,EAA5C;;EACA,YAAI7Q,KAAK,IAAI6Q,YAAT,IAA0BD,KAAK,CAACxK,IAAN,KAAe8E,cAAc,CAACK,QAA5D,EAAsE;EAClE,cAAMvC,OAAI,GAAG,IAAI8H,IAAJ,CAASD,YAAT,CAAb;EACA7Q,UAAAA,KAAK,CAACE,KAAN,GAAc,MAAI,CAAC6Q,oBAAL,CAA0B/H,OAAI,CAACgI,OAAL,EAA1B,EAA0C,KAA1C,EAAiD,IAAjD,CAAd;EACH;;EAEDtP,QAAAA,YAAY,CAACM,IAAb,CAAkBhC,KAAlB,EAAyB,OAAzB,EAAkC,UAAC0K,CAAD,EAAM;EAAA;;EACpC,cAAIuG,GAAW,sBAAGvG,CAAC,CAAC/I,MAAF,CAASzB,KAAZ,6DAAqB,EAApC;;EACA,cAAIwK,CAAC,CAAC/I,MAAF,CAASyE,IAAT,KAAkB8E,cAAc,CAACG,KAAjC,IAA0C4F,GAAG,CAACzQ,MAAJ,GAAa,MAAI,CAAC0Q,SAAL,CAAe1Q,MAA1E,EAAiF;EAC7EyQ,YAAAA,GAAG,GAAGA,GAAG,CAACtG,SAAJ,CAAc,CAAd,EAAiB,MAAI,CAACuG,SAAL,CAAe1Q,MAAhC,CAAN;EACH;;EACD,UAAA,MAAI,CAACiM,YAAL,CAAkBU,UAAlB,CAA6ByD,KAAK,CAACxK,IAAnC,IAA2C6K,GAA3C;EACH,SAND;;EAQA,YAAIL,KAAK,CAAC,eAAD,CAAL,KAA2B,MAA/B,EACA;EACI,UAAA,MAAI,CAACD,cAAL,CAAoBrK,IAApB,CAAyBtG,KAAzB;EACH,SAHD,MAKA;EACI,cAAK,MAAI,CAACqM,cAAL,KAAwB,MAAI,CAACD,YAAL,CAAkBd,KAA3C,IAAsDsF,KAAK,CAACxK,IAAN,KAAe8E,cAAc,CAACI,KAAxF,EACA;EACI,YAAA,MAAI,CAACqF,cAAL,CAAoBrK,IAApB,CAAyBtG,KAAzB;EACH;EACJ;;EAED,QAAA,MAAI,CAACmR,SAAL,CAAeP,KAAK,CAACxK,IAArB,IAA6B;EACzBqK,UAAAA,SAAS,EAAEzQ;EADc,SAA7B;EAGH,OApCD;EAqCH;EAED;EACJ;EACA;;EAhVA;EAAA;EAAA,4BAiVY;EACJ,WAAKoP,YAAL,CAAkB,IAAlB;EACA,WAAKgC,QAAL;EACH;EAED;EACJ;EACA;;EAxVA;EAAA;EAAA,+BA0VI;EAAA;;EACI,WAAKC,aAAL,GACKC,IADL,CACU,UAAAC,eAAe,EAAI;EAAA;;EACrB,qCAAIA,eAAe,CAAChC,IAApB,kDAAI,sBAAsBiC,KAA1B,EAAiC;EAAA;;EAC7B,gBAAM,IAAI7B,KAAJ,2BAAU4B,eAAe,CAAChC,IAA1B,2DAAU,uBAAsBiC,KAAhC,CAAN;EACH,SAFD,MAGK,IAAG,2BAAAD,eAAe,CAAChC,IAAhB,kFAAsB/O,MAAtB,MAAiC,CAApC,EAAuC;EACxC,gBAAM,IAAImP,KAAJ,CAAUtN,EAAE,CAACmB,OAAH,CAAW,qCAAX,CAAV,CAAN;EACH,SAFI,MAGA;EACD,UAAA,MAAI,CAAC+L,IAAL,CAAUkC,OAAV,GAAoBF,eAAe,CAAChC,IAApC;EACA,iBAAO,MAAI,CAACmC,gBAAL,EAAP;EACH;EACJ,OAZL,EAaKJ,IAbL,CAaU,UAAAK,iBAAiB,EAAI;EAAA;;EACvB,qCAAIA,iBAAiB,CAACpC,IAAtB,kDAAI,sBAAwBiC,KAA5B,EAAmC;EAAA;;EAC/B,gBAAM,IAAI7B,KAAJ,2BAAUgC,iBAAiB,CAACpC,IAA5B,2DAAU,uBAAwBiC,KAAlC,CAAN;EACH,SAFD,MAGK,IAAG1F,MAAM,CAAC8F,IAAP,CAAYD,iBAAiB,CAACpC,IAA9B,EAAoC/O,MAApC,KAA+C,CAAlD,EAAqD;EACtD,gBAAM,IAAImP,KAAJ,CAAUtN,EAAE,CAACmB,OAAH,CAAW,qCAAX,CAAV,CAAN;EACH,SAFI,MAGA;EACD,UAAA,MAAI,CAAC+L,IAAL,CAAUsC,SAAV,GAAsBF,iBAAiB,CAACpC,IAAxC;EACA,iBAAO,MAAI,CAACuC,WAAL,EAAP;EACH;EACJ,OAxBL,EAyBKR,IAzBL,CAyBU,UAAAS,gBAAgB,EAAI;EAAA;;EACtB,qCAAIA,gBAAgB,CAACxC,IAArB,kDAAI,sBAAuBiC,KAA3B,EAAkC;EAAA;;EAC9B,gBAAM,IAAI7B,KAAJ,2BAAUoC,gBAAgB,CAACxC,IAA3B,2DAAU,uBAAuBiC,KAAjC,CAAN;EACH;;EACD,sCAAIO,gBAAgB,CAACxC,IAArB,mDAAI,uBAAuB3J,cAAvB,CAAsC,UAAtC,CAAJ,EACA;EACI,UAAA,MAAI,CAAC2J,IAAL,CAAUyC,QAAV,GAAqBD,gBAAgB,CAACxC,IAAjB,CAAsByC,QAA3C;EACAtQ,UAAAA,YAAY,CAACuQ,IAAb,CAAkBvQ,YAAY,CAACsN,cAA/B;EACH;EACJ,OAlCL,WAmCW,UAAAtE,CAAC,EAAI;EACR,SAAC,MAAI,CAAC6B,gBAAN,IAA0B,MAAI,CAACsD,YAAL,CAAkBqC,SAAlB,CAA4BC,GAA5B,CAAgChQ,MAAM,CAAC,QAAD,CAAtC,CAA1B;;EACA,QAAA,MAAI,CAAC2M,eAAL,CAAqBpE,CAArB;EACH,OAtCL;EAuCH;EAED;EACJ;EACA;EACA;;EAvYA;EAAA;EAAA,oCAwYmB;EACX,aAAOrI,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,gDAAlB,EAAoE;EACvE9C,QAAAA,IAAI,EAAE;EACF+C,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EADN;EADiE,OAApE,CAAP;EAKH;EAED;EACJ;EACA;EACA;;EAnZA;EAAA;EAAA,uCAoZsB;EACd,aAAOlQ,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,kDAAlB,EAAsE;EACzE9C,QAAAA,IAAI,EAAE;EACF+C,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EADN;EADmE,OAAtE,CAAP;EAKH;EAED;EACJ;EACA;EACA;;EA/ZA;EAAA;EAAA,kCAgaiB;EACT,aAAOlQ,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,iDAAlB,EAAqE;EACxE9C,QAAAA,IAAI,EAAE;EACF+C,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EADN;EADkE,OAArE,CAAP;EAKH;EAED;EACJ;EACA;EACA;EACA;;EA5aA;EAAA;EAAA,wCA6awBC,UA7axB,EA6amC;EAC3B,aAAOnQ,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,qDAAlB,EAAyE;EAC5E9C,QAAAA,IAAI,EAAE;EACF+C,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH,EADN;EAEFC,UAAAA,UAAU,EAAEA;EAFV;EADsE,OAAzE,CAAP;EAMH;EApbL;EAAA;EAAA,4CAsb2B;EACnB,WAAKtD,WAAL,CAAiB,KAAKpL,QAAL,CAAcE,cAA/B;EACH;EAxbL;EAAA;EAAA,yCA0bwB;EAChB,WAAKkL,WAAL,CAAiB,KAAKpL,QAAL,CAAcW,WAA/B;EACH;EA5bL;EAAA;EAAA,0CA8b0B;EAClB,WAAKyK,WAAL,CAAiB,KAAKpL,QAAL,CAAcU,YAA/B;EACH;EAhcL;EAAA;EAAA,yCAkcyB;EACjB,WAAK0K,WAAL,CAAiB,KAAKpL,QAAL,CAAcY,WAA/B;EACH;EApcL;EAAA;EAAA,gCAscgBsC,OAtchB,EAucI;EAAA;;EACI,UAAMD,QAAQ,4BAAG,KAAKuJ,cAAL,CAAoBtJ,OAApB,CAAH,0DAAG,sBAA8BD,QAA/C;;EACA,UAAG,CAACA,QAAJ,EAAa;EACT,cAAM,IAAI4I,KAAJ,CAAUtN,EAAE,CAACmB,OAAH,uBAA0BwD,OAAO,CAACa,WAAR,EAA1B,2BAAV,CAAN;EACH;;EACAb,MAAAA,OAAO,KAAK,KAAKlD,QAAL,CAAcY,WAA3B,GAA0CqC,QAAQ,CAACmL,SAAT,CAAmBC,GAAnB,CAAuBhQ,MAAM,CAAC,aAAD,CAA7B,CAA1C,GAA0F,KAAK,CAA/F;EACAE,MAAAA,EAAE,CAAC0L,SAAH,CAAahH,QAAb;;EAEA,UAAG+E,MAAM,CAAC8F,IAAP,CAAY,KAAKrC,IAAL,CAAUvI,OAAV,CAAZ,EAAgCxG,MAAhC,GAAyC,CAA5C,EACA;EACI,YAAMyG,KAAK,GAAG,KAAKsI,IAAL,CAAUvI,OAAV,CAAd;EACA,aAAKsG,QAAL,CAAcmF,oBAAd,CAAmC1L,QAAnC,EAA6CC,OAA7C,EAAsDC,KAAtD;EACCD,QAAAA,OAAO,KAAK,KAAKlD,QAAL,CAAcC,UAA3B,GAAyCrC,YAAY,CAACuQ,IAAb,CAAkBvQ,YAAY,CAACyN,eAA/B,CAAzC,GAA2F,KAAK,CAAhG;EACH;EACJ;EArdL;EAAA;EAAA,kCAudkBpI,QAvdlB,EAudyCC,OAvdzC,EAud0D0C,IAvd1D,EAwdI;EACI,UAAIgJ,SAAS,GAAG,IAAhB;EACA,UAAMC,cAAc,GAAU,KAAKlG,YAAL,CAAkB,KAAK3I,QAAL,CAAcC,UAAhC,EAA4C2I,SAA1E;EACA,UAAMkG,oBAAoB,GAAI,KAAKnG,YAAL,CAAkB,KAAK3I,QAAL,CAAcE,cAAhC,EAAgD6I,YAA9E;EACA,UAAMgG,mBAAmB,GAAK,KAAKpG,YAAL,CAAkB,KAAK3I,QAAL,CAAcU,YAAhC,EAA8CwI,MAA5E;EACA,UAAM8F,kBAAkB,GAAM,KAAKrG,YAAL,CAAkB,KAAK3I,QAAL,CAAcW,WAAhC,EAA6CqI,UAA3E;EACA,UAAIiG,eAAJ,EAAqBC,kBAArB;;EAEA,cAAQhM,OAAR;EAEI,aAAK,KAAKlD,QAAL,CAAcE,cAAnB;EACI,cAAMiP,eAAe,GAAGlM,QAAQ,CAAC4C,aAAT,uBAAqCD,IAAI,CAAClC,GAA1C,SAAxB;EACAuL,UAAAA,eAAe,GAAGrJ,IAAI,CAAC+H,OAAL,CAAayB,QAAb,CAAsBP,cAAtB,CAAlB;;EACA,cAAG,KAAKzG,yBAAR,EAAkC;EAC9BwG,YAAAA,SAAS,GAAGK,eAAZ;;EACA,gBAAI,KAAK5G,4BAAT,EAAsC;EAClCuG,cAAAA,SAAS,GAAIK,eAAe,IAAIrJ,IAAI,CAAC+H,OAAL,CAAayB,QAAb,CAAsB,EAAtB,CAAhC;EACH;EACJ;;EACDR,UAAAA,SAAS,GAAGA,SAAS,IAAIrQ,EAAE,CAAC7C,IAAH,CAAQ2T,gBAAR,CAAyBzJ,IAAI,CAACtD,IAA9B,CAAb,IAAoD,CAAC6M,eAAjE;EACA;;EAEJ,aAAK,KAAKnP,QAAL,CAAcU,YAAnB;EACIwO,UAAAA,kBAAkB,GAAItJ,IAAI,CAACmD,YAAL,KAAsB+F,oBAA5C;EACAG,UAAAA,eAAe,GAAOJ,cAAc,KAAKjJ,IAAI,CAACgD,SAA9C;EAEAgG,UAAAA,SAAS,GAAGM,kBAAZ;;EAEA,cAAG,KAAK9G,yBAAR,EAAkC;EAC9B,gBAAI,KAAKC,4BAAT,EAAsC;EAClCuG,cAAAA,SAAS,GAAIM,kBAAkB,IAAI,CAACtJ,IAAI,CAACgD,SAA7B,IAECsG,kBAAkB,IAAID,eAFnC;EAGH,aAJD,MAMA;EACIL,cAAAA,SAAS,GAAGM,kBAAkB,IAAID,eAAlC;EACH;EACJ;;EACD,cAAI,KAAK1K,WAAL,IAAoB,CAAC,KAAK+K,yBAA9B,EACA;EACIV,YAAAA,SAAS,GAAGA,SAAS,IAAIhJ,IAAI,CAAC2J,QAAL,CAAczN,cAAd,CAA6BkN,kBAA7B,CAAzB;EACH;;EACD;;EAEJ,aAAK,KAAKhP,QAAL,CAAcW,WAAnB;EACIiO,UAAAA,SAAS,GAAIE,oBAAoB,KAAKlJ,IAAI,CAACmD,YAA3C;;EACA,cAAI,KAAKuG,yBAAT,EACA;EACIV,YAAAA,SAAS,GAAGA,SAAS,IAAI,KAAKnD,IAAL,CAAUsC,SAAV,CAAoBgB,mBAApB,EAAyCQ,QAAzC,CAAkDzN,cAAlD,CAAiE8D,IAAI,CAAClC,GAAtE,CAAzB;EACH;;EACD;;EAEJ,aAAK,KAAK1D,QAAL,CAAcY,WAAnB;EACIgO,UAAAA,SAAS,GAAIhJ,IAAI,CAACgD,SAAL,KAAmBiG,cAApB,IAAwCjJ,IAAI,CAACsD,MAAL,KAAgB6F,mBAApE;EACA;;EACJ;EACI;EAjDR;;EAoDA,aAAOH,SAAP;EACH;EArhBL;EAAA;EAAA,uCAuhBuBzK,YAvhBvB,EAuhB4C;EACpC,UAAMqL,gBAAgB,GAAG,KAAK/D,IAAL,CAAUsC,SAAV,CAAoB5J,YAAY,CAAC+E,MAAjC,CAAzB;EACA,UAAMuG,eAAe,GAAG,KAAK9G,YAAL,CAAkB,KAAK3I,QAAL,CAAcW,WAAhC,CAAxB;EACA,UAAIyD,eAAe,GAAGb,MAAM,CAACkM,eAAe,CAACrL,eAAjB,CAA5B;;EACA,UAAGoL,gBAAgB,CAACD,QAAjB,CAA0BzN,cAA1B,CAAyC2N,eAAe,CAACzG,UAAzD,CAAH,EACA;EACI,YAAIwG,gBAAgB,CAACD,QAAjB,CAA0BE,eAAe,CAACzG,UAA1C,EAAsDlH,cAAtD,CAAqE,kBAArE,CAAJ,EAA6F;EACzF,cAAM4N,gBAAgB,GAAGF,gBAAgB,CAACD,QAAjB,CAA0BE,eAAe,CAACzG,UAA1C,EAAsD,kBAAtD,CAAzB;EACA5E,UAAAA,eAAe,GAAGb,MAAM,CAACmM,gBAAD,CAAN,GAA2B,CAA3B,GAA+BnM,MAAM,CAACmM,gBAAD,CAArC,GAA0DtL,eAA5E;EACH;EACJ;;EACD,aAAOA,eAAP;EACH;EAniBL;EAAA;EAAA,mDAqiBmCK,SAriBnC,EAqiB8CkL,iBAriB9C,EAqiBiE;EAAA;;EACzD,UAAMC,YAAY,GAAG,EAArB;EACAnL,MAAAA,SAAS,CAAC/H,MAAV,IAAoB+H,SAAS,CAAC9C,OAAV,CAAkB,UAACoD,GAAD,EAAS;EAC3C,YAAM8K,kBAAkB,GAAI,IAAI7C,IAAJ,CAASjI,GAAG,CAACO,SAAb,CAAD,CAA0B4H,OAA1B,EAA3B;EACA,YAAM4C,gBAAgB,GAAI,IAAI9C,IAAJ,CAASjI,GAAG,CAACS,OAAb,CAAD,CAAwB0H,OAAxB,EAAzB;EACA,YAAM6C,cAAc,GAAGD,gBAAgB,GAAGD,kBAA1C;EACA,YAAMG,iBAAiB,GAAG3S,IAAI,CAAC4S,KAAL,CAAWF,cAAc,GAAGJ,iBAA5B,CAA1B;;EACA,YAAIK,iBAAiB,GAAG,CAAxB,EACA;EACI,cAAI,MAAI,CAAC9H,YAAL,IAAsByH,iBAAiB,IAAI,KAAG,EAAH,GAAM,IAArD;EACA;EACI,kBAAItK,KAAK,GAAK,IAAI2H,IAAJ,CAAS6C,kBAAT,CAAd;EACA,kBAAItK,GAAG,GAAO,IAAIyH,IAAJ,CAAS6C,kBAAkB,GAAGF,iBAA9B,CAAd;;EACA,qBAAMpK,GAAG,CAAC2H,OAAJ,MAAiB4C,gBAAvB,EAAwC;EACpCF,gBAAAA,YAAY,CAACpN,IAAb,CAAkB;EACd,0BAAYuC,GAAG,CAACG,IADF;EAEd,+BAAgB,MAAI,CAACgL,gBAAL,CAAsB3M,MAAM,CAAC8B,KAAD,CAA5B,CAFF;EAGd,6BAAe,MAAI,CAAC6K,gBAAL,CAAsB3M,MAAM,CAACgC,GAAD,CAA5B,CAHD;EAId,mCAAmB,MAAI,CAAC0H,oBAAL,CAA0B1J,MAAM,CAAC8B,KAAD,CAAhC,EAAyC,KAAzC,CAJL;EAKd,wCAAuB,MAAI,CAAC4H,oBAAL,CAA0B1J,MAAM,CAAC8B,KAAD,CAAhC,EAAyC,IAAzC,CALT;EAMd,sCAAqB,MAAI,CAAC4H,oBAAL,CAA0B1J,MAAM,CAACgC,GAAD,CAAhC,EAAuC,IAAvC;EANP,iBAAlB;EAQAF,gBAAAA,KAAK,CAAC8K,UAAN,CAAiB9K,KAAK,CAAC+K,UAAN,KAAqB,MAAI,CAACjI,uBAA3C;EACA5C,gBAAAA,GAAG,CAAC4K,UAAJ,CAAe5K,GAAG,CAAC6K,UAAJ,KAAmB,MAAI,CAACjI,uBAAvC;EACH;EACJ,aAhBD,MAkBA;EACI,iBAAK,IAAI1L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuT,iBAApB,EAAuCvT,CAAC,EAAxC,EACA;EACI,kBAAI4I,MAAK,GAAG9B,MAAM,CAAC,IAAIyJ,IAAJ,CAAS6C,kBAAkB,GAAIF,iBAAiB,GAAGlT,CAAnD,CAAD,CAAlB;;EACA,kBAAI8I,IAAG,GAAGhC,MAAM,CAAC,IAAIyJ,IAAJ,CAAS6C,kBAAkB,GAAIF,iBAAiB,IAAIlT,CAAC,GAAC,CAAN,CAAhD,CAAD,CAAhB;;EACAmT,cAAAA,YAAY,CAACpN,IAAb,CAAkB;EACd,wBAAYuC,GAAG,CAACG,IADF;EAEd,6BAAgB,MAAI,CAACgL,gBAAL,CAAsB7K,MAAtB,CAFF;EAGd,2BAAe,MAAI,CAAC6K,gBAAL,CAAsB3K,IAAtB,CAHD;EAId,iCAAmB,MAAI,CAAC0H,oBAAL,CAA0B5H,MAA1B,EAAiC,KAAjC,CAJL;EAKd,sCAAuB,MAAI,CAAC4H,oBAAL,CAA0B5H,MAA1B,EAAiC,IAAjC,CALT;EAMd,oCAAqB,MAAI,CAAC4H,oBAAL,CAA0B1H,IAA1B,EAA+B,IAA/B;EANP,eAAlB;EAQH;EACJ;EACJ;EACJ,OAzCmB,CAApB;EA0CA,aAAOqK,YAAP;EACH;EAllBL;EAAA;EAAA,wCAolBwB1M,OAplBxB,EAolByCnB,QAplBzC,EAolBgEI,IAplBhE,EAolBmF;EAC3EA,MAAAA,IAAI,CAACiM,SAAL,CAAeiC,MAAf,CAAsBhS,MAAM,CAAC,QAAD,CAA5B;;EACA,WAAK,IAAMiS,QAAX,IAAuB,KAAK9D,cAA5B,EAA4C;EACxC,YACI,KAAKA,cAAL,CAAoB1K,cAApB,CAAmCwO,QAAnC,KACGA,QAAQ,KAAKpN,OAFpB,EAGC;EACG,eAAKsJ,cAAL,CAAoB8D,QAApB,EAA8BrN,QAA9B,CAAuCmL,SAAvC,CAAiDmC,MAAjD,CAAwDlS,MAAM,CAAC,QAAD,CAA9D;EACH;EACJ;EACJ;EA9lBL;EAAA;EAAA,mCAgmBmB6E,OAhmBnB,EAgmB2B;EAAA;;EACnB,UAAMC,KAAK,GAAG,KAAKqJ,cAAL,CAAoBtJ,OAApB,EAA6BD,QAA7B,CAAsCnE,QAApD;;EACA,UAAI,CAACqE,KAAK,CAACzG,MAAX,EAAkB;EACd;EACH;;EAJkB,iDAKFyG,KALE;EAAA;;EAAA;EAKnB,4DAAwB;EAAA,cAAfyC,IAAe;;EACpB,cAAI1C,OAAO,KAAK,KAAKlD,QAAL,CAAcY,WAA9B,EACA;EACI,gBAAM4P,KAAK,GAAG5K,IAAI,CAAC6K,gBAAL,CAAsB,MAAtB,CAAd;EACAD,YAAAA,KAAK,CAAC9T,MAAN,IAAgB8T,KAAK,CAAC7O,OAAN,CAAc,UAAC+O,IAAD,EAAU;EACpCA,cAAAA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAC/J,CAAD,EAAK;EAChCA,gBAAAA,CAAC,CAACgK,eAAF;;EACA,gBAAA,MAAI,CAACpE,cAAL,CAAoBtJ,OAApB,EAA6BD,QAA7B,CAAsCmL,SAAtC,CAAgDmC,MAAhD,CAAuDlS,MAAM,CAAC,QAAD,CAA7D;;EACA,gBAAA,MAAI,CAACmO,cAAL,CAAoBtJ,OAApB,EAA6BwJ,YAA7B,CAA0CmE,SAA1C,mFAEUjK,CAAC,CAACkK,aAAF,CAAgBjN,OAAhB,CAAwBuB,WAFlC,kDAGUwB,CAAC,CAACkK,aAAF,CAAgBC,WAH1B;;EAOA,gBAAA,MAAI,CAACC,mBAAL,CAAyB9N,OAAzB,EAAkC0D,CAAC,CAACkK,aAApC;;EACA,gBAAA,MAAI,CAACG,sBAAL;EACH,eAZD;EAaH,aAde,CAAhB;EAeH,WAlBD,MAmBI;EACArL,YAAAA,IAAI,CAAC+K,gBAAL,CAAsB,OAAtB,EAA+B,UAAC/J,CAAD,EAAK;EAChCA,cAAAA,CAAC,CAACgK,eAAF;;EACA,cAAA,MAAI,CAACpE,cAAL,CAAoBtJ,OAApB,EAA6BD,QAA7B,CAAsCmL,SAAtC,CAAgDmC,MAAhD,CAAuDlS,MAAM,CAAC,QAAD,CAA7D;;EACA,cAAA,MAAI,CAACmO,cAAL,CAAoBtJ,OAApB,EAA6BwJ,YAA7B,CAA0CmE,SAA1C,mBAA+DjK,CAAC,CAACkK,aAAF,CAAgBC,WAA/E;;EACA,cAAA,MAAI,CAACC,mBAAL,CAAyB9N,OAAzB,EAAkC0D,CAAC,CAACkK,aAApC;;EACA,cAAA,MAAI,CAACG,sBAAL;EACH,aAND;EAOH;EACJ;EAlCkB;EAAA;EAAA;EAAA;EAAA;EAmCtB;EAnoBL;EAAA;EAAA,wCAqoBwB/N,OAroBxB,EAqoBiCrF,MAroBjC,EAqoBwC;EAAA;;EAChC,WAAK2O,cAAL,CAAoBtJ,OAApB,EAA6ByJ,SAA7B,CAAuCvQ,KAAvC,GAA+CyB,MAAM,CAACgG,OAAP,CAAeH,GAA9D;;EACA,cAAQR,OAAR;EACI,aAAK,KAAKlD,QAAL,CAAcC,UAAnB;EACI,eAAK0I,YAAL,CAAkBzF,OAAlB,EAA2B0F,SAA3B,GAAuC/K,MAAM,CAACgG,OAAP,CAAeH,GAAtD;EACA,eAAKiF,YAAL,CAAkBzF,OAAlB,EAA2B2F,UAA3B,GAAwChL,MAAM,CAACgG,OAAP,CAAevB,IAAvD;;EACA,cAAI,KAAKiC,WAAT,EACA;EACI,iBAAK+G,YAAL,CAAkB,IAAlB;EACA,iBAAK4F,mBAAL,WAA4BrT,MAAM,CAACgG,OAAP,CAAeH,GAA3C,GACK8J,IADL,CACU,UAAC2D,YAAD,EAAkB;EAAA;;EACpB,wCAAIA,YAAY,CAAC1F,IAAjB,+CAAI,mBAAmBiC,KAAvB,EAA6B;EACzB,sBAAM,IAAI7B,KAAJ,CAAUsF,YAAY,CAAC1F,IAAb,CAAkBiC,KAA5B,CAAN;EACH,eAFD,MAEK;EACD,oBAAI1F,MAAM,CAAC8F,IAAP,CAAYqD,YAAY,CAAC1F,IAAzB,EAA+B/O,MAA/B,GAAwC,CAA5C,EAA8C;EAC1C,kBAAA,MAAI,CAAC+O,IAAL,CAAU8D,QAAV,GAAqB4B,YAAY,CAAC1F,IAAlC;;EACA,kBAAA,MAAI,CAAC2F,yBAAL;;EACA,kBAAA,MAAI,CAACC,qBAAL;EACH;EACJ;;EACD,cAAA,MAAI,CAAC/F,YAAL,CAAkB,KAAlB;EACH,aAZL,WAaW,UAAAgG,GAAG,EAAI;EACV,cAAA,MAAI,CAACtG,eAAL,CAAqBsG,GAArB;EACH,aAfL;EAgBH,WAnBD,MAqBA;EACI,iBAAKD,qBAAL;EACH;;EACD;;EACJ,aAAK,KAAKrR,QAAL,CAAcE,cAAnB;EACI,eAAKyI,YAAL,CAAkBzF,OAAlB,EAA2B4F,SAA3B,GAAuCjL,MAAM,CAACgG,OAAP,CAAevB,IAAtD;EACA,eAAKqG,YAAL,CAAkBzF,OAAlB,EAA2B6F,YAA3B,GAA0ClL,MAAM,CAACgG,OAAP,CAAeH,GAAzD;EACA;;EACJ,aAAK,KAAK1D,QAAL,CAAcW,WAAnB;EACI,eAAKgI,YAAL,CAAkBzF,OAAlB,EAA2B+F,WAA3B,GAAyCpL,MAAM,CAACkT,WAAhD;EACA,eAAKpI,YAAL,CAAkBzF,OAAlB,EAA2B8F,UAA3B,GAAwCnL,MAAM,CAACgG,OAAP,CAAeH,GAAvD;EACA,eAAKiF,YAAL,CAAkBzF,OAAlB,EAA2BkB,eAA3B,GAA6CvG,MAAM,CAACgG,OAAP,CAAeF,QAA5D;EACA,eAAK2L,yBAAL,GAAiC,KAAKiC,kBAAL,EAAjC,GAA4D,KAAKC,mBAAL,EAA5D;EACA;;EACJ,aAAK,KAAKxR,QAAL,CAAcU,YAAnB;EACI,eAAKiI,YAAL,CAAkBzF,OAAlB,EAA2BiG,UAA3B,GAAwCtL,MAAM,CAACkT,WAA/C;EACA,eAAKpI,YAAL,CAAkBzF,OAAlB,EAA2BgG,MAA3B,GAAoCrL,MAAM,CAACgG,OAAP,CAAeH,GAAnD;;EACA,cAAG,KAAKa,WAAR,EAAoB;EAChB,gBAAI,KAAK+K,yBAAT,EAAmC;EAC/B,mBAAKmC,kBAAL;EACH,aAFD,MAEK;EACD,mBAAKF,kBAAL;EACH;EACJ,WAND,MAMK;EACD,iBAAKA,kBAAL;EACH;;EACD;;EACJ,aAAK,KAAKvR,QAAL,CAAcY,WAAnB;EACI,eAAK+H,YAAL,CAAkBzF,OAAlB,EAA2BkG,SAA3B,GAAuCvL,MAAM,CAACgG,OAAP,CAAeqB,IAAtD;EACA,eAAKyD,YAAL,CAAkBzF,OAAlB,EAA2BoC,SAA3B,GAAuCzH,MAAM,CAACgG,OAAP,CAAewB,KAAtD;EACA,eAAKsD,YAAL,CAAkBzF,OAAlB,EAA2BsC,OAA3B,GAAqC3H,MAAM,CAACgG,OAAP,CAAe0B,GAApD;EACA,eAAKiH,cAAL,CAAoBtJ,OAApB,EAA6ByJ,SAA7B,CAAuCvQ,KAAvC,GAA+CyB,MAAM,CAACgG,OAAP,CAAeqB,IAA9D;EACA;;EACJ;EACI;EA3DR;;EA6DA,WAAKwM,aAAL,GAAqBxO,OAArB;EACH;EArsBL;EAAA;EAAA,gDAusBgC;EACxB,UAAMqM,QAAQ,GAAI,KAAK9D,IAAL,CAAU8D,QAA5B;EACA,UAAMxB,SAAS,GAAG,KAAKtC,IAAL,CAAUsC,SAA5B;;EACA,UAAG/F,MAAM,CAAC8F,IAAP,CAAYC,SAAZ,EAAuBrR,MAAvB,GAAgC,CAAnC,EACA;EACI,aAAK,IAAMiV,WAAX,IAA0B5D,SAA1B,EACA;EACI,cAAI,CAACA,SAAS,CAACjM,cAAV,CAAyB6P,WAAzB,CAAL,EAA4C;EAAE;EAAS;;EAEvD,cAAMC,WAAW,GAAG7D,SAAS,CAAC4D,WAAD,CAAT,CAAuBpC,QAA3C;EACA,cAAMzG,SAAS,GAAKiF,SAAS,CAAC4D,WAAD,CAAT,CAAuB7I,SAA3C;;EAEA,cAAGA,SAAH,EAAa;EACT,iBAAK+I,YAAL,CAAkB9D,SAAS,CAAC4D,WAAD,CAA3B;;EAEA,gBAAGC,WAAW,IAAI5J,MAAM,CAAC8F,IAAP,CAAY8D,WAAZ,EAAyBlV,MAAzB,GAAkC,CAApD,EAAuD;EACnD,mBAAK,IAAMoV,aAAX,IAA4BF,WAA5B,EACA;EACI,oBAAI,CAACA,WAAW,CAAC9P,cAAZ,CAA2BgQ,aAA3B,CAAL,EAAgD;EAAE;EAAS;;EAE3D,oBAAIvC,QAAQ,CAACzN,cAAT,CAAwBgQ,aAAxB,CAAJ,EAA2C;EACvCvC,kBAAAA,QAAQ,CAACuC,aAAD,CAAR,CAAwB/I,YAAxB,GAAuCgF,SAAS,CAAC4D,WAAD,CAAT,CAAuB5I,YAA9D;EACH;EACJ;EACJ;EACJ;EACJ;EACJ;EACJ;EAnuBL;EAAA;EAAA,iCAquBiBgJ,QAruBjB,EAsuBI;EACI,UAAG,KAAKtG,IAAL,CAAU,KAAKzL,QAAL,CAAcE,cAAxB,EAAwC6R,QAAQ,CAAChJ,YAAjD,CAAH,EACA;EACI,aAAKiJ,oBAAL,CAA0B,KAAKvG,IAAL,CAAU,KAAKzL,QAAL,CAAcE,cAAxB,EAAwC6R,QAAQ,CAAChJ,YAAjD,CAA1B,EAA0FgJ,QAAQ,CAACnJ,SAAnG;EACH,OAHD,MAKA;EACI,aAAK6C,IAAL,CAAU,KAAKzL,QAAL,CAAcE,cAAxB,EAAwC6R,QAAQ,CAAChJ,YAAjD,IAAiE;EAC7DrF,UAAAA,GAAG,EAASqO,QAAQ,CAAChJ,YADwC;EAE7DzG,UAAAA,IAAI,EAAQyP,QAAQ,CAACjJ,SAFwC;EAG7D6E,UAAAA,OAAO,EAAK,CAACoE,QAAQ,CAACnJ,SAAV;EAHiD,SAAjE;EAKH;EACJ;EAnvBL;EAAA;EAAA,yCAqvByBE,SArvBzB,EAqvBoCF,SArvBpC,EAqvB8C;EACtC,UAAGqJ,KAAK,CAACC,OAAN,CAAcpJ,SAAS,CAAC6E,OAAxB,KAAoC,CAAC7E,SAAS,CAAC6E,OAAV,CAAkByB,QAAlB,CAA2BxG,SAA3B,CAAxC,EACA;EACIE,QAAAA,SAAS,CAAC6E,OAAV,CAAkBnL,IAAlB,CAAuBoG,SAAvB;EACH;EACJ;EA1vBL;EAAA;EAAA,6CA4vB4B;EAAA;;EACpB,UAAIuJ,OAAO,GAAG,KAAd;EACA,UAAIC,IAAI,GAAG,KAAX;EACA,WAAKrK,cAAL,CAAoBpG,OAApB,CAA4B,UAAA2O,QAAQ,EAAI;EACpC,YAAI,CAAC,MAAI,CAAC/L,WAAN,IAAqB+L,QAAQ,KAAK,MAAI,CAACtQ,QAAL,CAAcW,WAApD,EAAgE;EAC5D;EACH;;EAED,YAAI,MAAI,CAAC6L,cAAL,CAAoB1K,cAApB,CAAmCwO,QAAnC,CAAJ,EACA;EACI,cAAMxD,KAAK,GAAG,MAAI,CAACN,cAAL,CAAoB8D,QAApB,EAA8B7D,SAA5C;;EACA,cAAI,CAAC0F,OAAD,IAAY,CAACC,IAAjB,EAAsB;EAClBtF,YAAAA,KAAK,CAACsB,SAAN,CAAgBmC,MAAhB,CAAuBlS,MAAM,CAAC,UAAD,CAA7B;EACH,WAFD,MAGK,IAAI8T,OAAO,IAAI,CAACC,IAAhB,EAAqB;EACtBtF,YAAAA,KAAK,CAACsB,SAAN,CAAgBmC,MAAhB,CAAuBlS,MAAM,CAAC,UAAD,CAA7B;;EACA,YAAA,MAAI,CAACgU,UAAL,CAAgB/B,QAAhB;EACH,WAHI,MAID;EACAxD,YAAAA,KAAK,CAACsB,SAAN,CAAgBC,GAAhB,CAAoBhQ,MAAM,CAAC,UAAD,CAA1B;;EACA,YAAA,MAAI,CAACgU,UAAL,CAAgB/B,QAAhB;EACH;;EACD8B,UAAAA,IAAI,GAAGD,OAAP;;EAEA,cAAG7B,QAAQ,KAAK,MAAI,CAACoB,aAArB,EACA;EACIS,YAAAA,OAAO,GAAG,IAAV;;EAEA,oBAAQ,MAAI,CAACT,aAAb;EACI,mBAAK,MAAI,CAAC1R,QAAL,CAAcE,cAAnB;EACA,mBAAK,MAAI,CAACF,QAAL,CAAcY,WAAnB;EACI,gBAAA,MAAI,CAAC0R,mBAAL;;EACA;;EACJ;EACI,gBAAA,MAAI,CAACC,qBAAL;;EACA;EAPR;EASH;EACJ;EACJ,OApCD;EAqCH;EApyBL;EAAA;EAAA,+BAsyBejC,QAtyBf,EAsyBiC;EACzB,WAAK9D,cAAL,CAAoB8D,QAApB,EAA8B5D,YAA9B,CAA2CqE,WAA3C,GAAyD,KAAK9O,WAAL,CAAiBqO,QAAjB,CAAzD;EACA,WAAK9D,cAAL,CAAoB8D,QAApB,EAA8B3D,SAA9B,CAAwCvQ,KAAxC,GAAgD,EAAhD;;EACA,UAAI,KAAKuM,YAAL,CAAkB7G,cAAlB,CAAiCwO,QAAjC,CAAJ,EAA+C;EAC3C,aAAK,IAAMkC,OAAX,IAAsB,KAAK7J,YAAL,CAAkB2H,QAAlB,CAAtB,EAAmD;EAC/C,cAAI,KAAK3H,YAAL,CAAkB2H,QAAlB,EAA4BxO,cAA5B,CAA2C0Q,OAA3C,CAAJ,EAAwD;EACpD,iBAAK7J,YAAL,CAAkB2H,QAAlB,EAA4BkC,OAA5B,IAAuC,KAAvC;EACH;EACJ;EACJ;EACJ;EAhzBL;EAAA;EAAA,oDAkzBoCpW,KAlzBpC,EAkzBmD;EAC3C,UAAG,KAAKuM,YAAL,CAAkB,KAAK3I,QAAL,CAAcE,cAAhC,EAAgD4I,SAAhD,KAA8D,KAAjE,EACA;EACI,aAAKwG,yBAAL,GAAiClT,KAAjC;;EACA,YAAG,KAAKmI,WAAR,EAAoB;EAChB,cAAInI,KAAK,KAAK,IAAd,EAAmB;EACfmC,YAAAA,EAAE,CAAC3C,YAAH,CACI,KAAK4Q,cAAL,CAAoB,KAAKxM,QAAL,CAAcU,YAAlC,EAAgD+L,SADpD,EAEI,KAAKD,cAAL,CAAoB,KAAKxM,QAAL,CAAcW,WAAlC,EAA+C8L,SAFnD;EAIA,iBAAK1E,cAAL,CAAoB,CAApB,IAAyB,KAAK/H,QAAL,CAAcW,WAAvC;EACA,iBAAKoH,cAAL,CAAoB,CAApB,IAAyB,KAAK/H,QAAL,CAAcU,YAAvC;EACA,iBAAK8Q,mBAAL;EACH,WARD,MAQK;EACDjT,YAAAA,EAAE,CAAC3C,YAAH,CACI,KAAK4Q,cAAL,CAAoB,KAAKxM,QAAL,CAAcW,WAAlC,EAA+C8L,SADnD,EAEI,KAAKD,cAAL,CAAoB,KAAKxM,QAAL,CAAcU,YAAlC,EAAgD+L,SAFpD;EAIA,iBAAK1E,cAAL,CAAoB,CAApB,IAAyB,KAAK/H,QAAL,CAAcW,WAAvC;EACA,iBAAKoH,cAAL,CAAoB,CAApB,IAAyB,KAAK/H,QAAL,CAAcU,YAAvC;EACA,iBAAK+Q,kBAAL;EACH;;EACD,eAAKR,sBAAL;EACH,SAnBD,MAoBI;EACA,eAAKO,mBAAL;EACH;;EACD5T,QAAAA,YAAY,CAACuQ,IAAb,CAAkBvQ,YAAY,CAAC2N,eAA/B,EAAgD,IAAItN,eAAK,CAACwU,SAAV,CAAoB;EAChEhH,UAAAA,IAAI,EAAE;EACFiH,YAAAA,YAAY,EAAE,KAAKpS,aAAL,CAAmBR,GAD/B;EAEF6S,YAAAA,OAAO,EAAE,KAAKrS,aAAL,CAAmBG;EAF1B;EAD0D,SAApB,CAAhD;EAMH,OAhCD,MAkCA;EACI,aAAKmS,mBAAL;EACH;EACJ;EAx1BL;EAAA;EAAA,mCA01BmBC,QA11BnB,EA21BI;EACIjV,MAAAA,YAAY,CAACuQ,IAAb,CAAkBvQ,YAAY,CAAC2N,eAA/B,EAAgD,IAAItN,eAAK,CAACwU,SAAV,CAAoB;EAChEhH,QAAAA,IAAI,EAAE;EACFiH,UAAAA,YAAY,EAAE,KAAKhH,eADjB;EAEFiH,UAAAA,OAAO,EAAEE;EAFP;EAD0D,OAApB,CAAhD;EAMH;EAl2BL;EAAA;EAAA,0CAo2B0BpH,IAp2B1B,EAq2BI;EACI,UAAGlN,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB2B,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEkH,OAAxB,CAAH,EAAoC;EAChC,aAAKjH,eAAL,GAAuBD,IAAI,CAACkH,OAA5B;EACAlH,QAAAA,IAAI,CAACkH,OAAL,CAAavE,SAAb,CAAuBmC,MAAvB,CAA8BlS,MAAM,CAAC,QAAD,CAApC;EACH;;EACD,UAAGE,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB2B,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEiH,YAAxB,CAAH,EAAyC;EACrCjH,QAAAA,IAAI,CAACiH,YAAL,CAAkBtE,SAAlB,CAA4BC,GAA5B,CAAgChQ,MAAM,CAAC,QAAD,CAAtC;EACH;EACJ;EA72BL;EAAA;EAAA,0CA+2ByB;EACjB,UAAGE,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB,KAAK4B,eAAvB,CAAH,EAA2C;EACvC,YAAM1K,OAAO,GAAG,KAAK0K,eAAL,CAAqB+E,gBAArB,YAA0CpS,MAAM,CAAC,yBAAD,CAAhD,EAAhB;EACA2C,QAAAA,OAAO,CAACtE,MAAR,IAAkBsE,OAAO,CAACW,OAAR,CAAgB,UAAAmR,MAAM;EAAA,iBAAIA,MAAM,CAACC,eAAP,CAAuB,UAAvB,CAAJ;EAAA,SAAtB,CAAlB;EACH;EACJ;EAp3BL;EAAA;EAAA,4CAs3B2B;EACnB,UAAGxU,EAAE,CAAC7C,IAAH,CAAQoO,SAAR,CAAkB,KAAK4B,eAAvB,CAAH,EAA2C;EACvC,YAAM1K,OAAO,GAAG,KAAK0K,eAAL,CAAqB+E,gBAArB,YAA0CpS,MAAM,CAAC,yBAAD,CAAhD,EAAhB;EACA2C,QAAAA,OAAO,CAACtE,MAAR,IAAkBsE,OAAO,CAACW,OAAR,CAAgB,UAAAmR,MAAM;EAAA,iBAAIA,MAAM,CAACE,YAAP,CAAoB,UAApB,EAAgC,IAAhC,CAAJ;EAAA,SAAtB,CAAlB;EACH;EACJ;EA33BL;EAAA;EAAA,2BA63BWC,KA73BX,EA63BkB;EACVA,MAAAA,KAAK,CAACC,cAAN;;EAEA,UAAI,KAAKN,mBAAL,EAAJ,EACA;EACI,aAAK1G,WAAL,GAAmB,KAAKA,WAAL,CAAiB6E,WAAjB,GAA+B,EAAlD,GAAuD,KAAK,CAA5D;EACA,aAAKzF,YAAL,CAAkB,IAAlB;EACA,aAAK6H,SAAL,qBAAqB,KAAKxK,YAAL,CAAkBU,UAAvC;;EAEA,aAAK,IAAIzH,GAAT,IAAgB,KAAK4K,cAArB,EACA;EACI,cAAI,KAAKA,cAAL,CAAoB1K,cAApB,CAAmCF,GAAnC,KAA2C,KAAK+G,YAAL,CAAkB7G,cAAlB,CAAiCF,GAAjC,CAA/C,EACA;EACI,iBAAK4K,cAAL,CAAoB5K,GAApB,EAAyB+K,SAAzB,CAAmCvQ,KAAnC,GAA2CgX,IAAI,CAACC,SAAL,CAAe,KAAK1K,YAAL,CAAkB/G,GAAlB,CAAf,CAA3C;EACA,iBAAKuR,SAAL,mCAAqB,KAAKA,SAA1B,GAAwC,KAAKxK,YAAL,CAAkB/G,GAAlB,CAAxC;EACH;EACJ;;EAED,YAAI,KAAK2G,cAAL,KAAwB,KAAKD,YAAL,CAAkBgL,IAA9C,EAAmD;EAC/C,eAAKC,eAAL;EACA,eAAKjI,YAAL,CAAkB,KAAlB;EACH,SAHD,MAKA;EACI,eAAKkI,SAAL;EACH;EACJ,OAvBD,MAyBA;EACI,YAAI,KAAKtH,WAAT,EAAqB;EACjB,eAAKA,WAAL,CAAiB6E,WAAjB,GAA+BxS,EAAE,CAACmB,OAAH,CAAW,sCAAX,CAA/B;EACH,SAFD,MAGK;EACD,eAAKsL,eAAL,CAAqBzM,EAAE,CAACmB,OAAH,CAAW,sCAAX,CAArB;EACH;EACJ;EACJ;EAj6BL;EAAA;EAAA,sCAm6BoC;EAAA;;EAAA,UAAfuT,KAAe,uEAAP,KAAO;EAC5BA,MAAAA,KAAK,IAAIA,KAAK,CAACC,cAAN,EAAT;EAEA,WAAKhH,WAAL,CAAiB6E,WAAjB,GAA+B,EAA/B;EAEAxS,MAAAA,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,wDAAlB,EAA4E;EACxE9C,QAAAA,IAAI,EAAE;EACFlE,UAAAA,KAAK,EAAE,KAAK4L,SAAL,CAAe5L,KADpB;EAEFC,UAAAA,KAAK,EAAE,KAAK2L,SAAL,CAAe3L,KAFpB;EAGFgH,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EAHN;EADkE,OAA5E,EAOCjB,IAPD,CAOM,UAAA1Q,MAAM,EAAI;EAAA;;EACZ,QAAA,OAAI,CAAC2W,WAAL,4CAAmB3W,MAAM,CAAC2O,IAA1B,iDAAmB,aAAagI,WAAhC,yEAA+C,CAAE,IAAIzG,IAAJ,EAAD,CAAaE,OAAb,KAAyB,IAA1B,EAAgCwG,OAAhC,CAAwC,CAAxC,IAA6C,EAA5F;;EACA,QAAA,OAAI,CAACC,sBAAL;EACH,OAVD,WAWO,UAAA7W,MAAM,EAAI;EAAA;;EACb,QAAA,OAAI,CAACoP,WAAL,CAAiB6E,WAAjB,GAA+B,mBAAAjU,MAAM,CAAC8W,MAAP,qFAAgB,CAAhB,qEAAoBlU,OAApB,IAA8BnB,EAAE,CAACmB,OAAH,CAAW,wCAAX,CAA7D;;EACA,QAAA,OAAI,CAACsL,eAAL,CAAqBlO,MAArB;EACH,OAdD;EAeH;EAv7BL;EAAA;EAAA,6CAy7B6B;EACrB,WAAKmK,cAAL,IAAuB,KAAKA,cAAL,CAAoBsJ,MAApB,EAAvB;EACA,WAAKtJ,cAAL,GAAsB,KAAKuC,QAAL,CAAcqK,oBAAd,EAAtB;EACA,WAAKvH,IAAL,CAAU8B,SAAV,CAAoBC,GAApB,CAAwBhQ,MAAM,CAAC,oCAAD,CAA9B;EACAE,MAAAA,EAAE,CAACqF,MAAH,CAAU,KAAKqD,cAAf,EAA+B,KAAKqF,IAApC;EACH;EA97BL;EAAA;EAAA,sCAg8BuBwH,IAh8BvB,EAg8B6BvN,kBAh8B7B,EAg8BiDwN,OAh8BjD,EAi8BI;EAAA;;EACI,UAAIxN,kBAAkB,IAAIwN,OAA1B,EAAkC;EAC9BxN,QAAAA,kBAAkB,CAACwK,WAAnB,GAAiC,EAAjC;;EACA,YAAI,CAAA+C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEpX,MAAN,MAAiB,CAArB,EACA;EACIqX,UAAAA,OAAO,CAAC3F,SAAR,CAAkBC,GAAlB,CAAsBhQ,MAAM,CAAC,SAAD,CAA5B;EAEAE,UAAAA,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,0DAAlB,EAA8E;EAC1E9C,YAAAA,IAAI,EAAE;EACFqI,cAAAA,IAAI,EAAEA,IADJ;EAEFtM,cAAAA,KAAK,EAAE,KAAK2L,SAAL,CAAe3L,KAFpB;EAGFgH,cAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EAHN;EADoE,WAA9E,EAOCjB,IAPD,CAOM;EAAA,mBAAM,OAAI,CAACgG,SAAL,EAAN;EAAA,WAPN,WAQO,UAAA1W,MAAM,EAAI;EAAA;;EACbiX,YAAAA,OAAO,CAAC3F,SAAR,CAAkBmC,MAAlB,CAAyBlS,MAAM,CAAC,SAAD,CAA/B;;EACA,gBAAI,oBAAAvB,MAAM,CAAC8W,MAAP,oEAAelX,MAAf,IAAwB,CAA5B,EAA8B;EAC1BI,cAAAA,MAAM,CAAC8W,MAAP,CAAcjS,OAAd,CAAsB,UAAC+L,KAAD,EAAW;EAC7BnH,gBAAAA,kBAAkB,CAACsK,SAAnB,GAAiCtN,MAAM,CAACmK,KAAK,CAACoG,IAAP,CAAN,KAAuB,GAAxB,IAAiCvQ,MAAM,CAACmK,KAAK,CAACoG,IAAP,CAAN,KAAuB,GAAxD,IAAiEvQ,MAAM,CAACmK,KAAK,CAACoG,IAAP,CAAN,KAAuB,GAAzF,aAClBvN,kBAAkB,CAACsK,SADD,SACanD,KAAK,CAAChO,OADnB,YAErBnB,EAAE,CAACmB,OAAH,CAAW,+BAAX,CAFV;EAGH,eAJD;EAKH;EACJ,WAjBD;EAkBH,SAtBD,MAwBA;EACI6G,UAAAA,kBAAkB,CAACwK,WAAnB,GAAiCxS,EAAE,CAACmB,OAAH,CAAW,iCAAX,CAAjC;EACH;EACJ;EACJ;EAh+BL;EAAA;EAAA,gCAk+BgB;EAAA;;EACRnB,MAAAA,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,8CAAlB,EAAkE;EAC9D9C,QAAAA,IAAI,EAAE;EACF7D,UAAAA,MAAM,EAAEwL,IAAI,CAACC,SAAL,CAAe,KAAKF,SAApB,CADN;EAEF3E,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EAFN;EADwD,OAAlE,EAMCjB,IAND,CAMM,UAAC1Q,MAAD,EAAY;EAAA;;EACd,QAAA,OAAI,CAACmK,cAAL,IAAuB,OAAI,CAACA,cAAL,CAAoBsJ,MAApB,EAAvB;;EACA,QAAA,OAAI,CAACjE,IAAL,CAAU8B,SAAV,CAAoBmC,MAApB,CAA2BlS,MAAM,CAAC,oCAAD,CAAjC,EAAyEA,MAAM,CAAC,SAAD,CAA/E;;EAEA,6BAAIvB,MAAM,CAAC2O,IAAX,0CAAI,cAAaiC,KAAjB,EACA;EACI,UAAA,OAAI,CAAC1C,eAAL,CAAqBlO,MAAM,CAAC2O,IAAP,CAAYiC,KAAjC;;EACA,UAAA,OAAI,CAACsG,gBAAL,CAAsB,KAAtB;EACH,SAJD,MAMA;EACI,cAAI,OAAI,CAACxL,YAAL,IAAqB,OAAI,CAAC2K,SAAL,CAAe3L,KAAxC,EACA;EACI,YAAA,OAAI,CAACyM,aAAL;EACH;;EACD,UAAA,OAAI,CAACD,gBAAL,CAAsB,IAAtB;EACH;EACJ,OAvBD,WAwBO,UAAAlX,MAAM;EAAA,eAAI,OAAI,CAACkO,eAAL,CAAqBlO,MAArB,CAAJ;EAAA,OAxBb;EAyBH;EA5/BL;EAAA;EAAA,oCA8/BoB;EACZyB,MAAAA,EAAE,CAAC+P,IAAH,CAAQC,SAAR,CAAkB,sDAAlB,EAA0E;EACtE9C,QAAAA,IAAI,EAAE;EACF7D,UAAAA,MAAM,EAAEwL,IAAI,CAACC,SAAL,CAAe,KAAKF,SAApB,CADN;EAEF3E,UAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EAFN;EADgE,OAA1E,EAKGjB,IALH;EAMH;EArgCL;EAAA;EAAA,0CAugC0BxG,gBAvgC1B,EAugCwD;EAAA;;EAChD,UAAMkN,cAAsB,GAAG3Q,MAAM,CAAC,CAAE,IAAIyJ,IAAJ,EAAD,CAAaE,OAAb,KAAyB,IAA1B,EAAgCwG,OAAhC,CAAwC,CAAxC,CAAD,CAArC;EACA,UAAIS,aAAa,GAAG,KAAKV,WAAL,GAAmBS,cAAvC;EACA,UAAME,QAAQ,GAAGC,WAAW,CAAC,YAAM;EAC/B,YAAIF,aAAa,IAAI,CAArB,EACA;EACIvW,UAAAA,YAAY,CAACM,IAAb,CAAkB8I,gBAAlB,EAAoC,OAApC,EAA6C,OAAI,CAACuM,eAAL,CAAqBrV,IAArB,CAA0B,OAA1B,CAA7C;EACAoW,UAAAA,aAAa,CAACF,QAAD,CAAb;EACH,SAJD,MAMA;EACID,UAAAA,aAAa;EACbnN,UAAAA,gBAAgB,CAAC+J,WAAjB,aAAkCxS,EAAE,CAACmB,OAAH,CAAW,qCAAX,CAAlC,gEACkCyU,aAAa,GAAG,CAAhB,GAAoBA,aAApB,GAAoC,EADtE;EAEH;EACJ,OAZ2B,EAYzB,IAZyB,CAA5B;EAaH;EAvhCL;EAAA;EAAA,qCAyhCqBI,OAzhCrB,EAyhC8B;EAAA;;EACtB,WAAKnI,WAAL,CAAiBgC,SAAjB,CAA2BC,GAA3B,CAA+BhQ,MAAM,CAAC,QAAD,CAArC;EACA,WAAKiO,IAAL,CAAU8B,SAAV,CAAoBC,GAApB,CAAwBhQ,MAAM,CAAC,KAAD,CAA9B;EAEA,UAAMmW,WAAW,GAAG,KAAKpI,WAAL,CAAiBvG,aAAjB,CAA+B,GAA/B,CAApB;;EACA,UAAI2O,WAAJ,EACA;EACI,YAAID,OAAJ,EACA;EACI,cAAMrP,OAAI,GAAG,KAAK+H,oBAAL,CAA0B,KAAKkG,SAAL,CAAe7N,SAAzC,EAAoD,KAApD,CAAb;EACA,cAAMoL,IAAI,GAAG,KAAKzD,oBAAL,CAA0B,KAAKkG,SAAL,CAAe7N,SAAzC,EAAoD,IAApD,CAAb;EACA,cAAMmP,MAAM,GAAG,KAAKtB,SAAL,CAAehK,UAA9B;EACAqL,UAAAA,WAAW,CAAC3D,SAAZ,aAA2BtS,EAAE,CAACmB,OAAH,CAAW,iCAAX,CAA3B,4DAC+BwF,OAD/B,cACuCwL,IADvC,4DAE+BnS,EAAE,CAACmB,OAAH,CAAW,gCAAX,CAF/B,gBAEiF+U,MAFjF;EAGAD,UAAAA,WAAW,CAACpG,SAAZ,CAAsBC,GAAtB,CAA0BhQ,MAAM,CAAC,SAAD,CAAhC;EACA,eAAKqW,eAAL;EACH,SAVD,MAYA;EACIF,UAAAA,WAAW,CAAC5Q,MAAZ,CAAmB,KAAK+Q,gBAAL,EAAnB;EACAH,UAAAA,WAAW,CAACpG,SAAZ,CAAsBC,GAAtB,CAA0BhQ,MAAM,CAAC,OAAD,CAAhC;EACAuW,UAAAA,UAAU,CAAC,YAAI;EACX,YAAA,OAAI,CAACC,MAAL;EACH,WAFS,EAEP,IAFO,CAAV;EAGH;EACJ;EACJ;EApjCL;EAAA;EAAA,sCAsjCqB;EAAA;;EACb,WAAKlJ,QAAL,CAAcyC,SAAd,CAAwBmC,MAAxB,CAA+BlS,MAAM,CAAC,QAAD,CAArC;EACA,WAAKsN,QAAL,CAAcyC,SAAd,CAAwBC,GAAxB,CAA4BhQ,MAAM,CAAC,SAAD,CAAlC;EACAuW,MAAAA,UAAU,CAAC,YAAI;EACX,QAAA,OAAI,CAACC,MAAL;EACH,OAFS,EAEP,IAFO,CAAV;EAGH;EA5jCL;EAAA;EAAA,6BA8jCyB;EAAA,UAAd5B,KAAc,uEAAN,KAAM;EACjBA,MAAAA,KAAK,IAAIA,KAAK,CAACC,cAAN,EAAT;EACA,WAAKpH,OAAL,CAAasC,SAAb,CAAuBmC,MAAvB,CAA8BlS,MAAM,CAAC,QAAD,CAApC;EACA,WAAKwJ,SAAL,GAAiB,KAAjB;EACA,WAAKsD,MAAL,GAAiB,KAAjB;EACAyJ,MAAAA,UAAU,CAAC,KAAKE,GAAL,CAAS5W,IAAT,CAAc,IAAd,CAAD,EAAsB,GAAtB,CAAV;EACH;EApkCL;EAAA;EAAA,uCAskCwB;EAAA;;EAChB,aAAOK,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EAClBM,QAAAA,QAAQ,EAAE,CACNP,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACdQ,UAAAA,IAAI,EAAET,EAAE,CAACmB,OAAH,CAAW,2CAAX;EADQ,SAAlB,CADM,EAINnB,EAAE,CAACC,MAAH,CAAU,GAAV,EAAe;EACXC,UAAAA,KAAK,EAAE;EACH6C,YAAAA,IAAI,EAAE;EADH,WADI;EAIXJ,UAAAA,IAAI,EAAE3C,EAAE,CAACmB,OAAH,CAAW,0CAAX,CAJK;EAKX0B,UAAAA,MAAM,EAAE;EACJC,YAAAA,KAAK,EAAE,eAACuF,CAAD;EAAA,qBAAO,OAAI,CAACiO,MAAL,CAAYjO,CAAZ,CAAP;EAAA;EADH;EALG,SAAf,CAJM,EAaNrI,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB;EACdQ,UAAAA,IAAI,EAAET,EAAE,CAACmB,OAAH,CAAW,yCAAX;EADQ,SAAlB,CAbM;EADQ,OAAf,CAAP;EAmBH;EA1lCL;EAAA;EAAA,0CA4lCyB;EACjB,UAAIqV,WAAW,GAAG,IAAlB;;EAEA,UAAI,KAAKlI,cAAL,CAAoBnQ,MAApB,GAA6B,CAAjC,EAAmC;EAC/B,aAAKmQ,cAAL,CAAoBmI,IAApB,CAAyB,UAAC9Y,KAAD,EAAW;EAChC,cAAI,CAACqC,EAAE,CAAC7C,IAAH,CAAQ2T,gBAAR,CAAyBnT,KAAK,CAACE,KAA/B,CAAL,EACA;EAAA;;EACI2Y,YAAAA,WAAW,GAAG,KAAd;EACA,oCAAA7Y,KAAK,CAAC+Y,aAAN,8EAAqB7G,SAArB,CAA+BC,GAA/B,CAAmChQ,MAAM,CAAC,OAAD,CAAzC;EACA,mBAAO,IAAP;EACH,WALD,MAOA;EAAA;;EACI,qCAAAnC,KAAK,CAAC+Y,aAAN,gFAAqB7G,SAArB,CAA+BmC,MAA/B,CAAsClS,MAAM,CAAC,OAAD,CAA5C;EACH;EACJ,SAXD;EAYH;;EACD,aAAO0W,WAAW,IAAI,KAAKG,YAAL,CAAkB,KAAK7H,SAAL,CAAe9F,KAAf,CAAqBoF,SAAvC,CAAtB;EACH;EA9mCL;EAAA;EAAA,iCAgnCiBwI,UAhnCjB,EAgnC4B;EACpB,UAAM5N,KAAK,GAAG4N,UAAU,CAAC/Y,KAAzB;EACA,UAAIgZ,OAAO,GAAG,EAAG,CAAC7N,KAAD,IAAWA,KAAK,CAAC7K,MAAN,KAAiB,KAAK0Q,SAAL,CAAe1Q,MAA9C,CAAd;;EACA,UAAIyY,UAAU,CAACF,aAAX,KAA6B,IAAjC,EAAsC;EAClC,SAACG,OAAD,GACMD,UAAU,CAACF,aAAX,CAAyB7G,SAAzB,CAAmCC,GAAnC,CAAuChQ,MAAM,CAAC,OAAD,CAA7C,CADN,GAEM8W,UAAU,CAACF,aAAX,CAAyB7G,SAAzB,CAAmCmC,MAAnC,CAA0ClS,MAAM,CAAC,OAAD,CAAhD,CAFN;EAGH;;EACD,aAAO+W,OAAP;EACH;EAED;EACJ;EACA;;EA7nCA;EAAA;EAAA,oCA8nCmB;EAAA;;EACX,UAAMC,YAAY,GAAG,KAAKvJ,OAAL,CAAa2E,gBAAb,CAA8B,mBAA9B,CAArB;EACA4E,MAAAA,YAAY,CAAC3Y,MAAb,IAAuB2Y,YAAY,CAAC1T,OAAb,CAAqB,UAACzF,KAAD,EAA6B;EACrEA,QAAAA,KAAK,CAACyU,gBAAN,CAAuB,OAAvB,EAAgC,UAAC/J,CAAD,EAAO;EACnC3K,UAAAA,SAAS,CAAC2K,CAAC,CAACkK,aAAH,EAAkB,OAAI,CAAC1D,SAAvB,CAAT;EACH,SAFD;EAGH,OAJsB,CAAvB;EAKH;EAED;EACJ;EACA;;EAzoCA;EAAA;EAAA,2CA0oC0B;EAClB,UAAMkI,IAAI,GAAG,IAAb;EACA,UAAMC,aAAa,GAAG,KAAKzJ,OAAL,CAAajG,aAAb,CAA2B,wBAA3B,CAAtB;EACA0P,MAAAA,aAAa,CAAC5E,gBAAd,CAA+B,SAA/B,EAA0C,UAAC/J,CAAD,EAAO;EAC7CA,QAAAA,CAAC,CAACsM,cAAF;EACA,eAAO,KAAP;EACH,OAHD;EAIAqC,MAAAA,aAAa,CAAC5E,gBAAd,CAA+B,OAA/B,EAAwC,YAAM;EAC1CpS,QAAAA,EAAE,CAACiX,QAAH,CAAY;EACRC,UAAAA,IAAI,EAAEF,aADE;EAERG,UAAAA,KAAK,EAAEH,aAFC;EAGRI,UAAAA,KAAK,EAAE,KAHC;EAIRC,UAAAA,cAAc,EAAE,wBAAS1Q,OAAT,EAAc;EAC1B,gBAAM2Q,SAAS,GAAI,IAAI7I,IAAJ,CAAS9H,OAAT,CAAD,CAAiBgI,OAAjB,EAAlB;EACAoI,YAAAA,IAAI,CAAC3M,YAAL,CAAkBU,UAAlB,CAA6B5B,QAA7B,GAAwC6N,IAAI,CAACpF,gBAAL,CAAsB2F,SAAtB,CAAxC;EACH;EAPO,SAAZ;EASH,OAVD;EAWH;EAED;EACJ;EACA;;EAhqCA;EAAA;EAAA,sCAiqCqB;EACb,UAAI7N,MAAM,CAAC8F,IAAP,CAAY,KAAKpF,YAAjB,EAA+BhM,MAA/B,GAAwC,CAA5C,EACA;EACI,YAAMlB,KAAK,GAAG+C,EAAE,CAACC,MAAH,CAAU,OAAV,CAAd;EACAhD,QAAAA,KAAK,CAACuV,WAAN,cAAwB1S,MAAM,CAAC,2BAAD,CAA9B,gBAAiEA,MAAM,CAAC,4BAAD,CAAvE;;EACA,aAAK,IAAIuD,GAAT,IAAgB,KAAK8G,YAArB,EAAkC;EAC9B,cAAI,KAAKA,YAAL,CAAkB5G,cAAlB,CAAiCF,GAAjC,CAAJ,EACA;EACI,oBAAQA,GAAR;EACI,mBAAK,0BAAL;EACI,oBAAMkU,IAAI,GAAGlZ,eAAe,CAAC,KAAK8L,YAAL,CAAkB9G,GAAlB,CAAD,CAA5B;;EACA,oBAAIkU,IAAJ,EAAS;EACLta,kBAAAA,KAAK,CAACuV,WAAN,wBAAkC+E,IAAI,CAACvY,CAAvC,wBAAsDuY,IAAI,CAACtY,CAA3D,wBAA0EsY,IAAI,CAACrY,CAA/E;EACH;;EACD;;EACJ,mBAAK,2BAAL;EACI,oBAAMsY,IAAI,GAAGnZ,eAAe,CAAC,KAAK8L,YAAL,CAAkB9G,GAAlB,CAAD,CAA5B;;EACA,oBAAImU,IAAJ,EAAS;EACLva,kBAAAA,KAAK,CAACuV,WAAN,wBAAkCgF,IAAI,CAACxY,CAAvC,yBAAuDwY,IAAI,CAACvY,CAA5D,yBAA4EuY,IAAI,CAACtY,CAAjF;EACH;;EACD;;EACJ;EACIjC,gBAAAA,KAAK,CAACuV,WAAN,cAAwBnP,GAAxB,eAAgC,KAAK8G,YAAL,CAAkB9G,GAAlB,CAAhC;EACA;EAfR;EAiBH;EACJ;;EACDpG,QAAAA,KAAK,CAACuV,WAAN,GAAoBvV,KAAK,CAACuV,WAAN,MAApB;EACA,aAAKjF,OAAL,CAAakK,KAAb,CAAmBxa,KAAnB;EACH;EACJ;EAED;EACJ;EACA;;EAnsCA;EAAA;EAAA,kCAosCkB;EACV,WAAKsQ,OAAL,CAAasC,SAAb,CAAuBiC,MAAvB,CAA8BhS,MAAM,CAAC,QAAD,CAApC;EACA,WAAKoK,gBAAL,GAAwB,KAAKkD,QAAL,CAAcyC,SAAd,CAAwBiC,MAAxB,CAA+B,QAA/B,CAAxB,GACM,KAAK1E,QAAL,CAAcyC,SAAd,CAAwBiC,MAAxB,CAA+BhS,MAAM,CAAC,QAAD,CAArC,CADN;;EAEA,UAAI,CAAC,KAAK8M,MAAV,EAAiB;EACb,aAAK9F,KAAL;EACH;EACJ;EAED;EACJ;EACA;EACA;;EAhtCA;EAAA;EAAA,mCAitC2B;EAAA,UAAV4Q,EAAU,uEAAL,IAAK;EACnBA,MAAAA,EAAE,GAAI,KAAK3J,IAAL,CAAU8B,SAAV,CAAoBC,GAApB,CAAwBhQ,MAAM,CAAC,SAAD,CAA9B,CAAJ,GACI,KAAKiO,IAAL,CAAU8B,SAAV,CAAoBmC,MAApB,CAA2BlS,MAAM,CAAC,SAAD,CAAjC,CADN;EAEH;EAED;EACJ;EACA;EACA;EACA;;EA1tCA;EAAA;EAAA,qCA2tCsBwX,SA3tCtB,EA2tCiC;EACzB,UAAM3Q,OAAI,GAAG,KAAKO,YAAL,CAAkBoQ,SAAlB,CAAb;EAEA,uBAAU3Q,OAAI,CAACgR,IAAf,cAAuBhR,OAAI,CAACiR,KAA5B,cAAqCjR,OAAI,CAACH,GAA1C,cAAiDG,OAAI,CAACkR,KAAtD,cAA+DlR,OAAI,CAACmR,OAApE;EACH;EAED;EACJ;EACA;EACA;EACA;EACA;EACA;;EAvuCA;EAAA;EAAA,yCAwuC0BR,SAxuC1B,EAwuCyE;EAAA,UAApCS,QAAoC,uEAAzB,KAAyB;EAAA,UAAlBC,QAAkB,uEAAP,KAAO;EACjE,UAAMrR,OAAI,GAAG,KAAKO,YAAL,CAAkBoQ,SAAlB,CAAb;;EAEA,UAAIS,QAAJ,EAAa;EACT,yBAAUpR,OAAI,CAACkR,KAAf,cAAwBlR,OAAI,CAACmR,OAA7B;EACH;;EACD,UAAIE,QAAJ,EAAa;EACT,yBAAUrR,OAAI,CAACH,GAAf,cAAsBG,OAAI,CAACiR,KAA3B,cAAoCjR,OAAI,CAACgR,IAAzC;EACH;;EACD,uBAAUhR,OAAI,CAACH,GAAf,cAAsBG,OAAI,CAACiR,KAA3B,cAAoCjR,OAAI,CAACgR,IAAzC;EACH;EAED;EACJ;EACA;EACA;EACA;;EAxvCA;EAAA;EAAA,iCAyvCiBM,cAzvCjB,EAyvCgC;EACxB,UAAMtR,OAAI,GAAG,IAAI8H,IAAJ,CAASwJ,cAAT,CAAb;EAEA,UAAIzR,GAAG,aAAMG,OAAI,CAACuR,OAAL,EAAN,CAAP;;EACA,UAAIlT,MAAM,CAACwB,GAAD,CAAN,GAAY,EAAhB,EAAoB;EAChBA,QAAAA,GAAG,cAAOA,GAAP,CAAH;EACH;;EAED,UAAIoR,KAAK,aAAMjR,OAAI,CAACwR,QAAL,KAAgB,CAAtB,CAAT;;EACA,UAAInT,MAAM,CAAC4S,KAAD,CAAN,GAAc,EAAlB,EAAsB;EAClBA,QAAAA,KAAK,cAAOA,KAAP,CAAL;EACH;;EAED,UAAIC,KAAK,aAAMlR,OAAI,CAACyR,QAAL,EAAN,CAAT;;EACA,UAAIpT,MAAM,CAAC6S,KAAD,CAAN,GAAc,EAAlB,EAAsB;EAClBA,QAAAA,KAAK,cAAOA,KAAP,CAAL;EACH;;EAED,UAAIC,OAAO,aAAMnR,OAAI,CAACkL,UAAL,EAAN,CAAX;;EACA,UAAI7M,MAAM,CAAC8S,OAAD,CAAN,GAAgB,EAApB,EAAwB;EACpBA,QAAAA,OAAO,cAAOA,OAAP,CAAP;EACH;;EAED,UAAIO,OAAO,aAAM1R,OAAI,CAAC2R,UAAL,EAAN,CAAX;;EACA,UAAItT,MAAM,CAACqT,OAAD,CAAN,GAAgB,EAApB,EAAwB;EACpBA,QAAAA,OAAO,cAAOA,OAAP,CAAP;EACH;;EAED,aAAO;EACH,eAAO7R,GADJ;EAEH,iBAASoR,KAFN;EAGH,gBAAQjR,OAAI,CAAC4R,WAAL,EAHL;EAIH,iBAASV,KAJN;EAKH,mBAAWC,OALR;EAMH,mBAAWO,OANR;EAOH,mBAAW,KAAKG,OAAL,CAAa7R,OAAI,CAAC8R,cAAL,CAAoB,IAApB,EAA0B;EAACC,UAAAA,OAAO,EAAE;EAAV,SAA1B,CAAb;EAPR,OAAP;EASH;EAED;EACJ;EACA;EACA;EACA;;EApyCA;EAAA;EAAA,4BAqyCYC,GAryCZ,EAqyCiB;EACT,UAAI,CAACA,GAAL,EAAU,OAAOA,GAAP;EAEV,aAAOA,GAAG,CAAC,CAAD,CAAH,CAAOnT,WAAP,KAAuBmT,GAAG,CAACC,KAAJ,CAAU,CAAV,CAA9B;EACH;EAED;EACJ;EACA;EACA;;EA9yCA;EAAA;EAAA,oCA+yCoB7F,GA/yCpB,EA+yCyB;EACjB,UAAIA,GAAG,CAACsC,MAAJ,IAAc3B,KAAK,CAACC,OAAN,CAAcZ,GAAG,CAACsC,MAAlB,CAAd,IAA2CtC,GAAG,CAACsC,MAAJ,CAAWlX,MAAX,GAAoB,CAAnE,EACA;EACI4U,QAAAA,GAAG,CAACsC,MAAJ,CAAWjS,OAAX,CAAmB,UAAA+L,KAAK,EAAI;EACxB0J,UAAAA,OAAO,CAACC,GAAR,WAAe9Y,EAAE,CAACmB,OAAH,CAAW,+BAAX,CAAf,gBAAgEgO,KAAK,CAAChO,OAAtE;EACH,SAFD;EAGH,OALD,MAOA;EAAA;;EACI0X,QAAAA,OAAO,CAACC,GAAR,CAAY9Y,EAAE,CAACmB,OAAH,CAAW,+BAAX,IAA8C,MAA1D,kBAAkE4R,GAAG,CAAC5R,OAAtE,uDAAiF4R,GAAjF;EACH;EACJ;EAED;EACJ;EACA;;EA9zCA;EAAA;EAAA,oCA+zCoBgG,YA/zCpB,EAg0CI;EACI,aAAO;EACHtU,QAAAA,UAAU,EAAU,uCADjB;EAEHpE,QAAAA,SAAS,EAAW,iCAFjB;EAGHkE,QAAAA,cAAc,EAAMwU,YAAY,CAAC,4BAAD,CAH7B;EAIHvU,QAAAA,UAAU,EAAUuU,YAAY,CAAC,oBAAD,CAJ7B;EAKHvY,QAAAA,MAAM,EAAcuY,YAAY,CAAC,kBAAD,CAL7B;EAMHrL,QAAAA,gBAAgB,EAAIqL,YAAY,CAAC,wBAAD,CAN7B;EAOHvW,QAAAA,aAAa,EAAOuW,YAAY,CAAC,0BAAD,CAP7B;EAQHrW,QAAAA,WAAW,EAASqW,YAAY,CAAC,yBAAD,CAR7B;EASH9V,QAAAA,gBAAgB,EAAI8V,YAAY,CAAC,0BAAD,CAT7B;EAUHC,QAAAA,UAAU,EAAUD,YAAY,CAAC,wBAAD,CAV7B;EAWHE,QAAAA,aAAa,EAAOF,YAAY,CAAC,2BAAD,CAX7B;EAYHpQ,QAAAA,gBAAgB,EAAIoQ,YAAY,CAAC,uCAAD,CAZ7B;EAaHzX,QAAAA,WAAW,EAAE;EACTC,UAAAA,GAAG,EAAK,2BADC;EAETW,UAAAA,GAAG,EAAK,2BAFC;EAGTD,UAAAA,KAAK,EAAG;EAHC;EAbV,OAAP;EAmBH;EAp1CL;EAAA;EAAA;;ECRAjC,EAAE,CAAC+P,IAAH,CAAQmJ,kBAAR,CAA2B,0BAA3B,EAAuD,WAAvD,EAAoE;EAChEC,EAAAA,IAAI,EAAE,MAD0D;EAEhEjM,EAAAA,IAAI,EAAE;EACF+C,IAAAA,MAAM,EAAEjQ,EAAE,CAACkQ,aAAH;EADN;EAF0D,CAApE,EAMCjB,IAND,CAMM,UAAUmK,QAAV,EACN;EACI,MAAMC,QAAQ,GAAGrZ,EAAE,CAACsZ,SAAH,CAAa,sBAAb,CAAjB;EACAD,EAAAA,QAAQ,CAACjQ,gBAAT,GAA4B,IAAIA,gBAAJ,CAAqBgQ,QAAQ,CAAClM,IAA9B,CAA5B;EACAmM,EAAAA,QAAQ,CAACjQ,gBAAT,CAA0BmN,GAA1B;EACH,CAXD,WAYO,UAAUlO,CAAV,EACP;EACI,MAAIA,CAAC,CAACgN,MAAF,IAAYrV,EAAE,CAAC7C,IAAH,CAAQwW,OAAR,CAAgBtL,CAAC,CAACgN,MAAlB,CAAhB,EACI;EACI,QAAIkE,SAAS,GAAG,EAAhB;EACAH,IAAAA,QAAQ,CAAC/D,MAAT,CAAgBjS,OAAhB,CAAwB,UAAA+L,KAAK,EAAI;EAC7BoK,MAAAA,SAAS,aAAMA,SAAN,cAAmBpK,KAAK,CAACoG,IAAzB,gBAAmCpG,KAAK,CAAChO,OAAzC,MAAT;EACH,KAFD;EAGA0X,IAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;EACH,GAPL,MASI;EACIV,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCzQ,CAAtC;EACH;EACR,CA1BD;;;;"}