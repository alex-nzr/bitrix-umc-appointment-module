{"version":3,"file":"admin.bundle.js","sources":["../src/admin.js"],"sourcesContent":["'use strict';\r\n\r\nimport \"./admin.css\";\r\nimport \"color_picker\";\r\n\r\nexport const Admin = {\r\n    ajaxUrl: '/bitrix/services/main/ajax.php',\r\n    controller: 'firstbit:appointment.oneCController',\r\n    requestParams: {\r\n        method: 'POST',\r\n        body: '',\r\n    },\r\n\r\n    deleteRecord: function (id, gridId, orderUid) {\r\n        this.runAction(id, gridId, orderUid, 'deleteOrder')\r\n    },\r\n\r\n    updateRecord: function (id, gridId, orderUid) {\r\n        this.runAction(id, gridId, orderUid, 'getOrderStatus')\r\n    },\r\n\r\n    runAction: function (id, gridId, orderUid, actionToCall) {\r\n        const grid = BX.Main.gridManager.getInstanceById(gridId);\r\n        grid && grid.tableFade();\r\n\r\n        const action = `${this.controller}.${actionToCall}`;\r\n\r\n        this.requestParams.body = this.createFormData({id, orderUid});\r\n\r\n        fetch(`${this.ajaxUrl}?action=${action}`, this.requestParams)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }else{\r\n                    console.log(`Error. Status code ${response.status}`);\r\n                }\r\n            })\r\n            .then(json => {\r\n                if (json.status === 'error'){\r\n                    //console.log(json);\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n            .finally(() => (grid && grid.reloadTable()))\r\n    },\r\n\r\n    createFormData: function(argsObject) {\r\n        const formData = new FormData();\r\n\r\n        for (let key in argsObject)\r\n        {\r\n            if (argsObject.hasOwnProperty(key))\r\n            {\r\n                formData.set(key, argsObject[key]);\r\n            }\r\n        }\r\n        formData.set('sessid', BX.bitrix_sessid());\r\n\r\n        return formData;\r\n    },\r\n\r\n    bindColorPickerToNode: function (nodeId, inputId, defaultColor = '') {\r\n        const element = BX(nodeId);\r\n        const input = BX(inputId);\r\n        BX.bind(element, 'click', function () {\r\n            new BX.ColorPicker({\r\n                bindElement: element,\r\n                defaultColor: defaultColor ?? '#FFFFFF',\r\n                allowCustomColor: true,\r\n                onColorSelected: function (color) {\r\n                    input.value = color;\r\n                },\r\n                popupOptions: {\r\n                    angle: true,\r\n                    autoHide: true,\r\n                    closeByEsc: true,\r\n                    events: {\r\n                        onPopupClose: function () {}\r\n                    }\r\n                }\r\n            }).open();\r\n        })\r\n    },\r\n\r\n    activateInputs: function(){\r\n        const inputs = {\r\n            customMainBtnCheckbox: BX('appointment_view_use_custom_main_btn')\r\n        };\r\n\r\n        for (let key in inputs){\r\n            if (inputs.hasOwnProperty(key))\r\n            {\r\n                switch (key) {\r\n                    case \"customMainBtnCheckbox\":\r\n                        if(inputs[key]){\r\n                            this.changeInputsState(inputs[key]);\r\n                            inputs[key].addEventListener('change', () => this.changeInputsState(inputs[key]))\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    changeInputsState: function(checkbox){\r\n        const textInput = BX('appointment_view_custom_main_btn_id');\r\n        const bgColorInput = BX('--appointment-start-btn-bg-color');\r\n        const textColorInput = BX('--appointment-start-btn-text-color');\r\n\r\n        if (checkbox.checked)\r\n        {\r\n            textInput.removeAttribute('disabled');\r\n            bgColorInput.setAttribute('disabled', true);\r\n            textColorInput.setAttribute('disabled', true);\r\n        }\r\n        else\r\n        {\r\n            textInput.setAttribute('disabled', true);\r\n            bgColorInput.removeAttribute('disabled');\r\n            textColorInput.removeAttribute('disabled');\r\n        }\r\n    },\r\n};"],"names":["Admin","ajaxUrl","controller","requestParams","method","body","deleteRecord","id","gridId","orderUid","runAction","updateRecord","actionToCall","grid","BX","Main","gridManager","getInstanceById","tableFade","action","this","createFormData","fetch","then","response","ok","json","console","log","status","e","reloadTable","argsObject","formData","FormData","key","hasOwnProperty","set","bitrix_sessid","bindColorPickerToNode","nodeId","inputId","defaultColor","element","input","bind","ColorPicker","bindElement","allowCustomColor","onColorSelected","color","value","popupOptions","angle","autoHide","closeByEsc","events","onPopupClose","open","activateInputs","inputs","customMainBtnCheckbox","_this","changeInputsState","addEventListener","checkbox","textInput","bgColorInput","textColorInput","checked","removeAttribute","setAttribute"],"mappings":"uFAKaA,EAAQ,CACjBC,QAAS,iCACTC,WAAY,sCACZC,cAAe,CACXC,OAAQ,OACRC,KAAM,IAGVC,aAAc,SAAUC,EAAIC,EAAQC,QAC3BC,UAAUH,EAAIC,EAAQC,EAAU,gBAGzCE,aAAc,SAAUJ,EAAIC,EAAQC,QAC3BC,UAAUH,EAAIC,EAAQC,EAAU,mBAGzCC,UAAW,SAAUH,EAAIC,EAAQC,EAAUG,OACjCC,EAAOC,GAAGC,KAAKC,YAAYC,gBAAgBT,GACjDK,GAAQA,EAAKK,gBAEPC,YAAYC,KAAKlB,uBAAcU,QAEhCT,cAAcE,KAAOe,KAAKC,eAAe,CAACd,GAAAA,EAAIE,SAAAA,IAEnDa,gBAASF,KAAKnB,2BAAkBkB,GAAUC,KAAKjB,eAC1CoB,MAAK,SAAAC,MACEA,EAASC,UACFD,EAASE,OAEhBC,QAAQC,iCAA0BJ,EAASK,YAGlDN,MAAK,SAAAG,GACEA,EAAKG,iBAIN,SAAAC,UAAKH,QAAQC,IAAIE,eACf,kBAAOjB,GAAQA,EAAKkB,kBAGrCV,eAAgB,SAASW,OACfC,EAAW,IAAIC,aAEhB,IAAIC,KAAOH,EAERA,EAAWI,eAAeD,IAE1BF,EAASI,IAAIF,EAAKH,EAAWG,WAGrCF,EAASI,IAAI,SAAUvB,GAAGwB,iBAEnBL,GAGXM,sBAAuB,SAAUC,EAAQC,OAASC,yDAAe,GACvDC,EAAU7B,GAAG0B,GACbI,EAAQ9B,GAAG2B,GACjB3B,GAAG+B,KAAKF,EAAS,SAAS,eAClB7B,GAAGgC,YAAY,CACfC,YAAaJ,EACbD,aAAcA,MAAAA,EAAAA,EAAgB,UAC9BM,kBAAkB,EAClBC,gBAAiB,SAAUC,GACvBN,EAAMO,MAAQD,GAElBE,aAAc,CACVC,OAAO,EACPC,UAAU,EACVC,YAAY,EACZC,OAAQ,CACJC,aAAc,iBAGvBC,WAIXC,eAAgB,sBACNC,EAAS,CACXC,sBAAuB/C,GAAG,oDAGrBqB,MACDyB,EAAOxB,eAAeD,IAGb,0BADDA,EAEGyB,EAAOzB,KACN2B,EAAKC,kBAAkBH,EAAOzB,IAC9ByB,EAAOzB,GAAK6B,iBAAiB,UAAU,kBAAMF,EAAKC,kBAAkBH,EAAOzB,aAP1F,IAAIA,KAAOyB,IAAPzB,IAkBb4B,kBAAmB,SAASE,OAClBC,EAAYpD,GAAG,uCACfqD,EAAerD,GAAG,oCAClBsD,EAAiBtD,GAAG,sCAEtBmD,EAASI,SAETH,EAAUI,gBAAgB,YAC1BH,EAAaI,aAAa,YAAY,GACtCH,EAAeG,aAAa,YAAY,KAIxCL,EAAUK,aAAa,YAAY,GACnCJ,EAAaG,gBAAgB,YAC7BF,EAAeE,gBAAgB"}